{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Search,\r\n  Download,\r\n  Calendar,\r\n  ArrowLeft,\r\n  ChevronDown,\r\n  ChevronRight,\r\n  Eye,\r\n  Upload,\r\n  CheckCircle,\r\n  Clock,\r\n  AlertCircle,\r\n  MapPin,\r\n  TrendingUp,\r\n  Users,\r\n  FileText,\r\n} from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n// Stats Cards Component\r\nconst StatsCards = () => {\r\n  const [stats, setStats] = useState({\r\n    totalApplications: 0,\r\n    currentlyQualified: 0,\r\n    activeCompanies: 0,\r\n    totalPlacements: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:5000/round_tracking/stats/2022`\r\n      );\r\n      setStats(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching stats:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mt-6\">\r\n      <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n        <p className=\"text-sm text-blue-600 font-medium\">Total Applications</p>\r\n        <p className=\"text-2xl font-bold text-blue-900 mt-1\">\r\n          {stats.totalApplications}\r\n        </p>\r\n      </div>\r\n      <div className=\"bg-amber-50 p-4 rounded-lg\">\r\n        <p className=\"text-sm text-amber-600 font-medium\">\r\n          Currently Qualified\r\n        </p>\r\n        <p className=\"text-2xl font-bold text-amber-900 mt-1\">\r\n          {stats.currentlyQualified}\r\n        </p>\r\n      </div>\r\n      <div className=\"bg-emerald-50 p-4 rounded-lg\">\r\n        <p className=\"text-sm text-emerald-600 font-medium\">Active Companies</p>\r\n        <p className=\"text-2xl font-bold text-emerald-900 mt-1\">\r\n          {stats.activeCompanies}\r\n        </p>\r\n      </div>\r\n      <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n        <p className=\"text-sm text-purple-600 font-medium\">Total Placements</p>\r\n        <p className=\"text-2xl font-bold text-purple-900 mt-1\">\r\n          {stats.totalPlacements}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Filter Bar Component\r\nconst FilterBar = ({ filters, onFiltersChange }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\r\n      <div className=\"flex flex-col lg:flex-row gap-4\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search companies or positions...\"\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              value={filters.search}\r\n              onChange={(e) =>\r\n                onFiltersChange({ ...filters, search: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"lg:w-48\">\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            value={filters.status}\r\n            onChange={(e) =>\r\n              onFiltersChange({ ...filters, status: e.target.value })\r\n            }\r\n          >\r\n            <option value=\"all\">All Status</option>\r\n            <option value=\"upcoming\">Upcoming</option>\r\n            <option value=\"ongoing\">Ongoing</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"lg:w-48\">\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            value={filters.jobType}\r\n            onChange={(e) =>\r\n              onFiltersChange({ ...filters, jobType: e.target.value })\r\n            }\r\n          >\r\n            <option value=\"all\">All Job Types</option>\r\n            <option value=\"internship\">Internship</option>\r\n            <option value=\"full_time\">Full Time</option>\r\n            <option value=\"internship_plus_ppo\">Internship + PPO</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Result Upload Modal\r\nconst ResultUploadModal = ({\r\n  eventId,\r\n  onClose,\r\n  companyName,\r\n  positionTitle,\r\n  onResultsUpdated,\r\n}) => {\r\n  const [uploadMethod, setUploadMethod] = useState(\"manual\");\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState(new Set());\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchEventStudents();\r\n  }, [eventId]);\r\n\r\n  const fetchEventStudents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `http://localhost:5000/round_tracking/events/${eventId}/students?status=attended`\r\n      );\r\n      if (response.data.success) {\r\n        setStudents(response.data.students);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      setError(\"Failed to load students\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStudentToggle = (studentId) => {\r\n    const newSelected = new Set(selectedStudents);\r\n    if (newSelected.has(studentId)) {\r\n      newSelected.delete(studentId);\r\n    } else {\r\n      newSelected.add(studentId);\r\n    }\r\n    setSelectedStudents(newSelected);\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      try {\r\n        const csvText = e.target.result;\r\n        const lines = csvText.split(\"\\n\").filter((line) => line.trim());\r\n        const csvData = lines.slice(1).map((line) => line.trim());\r\n\r\n        const response = await axios.post(\r\n          `http://localhost:5000/round_tracking/events/${eventId}/upload-csv`,\r\n          { csvData }\r\n        );\r\n        if (response.data.success) {\r\n          onResultsUpdated?.();\r\n          onClose();\r\n        }\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || \"Failed to process CSV\");\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const qualifiedRegistrationNumbers = students\r\n        .filter((student) => selectedStudents.has(student.id))\r\n        .map((student) => student.registration_number);\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:5000/round_tracking/events/${eventId}/results`,\r\n        {\r\n          qualifiedRegistrationNumbers,\r\n          method: \"manual\",\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        onResultsUpdated?.();\r\n        onClose();\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || \"Failed to update results\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-medium text-gray-900\">\r\n            Upload Round Results\r\n          </h3>\r\n          <p className=\"text-sm text-gray-600\">\r\n            {companyName} - {positionTitle}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"mb-6\">\r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                className={`px-4 py-2 rounded-lg ${uploadMethod === \"manual\" ? \"bg-blue-100 text-blue-700\" : \"bg-gray-100 text-gray-600\"}`}\r\n                onClick={() => setUploadMethod(\"manual\")}\r\n              >\r\n                Manual Selection\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-lg ${uploadMethod === \"file\" ? \"bg-blue-100 text-blue-700\" : \"bg-gray-100 text-gray-600\"}`}\r\n                onClick={() => setUploadMethod(\"file\")}\r\n              >\r\n                File Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {uploadMethod === \"manual\" ? (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {students.length} students attended this round\r\n                </p>\r\n                <div className=\"space-x-2\">\r\n                  <button\r\n                    className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n                    onClick={() =>\r\n                      setSelectedStudents(new Set(students.map((s) => s.id)))\r\n                    }\r\n                  >\r\n                    Select All\r\n                  </button>\r\n                  <button\r\n                    className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n                    onClick={() => setSelectedStudents(new Set())}\r\n                  >\r\n                    Clear All\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"max-h-96 overflow-y-auto border rounded-lg\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50 sticky top-0\">\r\n                    <tr>\r\n                      <th className=\"px-4 py-2 text-left\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={\r\n                            selectedStudents.size === students.length &&\r\n                            students.length > 0\r\n                          }\r\n                          onChange={() => {\r\n                            if (selectedStudents.size === students.length) {\r\n                              setSelectedStudents(new Set());\r\n                            } else {\r\n                              setSelectedStudents(\r\n                                new Set(students.map((s) => s.id))\r\n                              );\r\n                            }\r\n                          }}\r\n                        />\r\n                      </th>\r\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                        Name\r\n                      </th>\r\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                        Registration\r\n                      </th>\r\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                        CGPA\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {students.map((student) => (\r\n                      <tr key={student.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-4 py-2\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={selectedStudents.has(student.id)}\r\n                            onChange={() => handleStudentToggle(student.id)}\r\n                          />\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm text-gray-900\">\r\n                          {student.name}\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n                          {student.registration_number}\r\n                        </td>\r\n                        <td className=\"px-4 py-2 text-sm text-gray-600\">\r\n                          {student.cgpa || \"N/A\"}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n                <FileText className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                <div className=\"mt-4\">\r\n                  <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                    <span className=\"mt-2 block text-sm font-medium text-gray-900\">\r\n                      Upload CSV file with qualified registration numbers\r\n                    </span>\r\n                    <input\r\n                      id=\"file-upload\"\r\n                      type=\"file\"\r\n                      accept=\".csv\"\r\n                      className=\"sr-only\"\r\n                      onChange={handleFileUpload}\r\n                    />\r\n                  </label>\r\n                  <p className=\"mt-2 text-xs text-gray-500\">\r\n                    One registration number per line\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"px-6 py-2 text-red-600 bg-red-50 text-sm\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-between\">\r\n          <div className=\"text-sm text-gray-600\">\r\n            {uploadMethod === \"manual\" &&\r\n              `${selectedStudents.size} of ${students.length} students selected`}\r\n          </div>\r\n          <div className=\"space-x-3\">\r\n            <button\r\n              className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n              onClick={onClose}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"px-4 py-2 bg-blue-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-blue-700 disabled:opacity-50\"\r\n              onClick={handleSubmit}\r\n              disabled={\r\n                loading ||\r\n                (uploadMethod === \"manual\" && selectedStudents.size === 0)\r\n              }\r\n            >\r\n              {loading ? \"Processing...\" : \"Update Results\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Rounds Table Component\r\nconst RoundsTable = ({\r\n  events,\r\n  positionId,\r\n  companyName,\r\n  positionTitle,\r\n  onUpdate,\r\n}) => {\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  const handleBulkUpload = (eventId) => {\r\n    setSelectedEvent(eventId);\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const getEventStatusIcon = (event) => {\r\n    if (event.status === \"completed\")\r\n      return <CheckCircle size={14} className=\"text-emerald-500\" />;\r\n    if (event.status === \"ongoing\")\r\n      return <Clock size={14} className=\"text-blue-500\" />;\r\n    return <AlertCircle size={14} className=\"text-slate-400\" />;\r\n  };\r\n\r\n  const getRoundTypeBadge = (roundType) => {\r\n    const types = {\r\n      technical: \"bg-purple-50 text-purple-700 border-purple-200\",\r\n      hr: \"bg-emerald-50 text-emerald-700 border-emerald-200\",\r\n      aptitude: \"bg-blue-50 text-blue-700 border-blue-200\",\r\n      gd: \"bg-orange-50 text-orange-700 border-orange-200\",\r\n      interview: \"bg-indigo-50 text-indigo-700 border-indigo-200\",\r\n    };\r\n    return types[roundType] || \"bg-slate-50 text-slate-700 border-slate-200\";\r\n  };\r\n\r\n  const calculatePercentage = (numerator, denominator) => {\r\n    if (!denominator || denominator === 0) return \"0\";\r\n    return Math.round((numerator / denominator) * 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-slate-200\">\r\n          <thead className=\"bg-slate-50\">\r\n            <tr>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Round Details\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Users size={12} />\r\n                  Eligible\r\n                </div>\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <TrendingUp size={12} />\r\n                  Applied\r\n                </div>\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Attended\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Qualified\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-slate-100 bg-white\">\r\n            {events.map((event, index) => (\r\n              <tr\r\n                key={event.id}\r\n                className=\"hover:bg-slate-50 transition-colors\"\r\n              >\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <div className=\"h-7 w-7 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center\">\r\n                        <span className=\"text-xs font-bold text-white\">\r\n                          {event.round_number || index + 1}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center gap-1.5 mb-1\">\r\n                        <h3 className=\"text-sm font-semibold text-slate-900\">\r\n                          {event.title}\r\n                        </h3>\r\n                        {getEventStatusIcon(event)}\r\n                      </div>\r\n                      {event.event_date && (\r\n                        <div className=\"flex items-center gap-1 text-xs text-slate-600 mt-1\">\r\n                          <Calendar size={11} className=\"text-slate-400\" />\r\n                          <span>\r\n                            {new Date(event.event_date).toLocaleDateString(\r\n                              \"en-US\",\r\n                              {\r\n                                month: \"short\",\r\n                                day: \"numeric\",\r\n                                year: \"numeric\",\r\n                              }\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"text-sm font-semibold text-slate-900\">\r\n                    {event.eligible_count || 0}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-blue-600\">\r\n                      {event.applied_count || 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-slate-500\">\r\n                      {calculatePercentage(\r\n                        event.applied_count,\r\n                        event.eligible_count\r\n                      )}\r\n                      %\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-amber-600\">\r\n                      {event.attended_count || 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-slate-500\">\r\n                      {calculatePercentage(\r\n                        event.attended_count,\r\n                        event.eligible_count\r\n                      )}\r\n                      %\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-emerald-600\">\r\n                      {event.qualified_count || 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-slate-500\">\r\n                      {calculatePercentage(\r\n                        event.qualified_count,\r\n                        event.attended_count\r\n                      )}\r\n                      %\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-blue-700 bg-blue-50 rounded hover:bg-blue-100 transition-colors border border-blue-200\"\r\n                      onClick={() =>\r\n                        window.open(`/events/${event.id}`, \"_blank\")\r\n                      }\r\n                    >\r\n                      <Eye className=\"h-3.5 w-3.5 mr-1\" />\r\n                      View\r\n                    </button>\r\n                    <button\r\n                      className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-white bg-emerald-600 rounded hover:bg-emerald-700 transition-colors\"\r\n                      onClick={() => handleBulkUpload(event.id)}\r\n                    >\r\n                      <Upload className=\"h-3.5 w-3.5 mr-1\" />\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {showUploadModal && (\r\n        <ResultUploadModal\r\n          eventId={selectedEvent}\r\n          onClose={() => setShowUploadModal(false)}\r\n          companyName={companyName}\r\n          positionTitle={positionTitle}\r\n          onResultsUpdated={onUpdate}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Position Section Component\r\nconst PositionSection = ({ position, companyName, onUpdate }) => {\r\n  const formatPackage = (amount) => {\r\n    if (amount == null || isNaN(amount)) return \"Not Disclosed\";\r\n    if (amount >= 10000000) return `₹ ${(amount / 10000000).toFixed(1)} Cr`;\r\n    if (amount >= 100000) return `₹ ${(amount / 100000).toFixed(1)} LPA`;\r\n    return `₹ ${amount.toLocaleString()}`;\r\n  };\r\n\r\n  const renderPackageInfo = () => {\r\n    switch (position.job_type) {\r\n      case \"internship\":\r\n        return (\r\n          <span className=\"text-xs text-slate-600\">\r\n            {formatPackage(position.internship_stipend_monthly)}/month\r\n          </span>\r\n        );\r\n      case \"full_time\":\r\n        return (\r\n          <span className=\"text-xs text-slate-600\">\r\n            {formatPackage(position.package_range)}\r\n          </span>\r\n        );\r\n      case \"internship_plus_ppo\":\r\n        return (\r\n          <>\r\n            <span className=\"text-xs text-slate-600\">\r\n              {formatPackage(position.internship_stipend_monthly)}/month\r\n            </span>\r\n            <span className=\"text-xs text-slate-400\">•</span>\r\n            <span className=\"text-xs text-slate-600\">\r\n              PPO: {formatPackage(position.package_range)}\r\n            </span>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-b border-slate-100 last:border-b-0\">\r\n      <div className=\"px-5 py-3 bg-blue-50/50\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h4 className=\"text-sm font-semibold text-slate-900\">\r\n              {position.position_title}\r\n            </h4>\r\n            <div className=\"flex items-center space-x-3 mt-1\">\r\n              {renderPackageInfo()}\r\n              <span className=\"text-xs text-slate-400\">•</span>\r\n              <span className=\"text-xs text-slate-600\">\r\n                {position.job_type?.replace(/_/g, \" \").toUpperCase()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <p className=\"text-xs text-slate-500\">Selected</p>\r\n            <p className=\"text-base font-semibold text-emerald-600\">\r\n              {position.final_selected_count || 0}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {position.events && position.events.length > 0 ? (\r\n        <RoundsTable\r\n          events={position.events}\r\n          positionId={position.id}\r\n          companyName={companyName}\r\n          positionTitle={position.position_title}\r\n          onUpdate={onUpdate}\r\n        />\r\n      ) : (\r\n        <div className=\"px-5 py-6 text-center text-slate-500\">\r\n          <Calendar size={32} className=\"mx-auto mb-2 text-slate-300\" />\r\n          <p className=\"text-sm\">No rounds scheduled yet</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Company Card Component\r\nconst CompanyCard = ({ company, onToggle, isExpanded, onUpdate }) => {\r\n  const calculateCompanyStatus = () => {\r\n    let hasUpcoming = false;\r\n    let hasOngoing = false;\r\n    let hasCompleted = false;\r\n\r\n    company.positions?.forEach((position) => {\r\n      position.events?.forEach((event) => {\r\n        if (event.status === \"upcoming\") hasUpcoming = true;\r\n        if (event.status === \"ongoing\") hasOngoing = true;\r\n        if (event.status === \"completed\") hasCompleted = true;\r\n      });\r\n    });\r\n\r\n    if (hasOngoing) return \"ongoing\";\r\n    if (hasUpcoming) return \"upcoming\";\r\n    if (hasCompleted) return \"completed\";\r\n    return \"upcoming\";\r\n  };\r\n\r\n  const status = calculateCompanyStatus();\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"ongoing\":\r\n        return \"bg-blue-50 text-blue-700 border-blue-200\";\r\n      case \"completed\":\r\n        return \"bg-emerald-50 text-emerald-700 border-emerald-200\";\r\n      case \"upcoming\":\r\n        return \"bg-amber-50 text-amber-700 border-amber-200\";\r\n      default:\r\n        return \"bg-slate-50 text-slate-700 border-slate-200\";\r\n    }\r\n  };\r\n\r\n  const totalApplications =\r\n    company.positions?.reduce((sum, pos) => {\r\n      const firstRoundEvent = pos.events?.find((e) => e.round_number === 1);\r\n      return sum + (firstRoundEvent?.applied_count || 0);\r\n    }, 0) || 0;\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 overflow-hidden hover:shadow-md transition-shadow\">\r\n      <div\r\n        className=\"px-5 py-3 bg-gradient-to-r from-slate-50 to-white cursor-pointer hover:from-slate-100 hover:to-slate-50 transition-colors\"\r\n        onClick={() => onToggle(company.id)}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            {isExpanded ? (\r\n              <ChevronDown size={18} className=\"text-slate-600\" />\r\n            ) : (\r\n              <ChevronRight size={18} className=\"text-slate-600\" />\r\n            )}\r\n            <div>\r\n              <h3 className=\"text-base font-semibold text-slate-900\">\r\n                {company.company_name}\r\n              </h3>\r\n              <p className=\"text-xs text-slate-500 mt-0.5\">\r\n                {company.positions?.length || 0} positions\r\n              </p>\r\n            </div>\r\n            <span\r\n              className={`px-2.5 py-0.5 rounded-md text-xs font-medium border ${getStatusColor(status)}`}\r\n            >\r\n              {status.charAt(0).toUpperCase() + status.slice(1)}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs text-slate-500\">Applications</p>\r\n              <p className=\"text-base font-semibold text-slate-900\">\r\n                {totalApplications}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && (\r\n        <div className=\"border-t border-slate-200\">\r\n          {company.positions?.map((position) => (\r\n            <PositionSection\r\n              key={position.id}\r\n              position={position}\r\n              companyName={company.company_name}\r\n              onUpdate={onUpdate}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Component\r\nconst RoundTrackingPage = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedCompanies, setExpandedCompanies] = useState(new Set());\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    status: \"all\",\r\n    jobType: \"all\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `http://localhost:5000/round_tracking/companies/2022`\r\n      );\r\n      setCompanies(data.companies);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCompanyToggle = (companyId) => {\r\n    const newExpanded = new Set(expandedCompanies);\r\n    if (newExpanded.has(companyId)) {\r\n      newExpanded.delete(companyId);\r\n    } else {\r\n      newExpanded.add(companyId);\r\n    }\r\n    setExpandedCompanies(newExpanded);\r\n  };\r\n\r\n  const filteredCompanies = companies.filter((company) => {\r\n    const matchesSearch =\r\n      company.company_name\r\n        .toLowerCase()\r\n        .includes(filters.search.toLowerCase()) ||\r\n      company.positions?.some((pos) =>\r\n        pos.position_title.toLowerCase().includes(filters.search.toLowerCase())\r\n      );\r\n\r\n    // Calculate status for filtering\r\n    let status = \"upcoming\";\r\n    company.positions?.forEach((position) => {\r\n      position.events?.forEach((event) => {\r\n        if (event.status === \"ongoing\") status = \"ongoing\";\r\n        else if (event.status === \"completed\" && status !== \"ongoing\")\r\n          status = \"completed\";\r\n      });\r\n    });\r\n\r\n    const matchesStatus = filters.status === \"all\" || status === filters.status;\r\n    const matchesJobType =\r\n      filters.jobType === \"all\" ||\r\n      company.positions?.some((pos) => pos.job_type === filters.jobType);\r\n\r\n    return matchesSearch && matchesStatus && matchesJobType;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading round data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\r\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-6 max-w-md w-full\">\r\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">\r\n            Error Loading Data\r\n          </h3>\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchData}\r\n            className=\"mt-4 px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n      <div className=\"max-w-7xl mx-auto p-6\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            <div className=\"flex items-start gap-4\">\r\n              <button\r\n                onClick={() => window.history.back()}\r\n                className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              >\r\n                <ArrowLeft className=\"h-6 w-6 text-gray-600\" />\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  Round Tracking\r\n                </h1>\r\n                <p className=\"text-gray-600\">\r\n                  Monitor student progress through interview rounds\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <button className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2.5 rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md\">\r\n                <Download className=\"h-4 w-4\" />\r\n                Export Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <StatsCards />\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <FilterBar filters={filters} onFiltersChange={setFilters} />\r\n\r\n        {/* Companies List */}\r\n        <div className=\"space-y-4\">\r\n          {filteredCompanies.length > 0 ? (\r\n            filteredCompanies.map((company) => (\r\n              <CompanyCard\r\n                key={company.id}\r\n                company={company}\r\n                onToggle={handleCompanyToggle}\r\n                isExpanded={expandedCompanies.has(company.id)}\r\n                onUpdate={fetchData}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\r\n              <Calendar size={48} className=\"mx-auto mb-4 text-gray-300\" />\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                No Companies Found\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {filters.search ||\r\n                filters.status !== \"all\" ||\r\n                filters.jobType !== \"all\"\r\n                  ? \"Try adjusting your filters to see more results.\"\r\n                  : \"No companies have scheduled rounds yet.\"}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundTrackingPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}