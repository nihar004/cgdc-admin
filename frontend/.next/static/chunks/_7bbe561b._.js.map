{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy%20-%20Copy/soetcgdc/frontend/context/EmailContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst EmailContext = createContext();\r\n\r\nexport const EmailProvider = ({ children }) => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch templates with axios\r\n  const fetchTemplates = async () => {\r\n    try {\r\n      const { data } = await axios.get(`${backendUrl}/emails/email-templates`, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      if (data.success) {\r\n        const flatTemplates = data.groupedTemplates.reduce((acc, group) => {\r\n          return [\r\n            ...acc,\r\n            ...group.templates.map((template) => ({\r\n              ...template,\r\n              category: group.category,\r\n              cc_emails: template.cc_emails\r\n                ? typeof template.cc_emails === \"string\"\r\n                  ? JSON.parse(template.cc_emails)\r\n                  : template.cc_emails\r\n                : [],\r\n            })),\r\n          ];\r\n        }, []);\r\n        setTemplates(flatTemplates);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch templates:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch Logs with axios\r\n  const fetchLogs = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${backendUrl}/emails/email-logs?page=1&limit=50`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      if (data.success) {\r\n        setLogs(data.logs);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch logs:\", error);\r\n    }\r\n  };\r\n\r\n  // Send email to filtered students with axios\r\n  const sendEmailToFilteredStudents = async (emailData) => {\r\n    setLoading(true);\r\n    const requestId = `ctx-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n    try {\r\n      // Convert to FormData\r\n      const formData = new FormData();\r\n\r\n      // Manually append each field\r\n      formData.append(\"title\", emailData.title || \"\");\r\n      formData.append(\"subject\", emailData.subject || \"\");\r\n      formData.append(\"body\", emailData.body || \"\");\r\n      formData.append(\"sender_email\", emailData.sender_email || \"\");\r\n      formData.append(\"to_emails\", JSON.stringify(emailData.to_emails || []));\r\n      formData.append(\"cc_emails\", JSON.stringify(emailData.cc_emails || []));\r\n      formData.append(\r\n        \"student_ids\",\r\n        JSON.stringify(emailData.student_ids || [])\r\n      );\r\n      formData.append(\"message_id\", emailData.message_id || \"\");\r\n      formData.append(\"parent_message_id\", emailData.parent_message_id || \"\");\r\n      formData.append(\"position_id\", emailData.position_id || \"\");\r\n      formData.append(\r\n        \"recipient_type\",\r\n        emailData.recipient_type || \"registered\"\r\n      );\r\n\r\n      if (emailData.template_id) {\r\n        formData.append(\"template_id\", emailData.template_id);\r\n      }\r\n\r\n      if (emailData.excluded_template_attachments) {\r\n        formData.append(\r\n          \"excluded_template_attachments\",\r\n          JSON.stringify(emailData.excluded_template_attachments)\r\n        );\r\n      }\r\n\r\n      // Handle manual attachments if present\r\n      if (\r\n        emailData.manual_attachments &&\r\n        Array.isArray(emailData.manual_attachments)\r\n      ) {\r\n        emailData.manual_attachments.forEach((file, index) => {\r\n          formData.append(\"manual_attachments\", file);\r\n        });\r\n      }\r\n      const response = await axios.post(\r\n        `${backendUrl}/emails/email-logs/send/students`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        await fetchLogs();\r\n        return {\r\n          success: true,\r\n          data: response.data,\r\n          message: `Email sent successfully to ${response.data.emailResults.successful} recipients`,\r\n        };\r\n      }\r\n\r\n      return { success: false, message: response.data.error };\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(`[${requestId}] Response status:`, error.response.status);\r\n        console.error(`[${requestId}] Response data:`, error.response.data);\r\n      }\r\n      if (error.request) {\r\n        console.error(`[${requestId}] Request made but no response`);\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        message:\r\n          error.response?.data?.error ||\r\n          error.message ||\r\n          \"Failed to send email\",\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Create template with axios\r\n  const createTemplate = async (formData) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${backendUrl}/emails/email-templates`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        await fetchTemplates();\r\n        return { success: true, message: data.message };\r\n      }\r\n      return { success: false, message: data.error };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.error || error.message,\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update template with axios\r\n  const updateTemplate = async (id, formData) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.put(\r\n        `${backendUrl}/emails/email-templates/${id}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (data.success) {\r\n        await fetchTemplates();\r\n        return { success: true, message: data.message };\r\n      }\r\n      return { success: false, message: data.error };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.error || error.message,\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete template\r\n  const deleteTemplate = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${backendUrl}/emails/email-templates/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchTemplates();\r\n        return { success: true };\r\n      }\r\n      return { success: false };\r\n    } catch (error) {\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  // Send email Logs\r\n  const sendLogs = async (Data) => {\r\n    setLoading(true);\r\n    try {\r\n      // Check if it's FormData (has manual attachments) or regular object\r\n      const isFormData = Data instanceof FormData;\r\n\r\n      const response = await fetch(`${backendUrl}/emails/email-logs/send`, {\r\n        method: \"POST\",\r\n        headers: isFormData ? {} : { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: isFormData ? Data : JSON.stringify(Data),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchLogs();\r\n        return { success: true, data };\r\n      }\r\n      return { success: false, message: data.error };\r\n    } catch (error) {\r\n      return { success: false, message: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete Logs\r\n  const deleteLogs = async (id) => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/emails/email-logs/${id}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchLogs();\r\n        return { success: true };\r\n      }\r\n      return { success: false };\r\n    } catch (error) {\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTemplates();\r\n    fetchLogs();\r\n  }, []);\r\n\r\n  return (\r\n    <EmailContext.Provider\r\n      value={{\r\n        templates,\r\n        logs,\r\n        loading,\r\n        createTemplate,\r\n        updateTemplate,\r\n        deleteTemplate,\r\n        deleteLogs,\r\n        sendLogs,\r\n        sendEmailToFilteredStudents,\r\n        fetchTemplates,\r\n        fetchLogs,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmailContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmail = () => {\r\n  const context = useContext(EmailContext);\r\n  if (!context) {\r\n    throw new Error(\"useEmail must be used within EmailProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy%20-%20Copy/soetcgdc/frontend/app/email-management/ComposeEmail.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useMemo, useEffect } from \"react\";\r\nimport { Send, X, FileText, Paperclip, Users } from \"lucide-react\";\r\nimport { useEmail } from \"../../context/EmailContext\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport { Suspense } from \"react\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst ComposeEmailContent = () => {\r\n  const { templates, sendLogs, sendEmailToFilteredStudents, loading } =\r\n    useEmail();\r\n  const searchParams = useSearchParams();\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const [manualAttachments, setManualAttachments] = useState([]);\r\n  const [removedTemplateAttachments, setRemovedTemplateAttachments] = useState(\r\n    []\r\n  );\r\n  const [emailData, setEmailData] = useState(null); // Add this line\r\n  const fileInputRef = useRef(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n    sender_email: \"\",\r\n    to_emails: \"\",\r\n    sendType: \"filter\",\r\n    branch: [],\r\n    batch_year: [],\r\n    placement_status: \"\",\r\n    recipient_emails: \"\",\r\n    student_ids: \"\",\r\n    event_id: \"\",\r\n    recipient_type: \"registered\",\r\n    cc_emails: \"\",\r\n    message_id: \"\",\r\n    parent_message_id: \"\",\r\n  });\r\n  const [activeTemplateCategory, setActiveTemplateCategory] = useState(\"\");\r\n  const [availableBatches, setAvailableBatches] = useState([]);\r\n\r\n  const availableBranches = [\"CSE\", \"ECE\", \"ME\"];\r\n\r\n  // Group templates by category\r\n  const groupedTemplates = useMemo(() => {\r\n    if (!templates || !Array.isArray(templates)) return {};\r\n    return templates.reduce((acc, template) => {\r\n      const category = template.category || \"general\";\r\n      if (!acc[category]) acc[category] = [];\r\n      acc[category].push(template);\r\n      return acc;\r\n    }, {});\r\n  }, [templates]);\r\n\r\n  // Get unique categories\r\n  const categories = useMemo(() => {\r\n    return Object.keys(groupedTemplates).sort();\r\n  }, [groupedTemplates]);\r\n\r\n  // Set initial category\r\n  useEffect(() => {\r\n    if (categories.length > 0 && !activeTemplateCategory) {\r\n      setActiveTemplateCategory(categories[0]);\r\n    }\r\n  }, [categories]);\r\n\r\n  // Fetch batches\r\n  useEffect(() => {\r\n    const fetchBatches = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${backendUrl}/batches`);\r\n        if (Array.isArray(data)) {\r\n          const years = data.map((b) => b.year);\r\n          setAvailableBatches(years);\r\n        } else {\r\n          console.error(\"Expected array of batches, received:\", data);\r\n          setAvailableBatches([]);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching batches:\", err);\r\n        setAvailableBatches([]);\r\n      }\r\n    };\r\n\r\n    fetchBatches();\r\n  }, []);\r\n\r\n  // Update the useEffect that handles company email data\r\n  useEffect(() => {\r\n    if (searchParams.get(\"from\") === \"company\") {\r\n      const storedData = sessionStorage.getItem(\"emailData\");\r\n      if (storedData) {\r\n        const data = JSON.parse(storedData);\r\n\r\n        // Pre-fill the form with company data\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          title: `${data.companyName} - ${\r\n            data.targetType === \"dream\"\r\n              ? \"Dream Company Opportunity\"\r\n              : \"Placement Information\"\r\n          }`,\r\n          subject: `Important: ${data.companyName} Update`,\r\n          sendType: \"student_ids\",\r\n          // Check if student_ids exists before joining\r\n          student_ids: data.student_ids ? data.student_ids.join(\",\") : \"\",\r\n          // Clear other filter options\r\n          branch: [],\r\n          batch_year: [],\r\n          placement_status: \"\",\r\n        }));\r\n\r\n        // Add info banner about recipients\r\n        // Add info banner about recipients including emails\r\n        setEmailData({\r\n          companyName: data.companyName,\r\n          studentCount: data.total_count || 0,\r\n          targetType: data.targetType,\r\n          studentEmails: data.students?.map((s) => s.college_email) || [], // Extract emails from students\r\n          students: data.students || [], // Keep full student objects\r\n        });\r\n\r\n        // Clear storage\r\n        sessionStorage.removeItem(\"emailData\");\r\n      }\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleUseTemplate = (template) => {\r\n    let parsedCcEmails = \"\";\r\n    if (template.cc_emails) {\r\n      if (typeof template.cc_emails === \"string\") {\r\n        try {\r\n          const ccArray = JSON.parse(template.cc_emails);\r\n          parsedCcEmails = Array.isArray(ccArray) ? ccArray.join(\", \") : \"\";\r\n        } catch (err) {\r\n          parsedCcEmails = template.cc_emails;\r\n        }\r\n      } else if (Array.isArray(template.cc_emails)) {\r\n        parsedCcEmails = template.cc_emails.join(\", \");\r\n      }\r\n    }\r\n\r\n    setFormData({\r\n      ...formData,\r\n      title: template.template_name,\r\n      subject: template.subject,\r\n      body: template.body,\r\n      sender_email: template.sender_email || \"\",\r\n      cc_emails: parsedCcEmails,\r\n    });\r\n    setSelectedTemplate(template);\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    const validFiles = files.filter((file) => {\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        toast.error(`${file.name} is too large. Max size is 10MB`);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    const templateAttachmentCount = getTemplateAttachments().length;\r\n    const totalCount =\r\n      manualAttachments.length + validFiles.length + templateAttachmentCount;\r\n\r\n    if (totalCount > 5) {\r\n      toast.error(\r\n        \"Maximum 5 attachments allowed (including template attachments)\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    setManualAttachments((prev) => [...prev, ...validFiles]);\r\n    if (validFiles.length > 0) {\r\n      toast.success(\r\n        `Added ${validFiles.length} attachment${\r\n          validFiles.length !== 1 ? \"s\" : \"\"\r\n        }`\r\n      );\r\n    }\r\n  };\r\n\r\n  const removeManualAttachment = (index) => {\r\n    setManualAttachments((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const getTemplateAttachments = () => {\r\n    if (!selectedTemplate?.attachments) return [];\r\n    try {\r\n      const attachments =\r\n        typeof selectedTemplate.attachments === \"string\"\r\n          ? JSON.parse(selectedTemplate.attachments)\r\n          : selectedTemplate.attachments;\r\n      const filtered = Array.isArray(attachments)\r\n        ? attachments.filter(\r\n            (a) => !removedTemplateAttachments.includes(a.filename)\r\n          )\r\n        : [];\r\n      return filtered;\r\n    } catch (err) {\r\n      console.error(\"Error parsing attachments:\", err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const removeTemplateAttachment = (filename) => {\r\n    setRemovedTemplateAttachments((prev) => [...prev, filename]);\r\n  };\r\n\r\n  const getTotalAttachmentCount = () => {\r\n    return getTemplateAttachments().length + manualAttachments.length;\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!formData.title || !formData.subject || !formData.body) {\r\n      toast.error(\"Please fill title, subject, and body\");\r\n      return;\r\n    }\r\n\r\n    if (!formData.to_emails) {\r\n      toast.error(\"Please enter at least one 'To' email address\");\r\n      return;\r\n    }\r\n\r\n    // Parse to_emails once (used by both paths)\r\n    const toEmails = formData.to_emails\r\n      .split(\",\")\r\n      .map((e) => e.trim())\r\n      .filter((e) => e);\r\n\r\n    // SPECIAL HANDLING FOR STUDENT_IDS (Company flow)\r\n    if (formData.sendType === \"student_ids\") {\r\n      const studentIds = formData.student_ids\r\n        .split(\",\")\r\n        .map((id) => parseInt(id.trim()))\r\n        .filter((id) => !isNaN(id));\r\n\r\n      if (studentIds.length === 0) {\r\n        toast.error(\"No valid student IDs found\");\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        title: formData.title,\r\n        subject: formData.subject,\r\n        body: formData.body,\r\n        sender_email: formData.sender_email,\r\n        to_emails: toEmails,\r\n        cc_emails: formData.cc_emails\r\n          ? formData.cc_emails\r\n              .split(\",\")\r\n              .map((e) => e.trim())\r\n              .filter((e) => e)\r\n          : [],\r\n        student_ids: studentIds,\r\n        message_id: formData.message_id || \"\",\r\n        parent_message_id: formData.parent_message_id || \"\",\r\n        position_id: formData.position_id || null, // Add this if you have position_id in formData\r\n        recipient_type: formData.recipient_type || \"registered\", // Add this\r\n      };\r\n\r\n      // Add template info if applicable\r\n      if (selectedTemplate) {\r\n        payload.template_id = selectedTemplate.id;\r\n        if (removedTemplateAttachments.length > 0) {\r\n          payload.excluded_template_attachments = removedTemplateAttachments;\r\n        }\r\n      }\r\n\r\n      // Add manual attachments\r\n      if (manualAttachments.length > 0) {\r\n        payload.manual_attachments = manualAttachments;\r\n      }\r\n\r\n      // Use sendEmailToFilteredStudents\r\n      const sendPromise = sendEmailToFilteredStudents(payload);\r\n\r\n      toast.promise(sendPromise, {\r\n        loading: \"Sending email...\",\r\n        success: (result) => {\r\n          if (result.success) {\r\n            resetForm();\r\n            return `Email sent successfully! (${\r\n              result.data?.emailResults?.successful || 0\r\n            } sent, ${result.data?.emailResults?.failed || 0} failed)`;\r\n          }\r\n          throw new Error(result.message);\r\n        },\r\n        error: (err) => `Failed to send email: ${err.message}`,\r\n      });\r\n\r\n      return; // Exit early for student_ids flow\r\n    }\r\n\r\n    // NORMAL FLOW (filter and manual)\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"title\", formData.title);\r\n    formDataToSend.append(\"subject\", formData.subject);\r\n    formDataToSend.append(\"body\", formData.body);\r\n    formDataToSend.append(\"sender_email\", formData.sender_email);\r\n    formDataToSend.append(\"to_emails\", JSON.stringify(toEmails));\r\n\r\n    if (selectedTemplate) {\r\n      formDataToSend.append(\"template_id\", selectedTemplate.id);\r\n      if (removedTemplateAttachments.length > 0) {\r\n        formDataToSend.append(\r\n          \"excluded_template_attachments\",\r\n          JSON.stringify(removedTemplateAttachments)\r\n        );\r\n      }\r\n    }\r\n\r\n    manualAttachments.forEach((file) => {\r\n      formDataToSend.append(\"manual_attachments\", file);\r\n    });\r\n\r\n    if (formData.sendType === \"filter\") {\r\n      const filters = {};\r\n      if (formData.branch.length > 0) {\r\n        filters.branch = formData.branch;\r\n      }\r\n      if (formData.batch_year.length > 0) {\r\n        filters.batch_year = formData.batch_year;\r\n      }\r\n      if (formData.placement_status) {\r\n        filters.placement_status = formData.placement_status;\r\n      }\r\n      formDataToSend.append(\"recipient_filter\", JSON.stringify(filters));\r\n    } else if (formData.sendType === \"manual\") {\r\n      const emails = formData.recipient_emails\r\n        .split(\",\")\r\n        .map((e) => e.trim())\r\n        .filter((e) => e);\r\n      if (emails.length === 0) {\r\n        toast.error(\"Please enter at least one email address\");\r\n        return;\r\n      }\r\n      formDataToSend.append(\"recipient_emails\", JSON.stringify(emails));\r\n    }\r\n\r\n    if (formData.cc_emails) {\r\n      const ccEmails = formData.cc_emails\r\n        .split(\",\")\r\n        .map((e) => e.trim())\r\n        .filter((e) => e);\r\n      formDataToSend.append(\"cc_emails\", JSON.stringify(ccEmails));\r\n    }\r\n\r\n    // Add message tracking fields if provided\r\n    if (formData.message_id) {\r\n      formDataToSend.append(\"message_id\", formData.message_id);\r\n    }\r\n    if (formData.parent_message_id) {\r\n      formDataToSend.append(\"parent_message_id\", formData.parent_message_id);\r\n    }\r\n\r\n    const sendPromise = sendLogs(formDataToSend);\r\n\r\n    toast.promise(sendPromise, {\r\n      loading: \"Sending email...\",\r\n      success: (result) => {\r\n        if (result.success) {\r\n          resetForm();\r\n          return `Email sent successfully! (${\r\n            result.data?.emailResults?.successful || 0\r\n          } sent, ${result.data?.emailResults?.failed || 0} failed)`;\r\n        }\r\n        throw new Error(result.message);\r\n      },\r\n      error: (err) => `Failed to send email: ${err.message}`,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: \"\",\r\n      subject: \"\",\r\n      body: \"\",\r\n      sender_email: \"\",\r\n      to_emails: \"\",\r\n      sendType: \"filter\",\r\n      branch: [],\r\n      batch_year: [],\r\n      placement_status: \"\",\r\n      recipient_emails: \"\",\r\n      student_ids: \"\",\r\n      event_id: \"\",\r\n      recipient_type: \"registered\",\r\n      cc_emails: \"\",\r\n      message_id: \"\",\r\n      parent_message_id: \"\",\r\n    });\r\n    setSelectedTemplate(null);\r\n    setManualAttachments([]);\r\n    setRemovedTemplateAttachments([]);\r\n    setEmailData(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Quick Templates */}\r\n      {templates.length > 0 && (\r\n        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-100\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <FileText className=\"w-5 h-5 text-blue-600\" />\r\n              <h3 className=\"font-semibold text-gray-900\">\r\n                Quick Start Templates\r\n              </h3>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {categories.map((category) => (\r\n                <button\r\n                  key={category}\r\n                  onClick={() => setActiveTemplateCategory(category)}\r\n                  className={`px-3 py-1.5 text-sm font-medium rounded-lg transition-colors ${\r\n                    activeTemplateCategory === category\r\n                      ? \"bg-blue-600 text-white\"\r\n                      : \"bg-white text-blue-600 hover:bg-blue-50\"\r\n                  }`}\r\n                >\r\n                  {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                  <span\r\n                    className={`ml-2 text-xs px-1.5 py-0.5 rounded-full ${\r\n                      activeTemplateCategory === category\r\n                        ? \"bg-blue-500 text-white\"\r\n                        : \"bg-blue-50 text-blue-600\"\r\n                    }`}\r\n                  >\r\n                    {groupedTemplates[category]?.length || 0}\r\n                  </span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {groupedTemplates[activeTemplateCategory]?.map((template) => {\r\n              const isSelected = selectedTemplate?.id === template.id;\r\n              const attachmentCount = template.attachments\r\n                ? Array.isArray(template.attachments)\r\n                  ? template.attachments.length\r\n                  : JSON.parse(template.attachments).length\r\n                : 0;\r\n\r\n              return (\r\n                <button\r\n                  key={template.id}\r\n                  onClick={() => handleUseTemplate(template)}\r\n                  className={`px-4 py-2 border rounded-lg text-sm font-medium transition-all flex items-center gap-2 ${\r\n                    isSelected\r\n                      ? \"bg-blue-600 text-white border-blue-600\"\r\n                      : \"bg-white border-blue-200 text-blue-700 hover:bg-blue-50 hover:border-blue-300\"\r\n                  }`}\r\n                >\r\n                  {template.template_name}\r\n                  {attachmentCount > 0 && (\r\n                    <span\r\n                      className={`inline-flex items-center gap-1 text-xs ${\r\n                        isSelected ? \"text-blue-100\" : \"text-blue-600\"\r\n                      }`}\r\n                    >\r\n                      <Paperclip className=\"w-3 h-3\" />\r\n                      {attachmentCount}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white rounded-xl border border-gray-200 p-6 space-y-6\">\r\n        {/* Selected Template Info */}\r\n        {selectedTemplate && (\r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  <FileText className=\"w-5 h-5 text-green-600\" />\r\n                  <h4 className=\"font-semibold text-green-900\">\r\n                    Using Template: {selectedTemplate.template_name}\r\n                  </h4>\r\n                </div>\r\n\r\n                {selectedTemplate && getTemplateAttachments().length > 0 && (\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl border border-green-200/70 shadow-sm\">\r\n                      <div className=\"p-4\">\r\n                        <div className=\"flex items-center gap-2 mb-3\">\r\n                          <Paperclip className=\"w-4 h-4 text-green-600\" />\r\n                          <h4 className=\"text-sm font-medium text-green-800\">\r\n                            Template Attachments (\r\n                            {getTemplateAttachments().length})\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                          {getTemplateAttachments().map((attachment, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"flex items-center justify-between bg-white/80 backdrop-blur-sm p-3 rounded-lg border border-green-100 hover:bg-white transition-colors duration-200\"\r\n                            >\r\n                              <div className=\"flex items-center gap-3 flex-1\">\r\n                                <div className=\"p-2 bg-green-50 rounded-lg\">\r\n                                  <Paperclip className=\"w-4 h-4 text-green-600\" />\r\n                                </div>\r\n                                <div className=\"min-w-0\">\r\n                                  <p className=\"text-sm font-medium text-gray-700 truncate\">\r\n                                    {attachment.filename}\r\n                                  </p>\r\n                                  {attachment.size && (\r\n                                    <p className=\"text-xs text-gray-500\">\r\n                                      {(attachment.size / 1024 / 1024).toFixed(\r\n                                        2\r\n                                      )}{\" \"}\r\n                                      MB\r\n                                    </p>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <button\r\n                                onClick={() =>\r\n                                  removeTemplateAttachment(attachment.filename)\r\n                                }\r\n                                className=\"p-2 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-lg transition-all duration-200\"\r\n                                title=\"Remove attachment\"\r\n                              >\r\n                                <X className=\"w-4 h-4\" />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  setSelectedTemplate(null);\r\n                  setRemovedTemplateAttachments([]);\r\n                  setFormData({\r\n                    ...formData,\r\n                    title: \"\",\r\n                    subject: \"\",\r\n                    body: \"\",\r\n                  });\r\n                }}\r\n                className=\"p-1 hover:bg-green-100 rounded transition-colors\"\r\n              >\r\n                <X className=\"w-4 h-4 text-green-600\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Basic Info */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Title (Internal)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, title: e.target.value })\r\n              }\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"e.g., Google Drive Reminder - Jan 2024\"\r\n            />\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                Sender Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                value={formData.sender_email}\r\n                placeholder=\"placement@college.edu\"\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, sender_email: e.target.value })\r\n                }\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                To Emails (comma-separated) *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.to_emails}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, to_emails: e.target.value })\r\n                }\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"placement@college.edu, hod@college.edu\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Primary visible recipients (students will be in BCC)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            CC Emails (comma-separated, optional)\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.cc_emails}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, cc_emails: e.target.value })\r\n            }\r\n            className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"hod@college.edu, coordinator@college.edu\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            CC recipients will be visible to all. Students are automatically in\r\n            BCC (hidden).\r\n          </p>\r\n        </div>\r\n\r\n        {/* Subject */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Email Subject\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.subject}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, subject: e.target.value })\r\n            }\r\n            className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Write your email subject here...\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            💡 For follow-ups: Keep subject similar to original (e.g., add\r\n            &quot;Re:&quot; prefix)\r\n          </p>\r\n        </div>\r\n\r\n        {/* Body */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Email Body (HTML)\r\n          </label>\r\n          <textarea\r\n            value={formData.body}\r\n            onChange={(e) => setFormData({ ...formData, body: e.target.value })}\r\n            className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 h-48 font-mono text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Write your email body here...\"\r\n          />\r\n        </div>\r\n\r\n        {/* Manual Attachments Section */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Additional Attachments\r\n          </label>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => fileInputRef.current?.click()}\r\n                disabled={getTotalAttachmentCount() >= 5}\r\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 disabled:bg-gray-50 disabled:text-gray-400 text-gray-700 rounded-lg flex items-center gap-2\"\r\n              >\r\n                <Paperclip className=\"w-4 h-4\" />\r\n                Add Files\r\n              </button>\r\n              <span className=\"text-sm text-gray-500\">\r\n                Max 5 files total ({getTotalAttachmentCount()}/5 used)\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={handleFileSelect}\r\n              multiple\r\n              className=\"hidden\"\r\n              accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png\"\r\n            />\r\n\r\n            {manualAttachments.length > 0 && (\r\n              <div className=\"mt-3 p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                <p className=\"text-xs font-semibold text-purple-900 mb-2\">\r\n                  Manual Attachments ({manualAttachments.length})\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  {manualAttachments.map((file, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"flex items-center justify-between bg-white/80 backdrop-blur-sm p-3 rounded-lg border border-purple-100 hover:bg-white transition-colors duration-200\"\r\n                    >\r\n                      <div className=\"flex items-center gap-3 flex-1\">\r\n                        <div className=\"p-2 bg-purple-50 rounded-lg\">\r\n                          <Paperclip className=\"w-4 h-4 text-purple-600\" />\r\n                        </div>\r\n                        <div className=\"min-w-0\">\r\n                          <p className=\"text-sm font-medium text-gray-700 truncate\">\r\n                            {file.name}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500\">\r\n                            {(file.size / 1024 / 1024).toFixed(2)} MB\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => removeManualAttachment(index)}\r\n                        className=\"p-2 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-lg transition-all duration-200\"\r\n                        title=\"Remove attachment\"\r\n                      >\r\n                        <X className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recipients Section */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\r\n            Send To\r\n          </label>\r\n          {/* Only show radio buttons if not coming from company page */}\r\n          {searchParams.get(\"from\") !== \"company\" && (\r\n            <div className=\"flex flex-wrap gap-4 mb-4\">\r\n              {[\"filter\", \"manual\", \"student_ids\"].map((type) => (\r\n                <label key={type} className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value={type}\r\n                    checked={formData.sendType === type}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, sendType: e.target.value })\r\n                    }\r\n                    className=\"w-4 h-4 text-blue-600 focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                  <span className=\"ml-2 text-sm font-medium text-gray-700\">\r\n                    {type === \"filter\"\r\n                      ? \"Filter Students\"\r\n                      : type === \"manual\"\r\n                        ? \"Manual Emails\"\r\n                        : \"Selected Students\"}\r\n                  </span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {/* Only show filters if sendType is filter and not coming from company */}\r\n          {formData.sendType === \"filter\" &&\r\n            searchParams.get(\"from\") !== \"company\" && (\r\n              <div className=\"bg-gray-50 rounded-lg p-4 space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Branch\r\n                  </label>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {availableBranches.map((branch) => (\r\n                      <button\r\n                        key={branch}\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setFormData((prev) => ({\r\n                            ...prev,\r\n                            branch: prev.branch.includes(branch)\r\n                              ? prev.branch.filter((b) => b !== branch)\r\n                              : [...prev.branch, branch],\r\n                          }));\r\n                        }}\r\n                        className={`px-3 py-1.5 rounded-lg text-sm font-medium transition-all ${\r\n                          formData.branch.includes(branch)\r\n                            ? \"bg-blue-600 text-white\"\r\n                            : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n                        }`}\r\n                      >\r\n                        {branch}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                  {formData.branch.length > 0 && (\r\n                    <div className=\"mt-2 flex items-center gap-2\">\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        Selected: {formData.branch.join(\", \")}\r\n                      </p>\r\n                      <button\r\n                        onClick={() =>\r\n                          setFormData((prev) => ({ ...prev, branch: [] }))\r\n                        }\r\n                        className=\"text-xs text-red-600 hover:text-red-700\"\r\n                      >\r\n                        Clear all\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Batch Year\r\n                    </label>\r\n                    <div className=\"space-y-3\">\r\n                      {availableBatches.length > 0 ? (\r\n                        <>\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {availableBatches.map((year) => (\r\n                              <button\r\n                                key={year}\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                  setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    batch_year: prev.batch_year.includes(year)\r\n                                      ? prev.batch_year.filter(\r\n                                          (y) => y !== year\r\n                                        )\r\n                                      : [...prev.batch_year, year],\r\n                                  }));\r\n                                }}\r\n                                className={`px-3 py-1.5 rounded-lg text-sm font-medium transition-all ${\r\n                                  formData.batch_year.includes(year)\r\n                                    ? \"bg-blue-600 text-white\"\r\n                                    : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n                                }`}\r\n                              >\r\n                                {year}\r\n                              </button>\r\n                            ))}\r\n                          </div>\r\n                          {formData.batch_year.length > 0 && (\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <p className=\"text-sm text-gray-600\">\r\n                                Selected:{\" \"}\r\n                                {formData.batch_year.sort().join(\", \")}\r\n                              </p>\r\n                              <button\r\n                                onClick={() =>\r\n                                  setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    batch_year: [],\r\n                                  }))\r\n                                }\r\n                                className=\"text-xs text-red-600 hover:text-red-700\"\r\n                              >\r\n                                Clear all\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <p className=\"text-sm text-gray-500\">\r\n                          No batch years available\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Placement Status\r\n                    </label>\r\n                    <select\r\n                      value={formData.placement_status}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          placement_status: e.target.value,\r\n                        })\r\n                      }\r\n                      className=\"w-full border border-gray-300 rounded-lg px-4 py-2\"\r\n                    >\r\n                      <option value=\"\">All</option>\r\n                      <option value=\"placed\">Placed</option>\r\n                      <option value=\"unplaced\">Unplaced</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          {/* Only show manual input if sendType is manual and not coming from company */}\r\n          {formData.sendType === \"manual\" &&\r\n            searchParams.get(\"from\") !== \"company\" && (\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Email Addresses (comma-separated)\r\n                </label>\r\n                <textarea\r\n                  value={formData.recipient_emails}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      recipient_emails: e.target.value,\r\n                    })\r\n                  }\r\n                  className=\"w-full border border-gray-300 rounded-lg px-4 py-2 h-24\"\r\n                  placeholder=\"student1@college.edu, student2@college.edu\"\r\n                />\r\n              </div>\r\n            )}\r\n          {/* Always show selected students info when coming from company */}\r\n          {(formData.sendType === \"student_ids\" ||\r\n            searchParams.get(\"from\") === \"company\") &&\r\n            emailData && (\r\n              <div className=\"bg-blue-50 border border-blue-100 rounded-lg p-4 space-y-3\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Users className=\"w-5 h-5 text-blue-600\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-blue-900\">\r\n                      {emailData.companyName}\r\n                    </h4>\r\n                    <p className=\"text-sm text-blue-700\">\r\n                      Sending to {emailData.studentCount}{\" \"}\r\n                      {emailData.targetType === \"dream\"\r\n                        ? \"dream company eligible\"\r\n                        : \"eligible\"}{\" \"}\r\n                      students\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Student Emails List - Comma Separated */}\r\n                {emailData.studentEmails &&\r\n                  emailData.studentEmails.length > 0 && (\r\n                    <div className=\"mt-3 bg-white rounded-lg p-3 border border-blue-200\">\r\n                      <p className=\"text-xs font-semibold text-blue-900 mb-2\">\r\n                        Recipients ({emailData.studentEmails.length}):\r\n                      </p>\r\n                      <div className=\"max-h-32 overflow-y-auto\">\r\n                        <p className=\"text-xs text-gray-700 break-words\">\r\n                          {emailData.studentEmails.join(\", \")}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n              </div>\r\n            )}\r\n        </div>\r\n\r\n        {/* Message Tracking (Optional Follow-up Fields) */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h4 className=\"text-sm font-semibold text-blue-900\">\r\n              Message Tracking (Optional - for follow-up emails)\r\n            </h4>\r\n            <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\">\r\n              ⚠️ For threading: use similar subject line (add &quot;Re:&quot;\r\n              prefix)\r\n            </span>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-blue-900 mb-2\">\r\n                Message ID\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.message_id}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, message_id: e.target.value })\r\n                }\r\n                className=\"w-full border border-blue-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Leave empty to auto-generate\"\r\n              />\r\n              <p className=\"text-xs text-blue-700 mt-1\">\r\n                Auto-generated if not provided\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-blue-900 mb-2\">\r\n                Parent Message ID\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.parent_message_id}\r\n                onChange={(e) =>\r\n                  setFormData({\r\n                    ...formData,\r\n                    parent_message_id: e.target.value,\r\n                  })\r\n                }\r\n                className=\"w-full border border-blue-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Link to original email for follow-ups\"\r\n              />\r\n              <p className=\"text-xs text-blue-700 mt-1\">\r\n                Use this for follow-up/trail emails\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex gap-3 pt-4 border-t border-gray-300/80\">\r\n          <button\r\n            onClick={handleSend}\r\n            disabled={loading}\r\n            className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg hover:from-blue-700 hover:to-indigo-700 disabled:opacity-50 flex items-center gap-2 font-medium transition-all shadow-lg\"\r\n          >\r\n            <Send className=\"w-4 h-4\" />\r\n            {loading ? \"Sending...\" : \"Send Email\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Outer wrapper component\r\nconst ComposeEmail = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <ComposeEmailContent />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ComposeEmail;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy%20-%20Copy/soetcgdc/frontend/app/email-management/Templates.js"],"sourcesContent":["// ===== Templates.js (Frontend) =====\r\nimport { useState, useRef, useMemo, useEffect } from \"react\";\r\nimport { Mail, Trash2, Save, Edit, Paperclip, X, Users } from \"lucide-react\";\r\nimport { useEmail } from \"../../context/EmailContext\";\r\nimport toast from \"react-hot-toast\"; // Add this import\r\n\r\nconst Templates = () => {\r\n  const { templates, createTemplate, updateTemplate, deleteTemplate, loading } =\r\n    useEmail();\r\n  const fileInputRef = useRef(null);\r\n  const [form, setForm] = useState({\r\n    template_name: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n    category: \"\", // Remove default value\r\n    sender_email: \"\",\r\n    cc_emails: \"\",\r\n  });\r\n  const [editing, setEditing] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [existingAttachments, setExistingAttachments] = useState([]);\r\n  const [removedAttachments, setRemovedAttachments] = useState([]);\r\n  const [activeCategory, setActiveCategory] = useState(\"\"); // Update activeCategory state to have no default\r\n\r\n  // Group templates by category\r\n  const groupedTemplates = useMemo(() => {\r\n    if (!templates || !Array.isArray(templates)) return {};\r\n    return templates.reduce((acc, template) => {\r\n      const category = template.category;\r\n      if (!acc[category]) acc[category] = [];\r\n      acc[category].push(template);\r\n      return acc;\r\n    }, {});\r\n  }, [templates]);\r\n\r\n  // Get unique categories\r\n  const categories = useMemo(() => {\r\n    return Object.keys(groupedTemplates).sort();\r\n  }, [groupedTemplates]);\r\n\r\n  // Set initial category from data\r\n  useEffect(() => {\r\n    if (categories.length > 0 && !activeCategory) {\r\n      const firstCategory = categories[0];\r\n      setActiveCategory(firstCategory);\r\n      setForm((prev) => ({ ...prev, category: firstCategory }));\r\n    }\r\n  }, [categories, activeCategory]);\r\n\r\n  const handleFileSelect = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setSelectedFiles((prev) => [...prev, ...files]);\r\n  };\r\n\r\n  const removeNewFile = (index) => {\r\n    setSelectedFiles((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const removeExistingAttachment = (index) => {\r\n    const removed = existingAttachments[index];\r\n    setRemovedAttachments((prev) => [...prev, removed.filename]);\r\n    setExistingAttachments((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Update handleSave function\r\n  const handleSave = async () => {\r\n    if (!form.template_name || !form.subject || !form.body) {\r\n      toast.error(\"Please fill all required fields\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"template_name\", form.template_name);\r\n    formData.append(\"subject\", form.subject);\r\n    formData.append(\"body\", form.body);\r\n    formData.append(\"category\", form.category);\r\n\r\n    // Add new fields\r\n    if (form.sender_email) {\r\n      formData.append(\"sender_email\", form.sender_email);\r\n    }\r\n\r\n    if (form.cc_emails) {\r\n      // Convert comma-separated emails to array\r\n      const ccEmails = form.cc_emails\r\n        .split(\",\")\r\n        .map((email) => email.trim())\r\n        .filter((email) => email);\r\n      formData.append(\"cc_emails\", JSON.stringify(ccEmails));\r\n    }\r\n\r\n    selectedFiles.forEach((file) => {\r\n      formData.append(\"attachments\", file);\r\n    });\r\n\r\n    if (editing) {\r\n      if (existingAttachments.length > 0) {\r\n        formData.append(\"keep_existing_attachments\", \"true\");\r\n      }\r\n      if (removedAttachments.length > 0) {\r\n        formData.append(\r\n          \"removed_attachments\",\r\n          JSON.stringify(removedAttachments)\r\n        );\r\n      }\r\n    }\r\n\r\n    const result = editing\r\n      ? await updateTemplate(editing.id, formData)\r\n      : await createTemplate(formData);\r\n\r\n    if (result.success) {\r\n      toast.success(result.message);\r\n      resetForm();\r\n    } else {\r\n      toast.error(\"Failed to save: \" + result.message);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setForm({\r\n      template_name: \"\",\r\n      subject: \"\",\r\n      body: \"\",\r\n      category: \"general\",\r\n      sender_email: \"\",\r\n      cc_emails: \"\",\r\n    });\r\n    setSelectedFiles([]);\r\n    setExistingAttachments([]);\r\n    setRemovedAttachments([]);\r\n    setEditing(null);\r\n  };\r\n\r\n  // Update handleDelete function\r\n  const handleDelete = async (id) => {\r\n    const shouldDelete = window.confirm(\"Delete this template?\"); // Keep confirmation dialog\r\n    if (!shouldDelete) return;\r\n\r\n    const deletePromise = deleteTemplate(id);\r\n\r\n    toast.promise(deletePromise, {\r\n      loading: \"Deleting template...\",\r\n      success: \"Template deleted successfully\",\r\n      error: \"Failed to delete template\",\r\n    });\r\n  };\r\n\r\n  const handleEdit = (template) => {\r\n    setEditing(template);\r\n    setForm({\r\n      template_name: template.template_name,\r\n      subject: template.subject,\r\n      body: template.body,\r\n      category: editing ? template.category : \"general\", // Set to 'general' not empty string\r\n      sender_email: template.sender_email || \"\",\r\n      cc_emails: Array.isArray(template.cc_emails)\r\n        ? template.cc_emails.join(\", \")\r\n        : template.cc_emails || \"\",\r\n    });\r\n\r\n    // Always reset attachment states first\r\n    setExistingAttachments([]);\r\n    setSelectedFiles([]);\r\n    setRemovedAttachments([]);\r\n    if (template.attachments) {\r\n      try {\r\n        let attachments = template.attachments;\r\n\r\n        // If it's a string, parse it\r\n        if (typeof attachments === \"string\") {\r\n          attachments = JSON.parse(attachments);\r\n        }\r\n\r\n        // Make sure it's an array before setting\r\n        if (Array.isArray(attachments) && attachments.length > 0) {\r\n          setExistingAttachments(attachments);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error parsing attachments:\", err);\r\n        setExistingAttachments([]);\r\n      }\r\n    } else {\r\n      setExistingAttachments([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Form */}\r\n      <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\r\n        <h3 className=\"text-lg font-bold text-gray-900 mb-4\">\r\n          {editing ? \"Edit Template\" : \"Create New Template\"}\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                Template Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={form.template_name}\r\n                onChange={(e) =>\r\n                  setForm({ ...form, template_name: e.target.value })\r\n                }\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Welcome Email\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={form.category}\r\n                onChange={(e) => setForm({ ...form, category: e.target.value })}\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"general\">General</option>\r\n                <option value=\"placement\">Placement</option>\r\n                <option value=\"event\">Event</option>\r\n                <option value=\"reminder\">Reminder</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Default Sender Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={form.sender_email || \"\"}\r\n              onChange={(e) =>\r\n                setForm({ ...form, sender_email: e.target.value })\r\n              }\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"sender@example.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              CC Email Addresses\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={form.cc_emails || \"\"}\r\n              onChange={(e) => setForm({ ...form, cc_emails: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"email1@example.com, email2@example.com\"\r\n            />\r\n            <p className=\"mt-1 text-xs text-gray-500\">\r\n              Separate multiple emails with commas\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Subject\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={form.subject}\r\n              onChange={(e) => setForm({ ...form, subject: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Welcome to our platform\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Body (HTML)\r\n            </label>\r\n            <textarea\r\n              value={form.body}\r\n              onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 h-32 font-mono text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Hello {first_name}...\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Attachments\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg flex items-center gap-2 transition-colors\"\r\n                >\r\n                  <Paperclip className=\"w-4 h-4\" />\r\n                  Add Files\r\n                </button>\r\n                <span className=\"text-sm text-gray-500\">\r\n                  Max 5 files, 10MB each\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileSelect}\r\n                multiple\r\n                className=\"hidden\"\r\n                accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png\"\r\n              />\r\n\r\n              {/* Existing Attachments (when editing) */}\r\n              {existingAttachments.length > 0 && (\r\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <p className=\"text-xs font-semibold text-blue-900 mb-2\">\r\n                    Existing Attachments\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    {existingAttachments.map((file, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex items-center justify-between bg-white p-2 rounded\"\r\n                      >\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Paperclip className=\"w-4 h-4 text-blue-500\" />\r\n                          <span className=\"text-sm text-gray-700\">\r\n                            {file.filename}\r\n                          </span>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => removeExistingAttachment(index)}\r\n                          className=\"p-1 hover:bg-red-100 rounded-full transition-colors\"\r\n                        >\r\n                          <X className=\"w-4 h-4 text-red-500\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* New Selected Files */}\r\n              {selectedFiles.length > 0 && (\r\n                <div className=\"mt-3 p-3 bg-green-50 rounded-lg border border-green-200\">\r\n                  <p className=\"text-xs font-semibold text-green-900 mb-2\">\r\n                    New Files to Upload\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    {selectedFiles.map((file, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex items-center justify-between bg-white p-2 rounded\"\r\n                      >\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Paperclip className=\"w-4 h-4 text-green-500\" />\r\n                          <span className=\"text-sm text-gray-700\">\r\n                            {file.name}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            ({(file.size / 1024 / 1024).toFixed(2)} MB)\r\n                          </span>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => removeNewFile(index)}\r\n                          className=\"p-1 hover:bg-red-100 rounded-full transition-colors\"\r\n                        >\r\n                          <X className=\"w-4 h-4 text-red-500\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-3\">\r\n            <button\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n              className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg hover:from-blue-700 hover:to-indigo-700 disabled:opacity-50 flex items-center gap-2 font-medium transition-all shadow-lg\"\r\n            >\r\n              <Save className=\"w-4 h-4\" />\r\n              {editing ? \"Update\" : \"Save\"} Template\r\n            </button>\r\n            {editing && (\r\n              <button\r\n                onClick={resetForm}\r\n                className=\"px-6 py-2.5 bg-gray-500 text-white rounded-lg hover:bg-gray-600 font-medium transition-all\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Category Tabs */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <div className=\"flex space-x-2 overflow-x-auto pb-1\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category}\r\n              onClick={() => setActiveCategory(category)}\r\n              className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors whitespace-nowrap ${\r\n                activeCategory === category\r\n                  ? \"bg-white text-blue-600 border-b-2 border-blue-600\"\r\n                  : \"text-gray-500 hover:text-gray-700 hover:bg-gray-50\"\r\n              }`}\r\n            >\r\n              {category.charAt(0).toUpperCase() + category.slice(1)}\r\n              <span className=\"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-0.5 rounded-full\">\r\n                {groupedTemplates[category]?.length || 0}\r\n              </span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Templates Grid - Only show active category */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {groupedTemplates[activeCategory]?.map((template) => (\r\n          <div\r\n            key={template.id}\r\n            className=\"bg-white rounded-xl border border-gray-200 p-5 hover:shadow-md transition-all\"\r\n          >\r\n            <div className=\"flex justify-between items-start mb-3\">\r\n              <div className=\"flex-1\">\r\n                <h4 className=\"font-bold text-gray-900 mb-1\">\r\n                  {template.template_name}\r\n                </h4>\r\n                <p className=\"text-sm text-gray-600 mb-2\">{template.subject}</p>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"inline-block px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">\r\n                    {template.category}\r\n                  </span>\r\n                  {template.attachments && (\r\n                    <span className=\"inline-flex items-center gap-1 px-3 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">\r\n                      <Paperclip className=\"w-3 h-3\" />\r\n                      {/* Safely parse attachments */}\r\n                      {(() => {\r\n                        try {\r\n                          const attachments =\r\n                            typeof template.attachments === \"string\"\r\n                              ? JSON.parse(template.attachments)\r\n                              : template.attachments;\r\n                          return `${attachments.length} files`;\r\n                        } catch (err) {\r\n                          console.error(\"Error parsing attachments:\", err);\r\n                          return \"0 files\";\r\n                        }\r\n                      })()}\r\n                    </span>\r\n                  )}\r\n                  {template.sender_email && (\r\n                    <span className=\"inline-flex items-center gap-1 px-3 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">\r\n                      <Mail className=\"w-3 h-3\" />\r\n                      {template.sender_email}\r\n                    </span>\r\n                  )}\r\n                  {template.cc_emails && template.cc_emails.length > 0 && (\r\n                    <span className=\"inline-flex items-center gap-1 px-3 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">\r\n                      <Users className=\"w-3 h-3\" />\r\n                      {Array.isArray(template.cc_emails)\r\n                        ? `${template.cc_emails.length} CC`\r\n                        : `${template.cc_emails.split(\",\").length} CC`}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => handleEdit(template)}\r\n                  className=\"p-2 text-green-600 hover:bg-green-50 rounded-lg transition-colors\"\r\n                  title=\"Edit\"\r\n                >\r\n                  <Edit className=\"w-4 h-4\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(template.id)}\r\n                  className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\r\n                  title=\"Delete\"\r\n                >\r\n                  <Trash2 className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {(!groupedTemplates[activeCategory] ||\r\n          groupedTemplates[activeCategory].length === 0) && (\r\n          <div className=\"col-span-2 text-center py-12 text-gray-500\">\r\n            <Mail className=\"w-12 h-12 mx-auto mb-3 opacity-30\" />\r\n            <p>No templates in the {activeCategory} category.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Templates;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3024, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy%20-%20Copy/soetcgdc/frontend/app/email-management/History.js"],"sourcesContent":["import {\r\n  Send,\r\n  Mail,\r\n  Users,\r\n  Trash2,\r\n  Clock,\r\n  AlertCircle,\r\n  CheckCircle2,\r\n  MessageSquare,\r\n  Copy,\r\n  Check,\r\n} from \"lucide-react\";\r\nimport { useEmail } from \"../../context/EmailContext\";\r\nimport { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst History = () => {\r\n  const { logs, deleteLogs } = useEmail();\r\n  const [expandedId, setExpandedId] = useState(null);\r\n  const [copiedId, setCopiedId] = useState(null);\r\n\r\n  const handleDelete = async (id) => {\r\n    const shouldDelete = window.confirm(\r\n      \"Are you sure you want to delete this log?\"\r\n    );\r\n    if (!shouldDelete) return;\r\n\r\n    const deletePromise = deleteLogs(id);\r\n\r\n    toast.promise(deletePromise, {\r\n      loading: \"Deleting log...\",\r\n      success: \"Log deleted successfully\",\r\n      error: \"Failed to delete log\",\r\n    });\r\n  };\r\n\r\n  const toggleExpand = (id) => {\r\n    setExpandedId(expandedId === id ? null : id);\r\n  };\r\n\r\n  const getStatusColor = (successful, failed) => {\r\n    if (failed === 0) return \"bg-slate-50 border-slate-200\";\r\n    if (successful === 0) return \"bg-red-50 border-red-200\";\r\n    return \"bg-yellow-50 border-yellow-200\";\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const copyToClipboard = (text, id) => {\r\n    navigator.clipboard\r\n      .writeText(text)\r\n      .then(() => {\r\n        setCopiedId(id);\r\n        toast.success(\"Copied to clipboard!\", {\r\n          duration: 1200,\r\n          icon: \"📋\",\r\n          style: {\r\n            backgroundColor: \"#F0FDF4\",\r\n            color: \"#166534\",\r\n            border: \"1px solid #BBF7D0\",\r\n          },\r\n        });\r\n        setTimeout(() => setCopiedId(null), 1200);\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Failed to copy text\");\r\n      });\r\n  };\r\n\r\n  const MessageIdSection = ({ id, value, label }) => (\r\n    <div className=\"bg-slate-100 backdrop-blur-sm rounded-lg p-3 hover:bg-slate-100 transition-colors\">\r\n      <p className=\"text-xs font-semibold text-slate-600 mb-2\">{label}</p>\r\n      <div className=\"flex items-center gap-2\">\r\n        <p className=\"text-sm font-mono text-slate-800 break-all flex-1 select-all\">\r\n          {value}\r\n        </p>\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            copyToClipboard(value, id);\r\n          }}\r\n          className={`p-1.5 rounded-md transition-all duration-200 ${\r\n            copiedId === id\r\n              ? \"bg-green-100 text-green-600\"\r\n              : \"hover:bg-slate-200 text-slate-600\"\r\n          }`}\r\n          title={copiedId === id ? \"Copied!\" : \"Copy to clipboard\"}\r\n        >\r\n          {copiedId === id ? (\r\n            <Check className=\"w-4 h-4\" />\r\n          ) : (\r\n            <Copy className=\"w-4 h-4\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const CopyableText = ({ id, value, label }) => (\r\n    <div className=\"bg-slate-100 backdrop-blur-sm rounded-lg p-3\">\r\n      <p className=\"text-xs font-semibold text-slate-600 mb-2\">{label}</p>\r\n      <div className=\"flex items-center gap-2\">\r\n        <p className=\"text-sm text-slate-800 break-all flex-1 select-all\">\r\n          {value}\r\n        </p>\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            copyToClipboard(value, id);\r\n          }}\r\n          className={`p-1.5 rounded-md transition-all duration-200 ${\r\n            copiedId === id\r\n              ? \"bg-green-100 text-green-600\"\r\n              : \"hover:bg-slate-200 text-slate-600\"\r\n          }`}\r\n          title={copiedId === id ? \"Copied!\" : \"Copy to clipboard\"}\r\n        >\r\n          {copiedId === id ? (\r\n            <Check className=\"w-4 h-4\" />\r\n          ) : (\r\n            <Copy className=\"w-4 h-4\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {logs && logs.length > 0 ? (\r\n        logs.map((log) => (\r\n          <div key={log.id} className=\"group\">\r\n            <div\r\n              className={`rounded-xl border transition-all cursor-pointer hover:shadow-lg p-5 ${getStatusColor(\r\n                log.total_successful || 0,\r\n                log.total_failed || 0\r\n              )}`}\r\n              onClick={() => toggleExpand(log.id)}\r\n            >\r\n              {/* Header Row */}\r\n              <div className=\"flex items-start justify-between gap-4\">\r\n                <div className=\"flex-1 min-w-0\">\r\n                  {/* Title and Status */}\r\n                  <div className=\"flex items-center gap-3 mb-3\">\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"font-bold text-gray-900 text-base truncate\">\r\n                        {log.title}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Stats Row */}\r\n                  <div className=\"flex flex-wrap gap-4 text-xs text-gray-600\">\r\n                    <div className=\"flex items-center gap-1.5\">\r\n                      <Users className=\"w-4 h-4\" />\r\n                      <span className=\"font-medium\">\r\n                        {log.total_recipients} recipient\r\n                        {log.total_recipients !== 1 ? \"s\" : \"\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {(log.total_successful || log.total_failed) && (\r\n                      <>\r\n                        <div className=\"flex items-center gap-1.5\">\r\n                          <CheckCircle2 className=\"w-4 h-4 text-green-600\" />\r\n                          <span className=\"font-medium text-green-700\">\r\n                            {log.total_successful || 0} sent\r\n                          </span>\r\n                        </div>\r\n                        {log.total_failed > 0 && (\r\n                          <div className=\"flex items-center gap-1.5\">\r\n                            <AlertCircle className=\"w-4 h-4 text-red-600\" />\r\n                            <span className=\"font-medium text-red-700\">\r\n                              {log.total_failed} failed\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    )}\r\n\r\n                    <div className=\"flex items-center gap-1.5\">\r\n                      <Clock className=\"w-4 h-4\" />\r\n                      {formatDate(log.sent_at)}\r\n                    </div>\r\n\r\n                    {log.message_id && (\r\n                      <div className=\"flex items-center gap-1.5\">\r\n                        <MessageSquare className=\"w-4 h-4\" />\r\n                        <span className=\"font-mono text-gray-500\">\r\n                          {log.message_id.substring(0, 12)}...\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Event Tag */}\r\n                  {log.event_title && (\r\n                    <div className=\"mt-3\">\r\n                      <span className=\"inline-flex items-center gap-1.5 px-2.5 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">\r\n                        <Mail className=\"w-3 h-3\" />\r\n                        {log.event_title}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDelete(log.id);\r\n                    }}\r\n                    className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg transition-colors opacity-0 group-hover:opacity-100\"\r\n                    title=\"Delete\"\r\n                  >\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Expanded Details */}\r\n              {expandedId === log.id && (\r\n                <div className=\"mt-4 pt-4 border-t border-gray-300 space-y-4\">\r\n                  {/* Subject with copy button */}\r\n                  <CopyableText\r\n                    id={`subject-${log.id}`}\r\n                    value={log.subject}\r\n                    label=\"SUBJECT\"\r\n                  />\r\n\r\n                  {/* Contact Info */}\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <p className=\"text-gray-500 text-xs font-medium mb-1\">\r\n                        SENDER\r\n                      </p>\r\n                      <p className=\"text-gray-900 break-all\">\r\n                        {log.sender_email}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {log.to_emails && log.to_emails.length > 0 && (\r\n                      <div>\r\n                        <p className=\"text-gray-500 text-xs font-medium mb-1\">\r\n                          TO\r\n                        </p>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {log.to_emails.map((email, idx) => (\r\n                            <span\r\n                              key={idx}\r\n                              className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-sm text-sm\"\r\n                            >\r\n                              {email}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {log.cc_emails && log.cc_emails.length > 0 && (\r\n                      <div>\r\n                        <p className=\"text-gray-500 text-xs font-medium mb-1\">\r\n                          CC\r\n                        </p>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {log.cc_emails.map((email, idx) => (\r\n                            <span\r\n                              key={idx}\r\n                              className=\"px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-sm\"\r\n                            >\r\n                              {email}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Message IDs */}\r\n                  {(log.message_id || log.parent_message_id) && (\r\n                    <div className=\"space-y-3\">\r\n                      {log.message_id && (\r\n                        <MessageIdSection\r\n                          id={`msg-${log.id}`}\r\n                          value={log.message_id}\r\n                          label=\"MESSAGE ID\"\r\n                        />\r\n                      )}\r\n                      {log.parent_message_id && (\r\n                        <MessageIdSection\r\n                          id={`parent-${log.id}`}\r\n                          value={log.parent_message_id}\r\n                          label=\"FOLLOW-UP OF\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className=\"text-center py-16\">\r\n          <Send className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\r\n          <p className=\"text-gray-500 font-medium\">No emails sent yet</p>\r\n          <p className=\"text-gray-400 text-sm mt-1\">\r\n            Your email history will appear here\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3664, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy%20-%20Copy/soetcgdc/frontend/app/email-management/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Send, Mail, Users, ArrowLeft } from \"lucide-react\";\r\nimport ComposeEmail from \"./ComposeEmail\";\r\nimport Templates from \"./Templates\";\r\nimport History from \"./History\";\r\nimport { EmailProvider } from \"../../context/EmailContext\";\r\n\r\nconst EmailPage = () => {\r\n  const [activeTab, setActiveTab] = useState(\"compose\");\r\n\r\n  const tabs = [\r\n    { id: \"compose\", label: \"Compose Email\", icon: Send },\r\n    { id: \"templates\", label: \"Templates\", icon: Mail },\r\n    { id: \"history\", label: \"History\", icon: Users },\r\n  ];\r\n\r\n  return (\r\n    <EmailProvider>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n        <div className=\"max-w-7xl mx-auto p-6\">\r\n          {/* Header Section */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n              <div className=\"flex items-start gap-4\">\r\n                <button\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  <ArrowLeft className=\"h-6 w-6 text-gray-600\" />\r\n                </button>\r\n                <div>\r\n                  <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                    Email Manager\r\n                  </h1>\r\n                  <p className=\"text-gray-600\">\r\n                    Create, manage, and send official placement communications\r\n                    using templates\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tabs Navigation */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 mb-6 overflow-hidden\">\r\n            <div className=\"flex border-b border-gray-200\">\r\n              {tabs.map((tab) => {\r\n                const Icon = tab.icon;\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id)}\r\n                    className={`flex-1 px-6 py-4 font-semibold text-sm flex items-center justify-center gap-2 transition-all ${\r\n                      activeTab === tab.id\r\n                        ? \"bg-gradient-to-r from-slate-50 to-slate-100 text-blue-600 border-b-2 border-blue-600\"\r\n                        : \"text-gray-600 hover:bg-gray-50\"\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    {tab.label}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Content Section */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n            {activeTab === \"compose\" && <ComposeEmail />}\r\n            {activeTab === \"templates\" && <Templates />}\r\n            {activeTab === \"history\" && <History />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </EmailProvider>\r\n  );\r\n};\r\n\r\nexport default EmailPage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASA,MAAM,YAAY;;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,OAAO;QACX;YAAE,IAAI;YAAW,OAAO;YAAiB,MAAM,qMAAA,CAAA,OAAI;QAAC;QACpD;YAAE,IAAI;YAAa,OAAO;YAAa,MAAM,qMAAA,CAAA,OAAI;QAAC;QAClD;YAAE,IAAI;YAAW,OAAO;YAAW,MAAM,uMAAA,CAAA,QAAK;QAAC;KAChD;IAED,qBACE,6LAAC,0HAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAO,OAAO,QAAQ,CAAC,IAAI,GAAG;wCACvC,WAAU;kDAEV,cAAA,6LAAC,mNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;;;;;;kDAEvB,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAwC;;;;;;0DAGtD,6LAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAUrC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACZ,KAAK,GAAG,CAAC,CAAC;gCACT,MAAM,OAAO,IAAI,IAAI;gCACrB,qBACE,6LAAC;oCAEC,SAAS,IAAM,aAAa,IAAI,EAAE;oCAClC,WAAW,AAAC,gGAIX,OAHC,cAAc,IAAI,EAAE,GAChB,yFACA;;sDAGN,6LAAC;4CAAK,WAAU;;;;;;wCACf,IAAI,KAAK;;mCATL,IAAI,EAAE;;;;;4BAYjB;;;;;;;;;;;kCAKJ,6LAAC;wBAAI,WAAU;;4BACZ,cAAc,2BAAa,6LAAC,6IAAA,CAAA,UAAY;;;;;4BACxC,cAAc,6BAAe,6LAAC,0IAAA,CAAA,UAAS;;;;;4BACvC,cAAc,2BAAa,6LAAC,wIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhD;GArEM;KAAA;uCAuES","debugId":null}}]
}