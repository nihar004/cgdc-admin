{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/DeleteEventModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AlertTriangle, X, Trash2, Calendar, Users } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\nconst DeleteEventModal = ({\r\n  isOpen,\r\n  onClose,\r\n  event,\r\n  isDeleting,\r\n  onEventDeleted,\r\n}) => {\r\n  const [confirmationText, setConfirmationText] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  // Expected confirmation text\r\n  const expectedText = event?.title;\r\n\r\n  useEffect(() => {\r\n    setIsValid(confirmationText === expectedText);\r\n  }, [confirmationText, expectedText]);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      setConfirmationText(\"\");\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleDeleteEvent = async (e) => {\r\n    e.preventDefault();\r\n    if (!isValid) return;\r\n\r\n    try {\r\n      const response = await axios.delete(\r\n        `http://localhost:5000/events/${event.id}`\r\n      );\r\n      if (response.data.success) {\r\n        onEventDeleted();\r\n        onClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"Failed to delete event\");\r\n    }\r\n  };\r\n\r\n  if (!isOpen || !event) return null;\r\n\r\n  return (\r\n    <div className=\"fixed h-full inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100 p-8 w-full max-w-md mx-4 transform transition-all duration-200\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-600\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-bold text-gray-900\">Delete Event</h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-full p-2 transition-all duration-200\"\r\n            disabled={isDeleting}\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Warning Message */}\r\n        <div className=\"mb-6 p-4 bg-gradient-to-r from-red-50 to-rose-50 rounded-xl border border-red-200\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <AlertTriangle className=\"w-5 h-5 text-red-600 flex-shrink-0 mt-0.5\" />\r\n            <div>\r\n              <p className=\"text-sm font-medium text-red-800 mb-2\">\r\n                This action cannot be undone\r\n              </p>\r\n              <p className=\"text-sm text-red-700\">\r\n                This will permanently delete{\" \"}\r\n                <span className=\"font-semibold\">{event.title}</span> and all\r\n                associated attendance records.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Event Info Card */}\r\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-xl\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n              <Calendar className=\"h-6 w-6 text-gray-600\" />\r\n            </div>\r\n            <h3 className=\"font-semibold text-gray-900 mb-1\">{event.title}</h3>\r\n            <p className=\"text-sm text-gray-600 mb-1\">\r\n              {new Date(event.date).toLocaleDateString()}\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">\r\n              <Users className=\"h-4 w-4 inline mr-1\" />\r\n              {event.totalStudents || 0} Student(s)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Confirmation Form */}\r\n        <form onSubmit={handleDeleteEvent}>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              To confirm deletion, type{\" \"}\r\n              <code className=\"px-2 py-1 bg-gray-100 rounded text-sm font-mono text-red-600\">\r\n                {expectedText}\r\n              </code>{\" \"}\r\n              below:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={confirmationText}\r\n              onChange={(e) => setConfirmationText(e.target.value)}\r\n              className={`w-full px-4 py-3 border rounded-xl transition-all duration-200 font-mono ${\r\n                confirmationText.length > 0\r\n                  ? isValid\r\n                    ? \"border-green-300 bg-green-50 focus:ring-2 focus:ring-green-500 focus:border-green-500\"\r\n                    : \"border-red-300 bg-red-50 focus:ring-2 focus:ring-red-500 focus:border-red-500\"\r\n                  : \"border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              }`}\r\n              placeholder=\"Type to confirm...\"\r\n              disabled={isDeleting}\r\n              autoComplete=\"off\"\r\n              spellCheck=\"false\"\r\n            />\r\n            {confirmationText.length > 0 && !isValid && (\r\n              <p className=\"mt-2 text-sm text-red-600\">Text doesn't match</p>\r\n            )}\r\n            {isValid && (\r\n              <p className=\"mt-2 text-sm text-green-600 flex items-center space-x-1\">\r\n                <span className=\"w-4 h-4 bg-green-500 rounded-full flex items-center justify-center\">\r\n                  <span className=\"w-2 h-1 bg-white rounded-full\"></span>\r\n                </span>\r\n                <span>Confirmed - ready to delete</span>\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-3 border border-gray-300 rounded-xl text-gray-700 font-medium hover:bg-gray-50 hover:border-gray-400 transition-all duration-200\"\r\n              disabled={isDeleting}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!isValid || isDeleting}\r\n              className=\"flex-1 px-4 py-3 bg-gradient-to-r from-red-600 to-red-700 text-white font-medium rounded-xl hover:from-red-700 hover:to-red-800 disabled:from-gray-400 disabled:to-gray-500 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl disabled:shadow-none flex items-center justify-center space-x-2\"\r\n            >\r\n              {isDeleting ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\"></div>\r\n                  <span>Deleting...</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Trash2 className=\"h-4 w-4\" />\r\n                  <span>Delete Event</span>\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteEventModal;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA,MAAM,mBAAmB;QAAC,EACxB,MAAM,EACN,OAAO,EACP,KAAK,EACL,UAAU,EACV,cAAc,EACf;;IACC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,6BAA6B;IAC7B,MAAM,eAAe,kBAAA,4BAAA,MAAO,KAAK;IAEjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,WAAW,qBAAqB;QAClC;qCAAG;QAAC;QAAkB;KAAa;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,CAAC,QAAQ;gBACX,oBAAoB;YACtB;QACF;qCAAG;QAAC;KAAO;IAEX,MAAM,oBAAoB,OAAO;QAC/B,EAAE,cAAc;QAChB,IAAI,CAAC,SAAS;QAEd,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CACjC,AAAC,gCAAwC,OAAT,MAAM,EAAE;YAE1C,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB;gBACA;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,IAAI,CAAC,UAAU,CAAC,OAAO,OAAO;IAE9B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;;;;;;8CAE3B,6LAAC;oCAAG,WAAU;8CAAkC;;;;;;;;;;;;sCAElD,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,UAAU;sCAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAKjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,2NAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAwC;;;;;;kDAGrD,6LAAC;wCAAE,WAAU;;4CAAuB;4CACL;0DAC7B,6LAAC;gDAAK,WAAU;0DAAiB,MAAM,KAAK;;;;;;4CAAQ;;;;;;;;;;;;;;;;;;;;;;;;8BAQ5D,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,6MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;0CAEtB,6LAAC;gCAAG,WAAU;0CAAoC,MAAM,KAAK;;;;;;0CAC7D,6LAAC;gCAAE,WAAU;0CACV,IAAI,KAAK,MAAM,IAAI,EAAE,kBAAkB;;;;;;0CAE1C,6LAAC;gCAAE,WAAU;;kDACX,6LAAC,uMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;oCAChB,MAAM,aAAa,IAAI;oCAAE;;;;;;;;;;;;;;;;;;8BAMhC,6LAAC;oBAAK,UAAU;;sCACd,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;;wCAA+C;wCACpC;sDAC1B,6LAAC;4CAAK,WAAU;sDACb;;;;;;wCACK;wCAAI;;;;;;;8CAGd,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;oCACnD,WAAW,AAAC,4EAMX,OALC,iBAAiB,MAAM,GAAG,IACtB,UACE,0FACA,kFACF;oCAEN,aAAY;oCACZ,UAAU;oCACV,cAAa;oCACb,YAAW;;;;;;gCAEZ,iBAAiB,MAAM,GAAG,KAAK,CAAC,yBAC/B,6LAAC;oCAAE,WAAU;8CAA4B;;;;;;gCAE1C,yBACC,6LAAC;oCAAE,WAAU;;sDACX,6LAAC;4CAAK,WAAU;sDACd,cAAA,6LAAC;gDAAK,WAAU;;;;;;;;;;;sDAElB,6LAAC;sDAAK;;;;;;;;;;;;;;;;;;sCAMZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;oCACV,UAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,MAAK;oCACL,UAAU,CAAC,WAAW;oCACtB,WAAU;8CAET,2BACC;;0DACE,6LAAC;gDAAI,WAAU;;;;;;0DACf,6LAAC;0DAAK;;;;;;;qEAGR;;0DACE,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;0DAClB,6LAAC;0DAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASxB;GAxKM;KAAA;uCA0KS","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/EventCard.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  Calendar,\r\n  Clock,\r\n  MapPin,\r\n  Eye,\r\n  Users,\r\n  Building2,\r\n  GraduationCap,\r\n  Star,\r\n  Play,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Mic,\r\n  Trash2,\r\n  Edit,\r\n} from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport DeleteEventModal from \"./DeleteEventModal\"; // Adjust the import path as necessary\r\n\r\nconst getEventTypeConfig = (eventType) => {\r\n  const configs = {\r\n    workshop: {\r\n      icon: GraduationCap,\r\n      color: \"bg-purple-100 text-purple-600\",\r\n      label: \"Workshop\",\r\n    },\r\n    seminar: {\r\n      icon: Mic,\r\n      color: \"bg-blue-100 text-blue-600\",\r\n      label: \"Seminar\",\r\n    },\r\n    company_visit: {\r\n      icon: Building2,\r\n      color: \"bg-green-100 text-green-600\",\r\n      label: \"Company Visit\",\r\n    },\r\n    aptitude_test: {\r\n      icon: Star,\r\n      color: \"bg-amber-100 text-amber-600\",\r\n      label: \"Aptitude Test\",\r\n    },\r\n    technical_round: {\r\n      icon: Users,\r\n      color: \"bg-pink-100 text-pink-600\",\r\n      label: \"Technical Round\",\r\n    },\r\n    hr_round: {\r\n      icon: Users,\r\n      color: \"bg-pink-100 text-pink-600\",\r\n      label: \"HR Round\",\r\n    },\r\n    group_discussion: {\r\n      icon: Users,\r\n      color: \"bg-teal-100 text-teal-600\",\r\n      label: \"Group Discussion\",\r\n    },\r\n    other: {\r\n      icon: Calendar,\r\n      color: \"bg-gray-100 text-gray-600\",\r\n      label: \"Other\",\r\n    },\r\n  };\r\n\r\n  return configs[eventType] || configs.other;\r\n};\r\n\r\nfunction EventCard({\r\n  event,\r\n  selectedBatch,\r\n  setSelectedEvent,\r\n  setEditingEvent,\r\n  fetchEvents,\r\n  onAttendanceClick,\r\n}) {\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  // Handle view details - now the event already has attendance data\r\n  const handleViewDetails = () => {\r\n    // Transform the event data to match the expected format for the modal\r\n    const eventWithStudents = {\r\n      ...event,\r\n      students: event.attendance, // attendance array becomes students array for the modal\r\n      attendanceRate: event.attendanceRate,\r\n    };\r\n    setSelectedEvent(eventWithStudents);\r\n  };\r\n\r\n  const getStatusConfig = (status) => {\r\n    switch (status) {\r\n      case \"completed\":\r\n        return { color: \"bg-green-100 text-green-700\", icon: CheckCircle };\r\n      case \"ongoing\":\r\n        return { color: \"bg-blue-100 text-blue-700\", icon: Play };\r\n      case \"upcoming\":\r\n        return { color: \"bg-yellow-100 text-yellow-700\", icon: AlertCircle };\r\n      default:\r\n        return { color: \"bg-gray-100 text-gray-700\", icon: AlertCircle };\r\n    }\r\n  };\r\n\r\n  const getAttendanceColor = (rate) => {\r\n    if (rate >= 90) return \"text-green-600\";\r\n    if (rate >= 75) return \"text-amber-600\";\r\n    return \"text-red-500\";\r\n  };\r\n\r\n  const statusConfig = getStatusConfig(event.status);\r\n  const StatusIcon = statusConfig.icon;\r\n  const eventTypeConfig = getEventTypeConfig(event.event_type);\r\n  const EventTypeIcon = eventTypeConfig.icon;\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const formatSpecializations = (specs) => {\r\n    if (!specs || specs.length === 0) return \"All\";\r\n    if (Array.isArray(specs)) {\r\n      return specs.join(\", \");\r\n    }\r\n    return specs.replace(/[{}]/g, \"\").split(\",\").join(\", \");\r\n  };\r\n\r\n  const formatYears = (years) => {\r\n    if (!years || years.length === 0) return \"All\";\r\n    return years.join(\", \");\r\n  };\r\n\r\n  const getJobTypeConfig = (jobType) => {\r\n    switch (jobType) {\r\n      case \"internship\":\r\n        return { label: \"Internship\", color: \"bg-blue-100 text-blue-700\" };\r\n      case \"full_time\":\r\n        return { label: \"Full Time\", color: \"bg-green-100 text-green-700\" };\r\n      case \"internship_plus_ppo\":\r\n        return {\r\n          label: \"Internship + PPO\",\r\n          color: \"bg-purple-100 text-purple-700\",\r\n        };\r\n      default:\r\n        return { label: \"Not Specified\", color: \"bg-gray-100 text-gray-700\" };\r\n    }\r\n  };\r\n\r\n  const renderCompensation = (jobType, packageRange, stipend) => {\r\n    const components = [];\r\n\r\n    if (jobType === \"internship\" && stipend && parseFloat(stipend) > 0) {\r\n      components.push(\r\n        <span\r\n          key=\"stipend\"\r\n          className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full\"\r\n        >\r\n          ₹{parseFloat(stipend).toLocaleString()} stipend\r\n        </span>\r\n      );\r\n    } else if (\r\n      jobType === \"full_time\" &&\r\n      packageRange &&\r\n      parseFloat(packageRange) > 0\r\n    ) {\r\n      components.push(\r\n        <span\r\n          key=\"package\"\r\n          className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full\"\r\n        >\r\n          ₹{(parseFloat(packageRange) / 100000).toFixed(1)} LPA\r\n        </span>\r\n      );\r\n    } else if (jobType === \"internship_plus_ppo\") {\r\n      if (stipend && parseFloat(stipend) > 0) {\r\n        components.push(\r\n          <span\r\n            key=\"stipend\"\r\n            className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full\"\r\n          >\r\n            ₹{parseFloat(stipend).toLocaleString()} stipend\r\n          </span>\r\n        );\r\n      }\r\n      if (packageRange && parseFloat(packageRange) > 0) {\r\n        components.push(\r\n          <span\r\n            key=\"package\"\r\n            className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full\"\r\n          >\r\n            ₹{(parseFloat(packageRange) / 100000).toFixed(1)} LPA\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n\r\n    return components;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-all duration-200 border border-gray-200 overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"p-4 border-b border-gray-100\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex items-start space-x-3 flex-1 min-w-0\">\r\n              <div className={`p-2 rounded-lg ${eventTypeConfig.color}`}>\r\n                <EventTypeIcon className=\"h-4 w-4\" />\r\n              </div>\r\n              <div className=\"flex-1 min-w-0\">\r\n                <div className=\"flex items-center space-x-2 mb-1\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\r\n                    {event.title}\r\n                  </h3>\r\n                  <span\r\n                    className={`text-xs px-2 py-1 rounded-full ${eventTypeConfig.color}`}\r\n                  >\r\n                    {eventTypeConfig.label}\r\n                  </span>\r\n                  {event.isMandatory && (\r\n                    <Star className=\"h-4 w-4 text-amber-500 fill-current flex-shrink-0\" />\r\n                  )}\r\n                </div>\r\n\r\n                {event.company && (\r\n                  <p className=\"text-blue-600 font-medium text-sm mb-1\">\r\n                    {event.company}\r\n                  </p>\r\n                )}\r\n\r\n                {(event.positionTitle || event.jobType) && (\r\n                  <div className=\"flex items-center flex-wrap gap-2 mt-2\">\r\n                    {event.positionTitle && (\r\n                      <span className=\"text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full\">\r\n                        {event.positionTitle}\r\n                      </span>\r\n                    )}\r\n                    {event.jobType && (\r\n                      <span\r\n                        className={`text-xs px-2 py-1 rounded-full ${\r\n                          getJobTypeConfig(event.jobType).color\r\n                        }`}\r\n                      >\r\n                        {getJobTypeConfig(event.jobType).label}\r\n                      </span>\r\n                    )}\r\n                    {renderCompensation(\r\n                      event.jobType,\r\n                      event.packageRange,\r\n                      event.stipend\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${statusConfig.color} flex-shrink-0`}\r\n            >\r\n              <StatusIcon className=\"h-3 w-3 mr-1\" />\r\n              {event.status.charAt(0).toUpperCase() + event.status.slice(1)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Details Grid */}\r\n        <div className=\"p-4\">\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-3 text-xs mb-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Calendar className=\"h-3 w-3 text-gray-400\" />\r\n              <span className=\"text-gray-600\">{formatDate(event.date)}</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Clock className=\"h-3 w-3 text-gray-400\" />\r\n              <span className=\"text-gray-600\">\r\n                {event.time}\r\n                {event.endTime && ` - ${event.endTime}`}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <MapPin className=\"h-3 w-3 text-gray-400\" />\r\n              <span className=\"text-gray-600\">\r\n                {event.venue} {event.mode && `(${event.mode})`}\r\n              </span>\r\n            </div>\r\n            {event.speakerDetails && event.speakerDetails.speaker && (\r\n              <div className=\"text-xs flex items-center space-x-2\">\r\n                <Mic className=\"h-3 w-3 text-gray-400\" />\r\n                <span className=\"text-gray-500\">Speaker: </span>\r\n                <span className=\"text-gray-700 font-medium\">\r\n                  {event.speakerDetails.speaker}\r\n                </span>\r\n                {event.speakerDetails.designation && (\r\n                  <>\r\n                    <span className=\"text-gray-400 mx-1\">•</span>\r\n                    <span className=\"text-gray-600\">\r\n                      {event.speakerDetails.designation}\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Target Criteria*/}\r\n          <div className=\"space-y-2 mb-4\">\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div>\r\n                  <span className=\"text-gray-500\">Specializations: </span>\r\n                  <span className=\"text-gray-700 font-medium\">\r\n                    {formatSpecializations(event.targetSpecializations)}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-gray-500\">Years: </span>\r\n                  <span className=\"text-gray-700 font-medium\">\r\n                    {formatYears(event.targetAcademicYears)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Attendance Summary - Now using real data from API */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n            <div className=\"grid grid-cols-4 gap-3 text-center\">\r\n              <div>\r\n                <div className=\"text-lg font-bold text-gray-900\">\r\n                  {event.totalStudents || 0}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">Total</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg font-bold text-green-600\">\r\n                  {event.attendedStudents || 0}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">Present</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg font-bold text-red-500\">\r\n                  {event.absentStudents || 0}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">Absent</div>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  className={`text-lg font-bold ${getAttendanceColor(\r\n                    event.attendanceRate || 0\r\n                  )}`}\r\n                >\r\n                  {event.attendanceRate || 0}%\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">Rate</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div className=\"px-4 py-3 bg-gray-50 border-t border-gray-100\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={handleViewDetails}\r\n                  className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-blue-700 bg-blue-100 hover:bg-blue-200 rounded-lg transition-colors\"\r\n                >\r\n                  <Users className=\"h-3 w-3 mr-1\" />\r\n                  View Attendance\r\n                </button>\r\n                <button\r\n                  onClick={onAttendanceClick}\r\n                  className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-green-700 bg-green-100 hover:bg-green-200 rounded-lg transition-colors\"\r\n                >\r\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                  Mark Attendance\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() => setEditingEvent(event)}\r\n                  className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\r\n                >\r\n                  <Edit className=\"h-3 w-3 mr-1\" />\r\n                  Edit\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => setShowDeleteModal(true)}\r\n                  className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium text-red-700 bg-red-100 hover:bg-red-200 rounded-lg transition-colors\"\r\n                >\r\n                  <Trash2 className=\"h-3 w-3 mr-1\" />\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n\r\n      {/* Add Modals */}\r\n      <DeleteEventModal\r\n        isOpen={showDeleteModal}\r\n        onClose={() => setShowDeleteModal(false)}\r\n        event={event}\r\n        isDeleting={isDeleting}\r\n        onEventDeleted={fetchEvents}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/StudentDetailModel.js"],"sourcesContent":["import { XCircle, CheckCircle, AlertCircle, Clock, User } from \"lucide-react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction StudentDetailModel({ selectedEvent, setSelectedEvent }) {\r\n  const getAttendanceStatusIcon = (status) => {\r\n    switch (status) {\r\n      case \"present\":\r\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n      case \"absent\":\r\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\r\n      case \"late\":\r\n        return <AlertCircle className=\"h-4 w-4 text-yellow-500\" />;\r\n      case \"registered\":\r\n        return <Clock className=\"h-4 w-4 text-blue-500\" />;\r\n      default:\r\n        return <User className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const baseClasses =\r\n      \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\";\r\n    switch (status) {\r\n      case \"present\":\r\n        return `${baseClasses} bg-green-100 text-green-800`;\r\n      case \"absent\":\r\n        return `${baseClasses} bg-red-100 text-red-800`;\r\n      case \"late\":\r\n        return `${baseClasses} bg-yellow-100 text-yellow-800`;\r\n      case \"registered\":\r\n        return `${baseClasses} bg-blue-100 text-blue-800`;\r\n      default:\r\n        return `${baseClasses} bg-gray-100 text-gray-800`;\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    try {\r\n      // Prepare data for export - only attendance related information\r\n      const exportData = selectedEvent.students.map((student) => ({\r\n        \"Student Name\": student.name,\r\n        \"Registration Number\": student.registrationNumber,\r\n        \"Enrollment Number\": student.enrollmentNumber,\r\n        Department: student.department,\r\n        \"Batch Year\": student.batchYear,\r\n        Status:\r\n          student.status.charAt(0).toUpperCase() + student.status.slice(1),\r\n        \"Check-in Time\": student.checkInTime || \"-\",\r\n        Reason: student.reasonForChange || \"NULL\",\r\n      }));\r\n\r\n      // Create worksheet\r\n      const ws = XLSX.utils.json_to_sheet(exportData);\r\n\r\n      // Set column widths\r\n      ws[\"!cols\"] = [\r\n        { wch: 25 }, // Student Name\r\n        { wch: 15 }, // Registration Number\r\n        { wch: 15 }, // Enrollment Number\r\n        { wch: 20 }, // Department\r\n        { wch: 10 }, // Batch Year\r\n        { wch: 10 }, // Status\r\n        { wch: 15 }, // Check-in Time\r\n        { wch: 30 }, // Reason\r\n      ];\r\n\r\n      // Create workbook and add the sheet\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, \"Attendance\");\r\n\r\n      // Generate filename with current date\r\n      const fileName = `attendance_${new Date().toLocaleDateString().replace(/\\//g, \"-\")}.xlsx`;\r\n\r\n      // Save file\r\n      XLSX.writeFile(wb, fileName);\r\n    } catch (error) {\r\n      console.error(\"Error exporting to Excel:\", error);\r\n      alert(\"Failed to export attendance data\");\r\n    }\r\n  };\r\n\r\n  if (!selectedEvent || !selectedEvent.students) {\r\n    return null;\r\n  }\r\n\r\n  const presentCount = selectedEvent.students.filter(\r\n    (s) => s.status === \"present\"\r\n  ).length;\r\n  const absentCount = selectedEvent.students.filter(\r\n    (s) => s.status === \"absent\"\r\n  ).length;\r\n  const lateCount = selectedEvent.students.filter(\r\n    (s) => s.status === \"late\"\r\n  ).length;\r\n  const registeredCount = selectedEvent.students.filter(\r\n    (s) => s.status === \"registered\"\r\n  ).length;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div className=\"relative top-10 mx-auto p-5 border w-11/12 max-w-7xl shadow-lg rounded-md bg-white mb-20\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">\r\n              Student Attendance - {selectedEvent.title}\r\n            </h3>\r\n            {selectedEvent.company && (\r\n              <p className=\"text-sm text-blue-600 font-medium mt-1\">\r\n                {selectedEvent.company}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <button\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            onClick={() => setSelectedEvent(null)}\r\n          >\r\n            <XCircle className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Event Details Summary */}\r\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n            <div>\r\n              <span className=\"font-medium text-gray-600\">Date: </span>\r\n              <span className=\"text-gray-900\">\r\n                {new Date(selectedEvent.date).toLocaleDateString(\"en-US\", {\r\n                  weekday: \"short\",\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"font-medium text-gray-600\">Time: </span>\r\n              <span className=\"text-gray-900\">\r\n                {selectedEvent.time}\r\n                {selectedEvent.endTime && ` - ${selectedEvent.endTime}`}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"font-medium text-gray-600\">Venue: </span>\r\n              <span className=\"text-gray-900\">\r\n                {selectedEvent.venue}\r\n                {selectedEvent.mode && ` (${selectedEvent.mode})`}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"font-medium text-gray-600\">Status: </span>\r\n              <span\r\n                className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n                  selectedEvent.status === \"completed\"\r\n                    ? \"bg-green-100 text-green-700\"\r\n                    : selectedEvent.status === \"ongoing\"\r\n                      ? \"bg-blue-100 text-blue-700\"\r\n                      : \"bg-yellow-100 text-yellow-700\"\r\n                }`}\r\n              >\r\n                {selectedEvent.status.charAt(0).toUpperCase() +\r\n                  selectedEvent.status.slice(1)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Attendance Summary */}\r\n        <div className=\"mb-6 grid grid-cols-2 md:grid-cols-5 gap-4\">\r\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-gray-900\">\r\n              {selectedEvent.students.length}\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Total Students</div>\r\n          </div>\r\n          <div className=\"bg-white border border-green-200 rounded-lg p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-green-600\">\r\n              {presentCount}\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Present</div>\r\n          </div>\r\n          <div className=\"bg-white border border-red-200 rounded-lg p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-red-600\">{absentCount}</div>\r\n            <div className=\"text-sm text-gray-600\">Absent</div>\r\n          </div>\r\n          {lateCount > 0 && (\r\n            <div className=\"bg-white border border-yellow-200 rounded-lg p-4 text-center\">\r\n              <div className=\"text-2xl font-bold text-yellow-600\">\r\n                {lateCount}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Late</div>\r\n            </div>\r\n          )}\r\n          {registeredCount > 0 && (\r\n            <div className=\"bg-white border border-blue-200 rounded-lg p-4 text-center\">\r\n              <div className=\"text-2xl font-bold text-blue-600\">\r\n                {registeredCount}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Registered</div>\r\n            </div>\r\n          )}\r\n          <div className=\"bg-white border border-gray-200 rounded-lg p-4 text-center\">\r\n            <div\r\n              className={`text-2xl font-bold ${\r\n                selectedEvent.attendanceRate >= 90\r\n                  ? \"text-green-600\"\r\n                  : selectedEvent.attendanceRate >= 75\r\n                    ? \"text-yellow-600\"\r\n                    : \"text-red-600\"\r\n              }`}\r\n            >\r\n              {selectedEvent.attendanceRate || 0}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">Attendance Rate</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Students Table */}\r\n        <div className=\"overflow-x-auto bg-white border border-gray-200 rounded-lg\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Student Name\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Registration No.\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Enrollment No.\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Department\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Batch Year\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Check-in Time\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Reason for Change\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {selectedEvent.students.map((student) => (\r\n                <tr key={student.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">\r\n                      {student.name}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {student.registrationNumber}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {student.enrollmentNumber}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {student.department}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {student.batchYear}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={getStatusBadge(student.status)}>\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        {getAttendanceStatusIcon(student.status)}\r\n                        <span>\r\n                          {student.status.charAt(0).toUpperCase() +\r\n                            student.status.slice(1)}\r\n                        </span>\r\n                      </div>\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {student.checkInTime || \"-\"}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <div className=\"text-sm\">\r\n                      {student.reasonForChange ? (\r\n                        <span className=\"text-blue-600 font-medium\">\r\n                          {student.reasonForChange}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"text-gray-500 italic\">\r\n                          Not excused\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Modal Footer */}\r\n        <div className=\"mt-6 flex justify-between items-center pt-4 border-t border-gray-200\">\r\n          <div className=\"text-sm text-gray-600\">\r\n            Showing {selectedEvent.students.length} students • Present:{\" \"}\r\n            {presentCount} • Absent: {absentCount}\r\n            {lateCount > 0 && ` • Late: ${lateCount}`}\r\n            {registeredCount > 0 && ` • Registered: ${registeredCount}`}\r\n          </div>\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={handleExport}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Export Attendance\r\n            </button>\r\n            <button\r\n              onClick={() => setSelectedEvent(null)}\r\n              className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDetailModel;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2074, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/PaginationBar.js"],"sourcesContent":["function PaginationBar({ pagination, handlePageChange }) {\r\n  return (\r\n    <div className=\"flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6 mt-6 rounded-lg\">\r\n      <div className=\"flex flex-1 justify-between sm:hidden\">\r\n        <button\r\n          onClick={() => handlePageChange(pagination.currentPage - 1)}\r\n          disabled={pagination.currentPage <= 1}\r\n          className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={() => handlePageChange(pagination.currentPage + 1)}\r\n          disabled={!pagination.hasMore}\r\n          className=\"relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 disabled:opacity-50\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div className=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Showing page{\" \"}\r\n            <span className=\"font-medium\">{pagination.currentPage}</span> of{\" \"}\r\n            <span className=\"font-medium\">{pagination.totalPages}</span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <nav\r\n            className=\"isolate inline-flex -space-x-px rounded-md shadow-sm\"\r\n            aria-label=\"Pagination\"\r\n          >\r\n            <button\r\n              onClick={() => handlePageChange(pagination.currentPage - 1)}\r\n              disabled={pagination.currentPage <= 1}\r\n              className=\"relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50\"\r\n            >\r\n              Previous\r\n            </button>\r\n            {[...Array(pagination.totalPages)].map((_, i) => {\r\n              const page = i + 1;\r\n              const isCurrentPage = page === pagination.currentPage;\r\n              const showPage =\r\n                page === 1 ||\r\n                page === pagination.totalPages ||\r\n                (page >= pagination.currentPage - 1 &&\r\n                  page <= pagination.currentPage + 1);\r\n\r\n              if (!showPage) {\r\n                if (\r\n                  page === pagination.currentPage - 2 ||\r\n                  page === pagination.currentPage + 2\r\n                ) {\r\n                  return (\r\n                    <span\r\n                      key={page}\r\n                      className=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300\"\r\n                    >\r\n                      ...\r\n                    </span>\r\n                  );\r\n                }\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <button\r\n                  key={page}\r\n                  onClick={() => handlePageChange(page)}\r\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\r\n                    isCurrentPage\r\n                      ? \"z-10 bg-blue-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600\"\r\n                      : \"text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0\"\r\n                  }`}\r\n                >\r\n                  {page}\r\n                </button>\r\n              );\r\n            })}\r\n            <button\r\n              onClick={() => handlePageChange(pagination.currentPage + 1)}\r\n              disabled={!pagination.hasMore}\r\n              className=\"relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 disabled:opacity-50\"\r\n            >\r\n              Next\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationBar;\r\n"],"names":[],"mappings":";;;;;AAAA,SAAS,cAAc,KAAgC;QAAhC,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAAhC;IACrB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS,IAAM,iBAAiB,WAAW,WAAW,GAAG;wBACzD,UAAU,WAAW,WAAW,IAAI;wBACpC,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,SAAS,IAAM,iBAAiB,WAAW,WAAW,GAAG;wBACzD,UAAU,CAAC,WAAW,OAAO;wBAC7B,WAAU;kCACX;;;;;;;;;;;;0BAIH,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCACC,cAAA,6LAAC;4BAAE,WAAU;;gCAAwB;gCACtB;8CACb,6LAAC;oCAAK,WAAU;8CAAe,WAAW,WAAW;;;;;;gCAAQ;gCAAI;8CACjE,6LAAC;oCAAK,WAAU;8CAAe,WAAW,UAAU;;;;;;;;;;;;;;;;;kCAGxD,6LAAC;kCACC,cAAA,6LAAC;4BACC,WAAU;4BACV,cAAW;;8CAEX,6LAAC;oCACC,SAAS,IAAM,iBAAiB,WAAW,WAAW,GAAG;oCACzD,UAAU,WAAW,WAAW,IAAI;oCACpC,WAAU;8CACX;;;;;;gCAGA;uCAAI,MAAM,WAAW,UAAU;iCAAE,CAAC,GAAG,CAAC,CAAC,GAAG;oCACzC,MAAM,OAAO,IAAI;oCACjB,MAAM,gBAAgB,SAAS,WAAW,WAAW;oCACrD,MAAM,WACJ,SAAS,KACT,SAAS,WAAW,UAAU,IAC7B,QAAQ,WAAW,WAAW,GAAG,KAChC,QAAQ,WAAW,WAAW,GAAG;oCAErC,IAAI,CAAC,UAAU;wCACb,IACE,SAAS,WAAW,WAAW,GAAG,KAClC,SAAS,WAAW,WAAW,GAAG,GAClC;4CACA,qBACE,6LAAC;gDAEC,WAAU;0DACX;+CAFM;;;;;wCAMX;wCACA,OAAO;oCACT;oCAEA,qBACE,6LAAC;wCAEC,SAAS,IAAM,iBAAiB;wCAChC,WAAW,AAAC,qEAIX,OAHC,gBACI,uJACA;kDAGL;uCARI;;;;;gCAWX;8CACA,6LAAC;oCACC,SAAS,IAAM,iBAAiB,WAAW,WAAW,GAAG;oCACzD,UAAU,CAAC,WAAW,OAAO;oCAC7B,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;KA3FS;uCA6FM","debugId":null}},
    {"offset": {"line": 2242, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/BatchContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BatchContext = createContext();\r\n\r\nexport function BatchProvider({ children }) {\r\n  const [selectedBatch, setSelectedBatch] = useState(() => {\r\n    // Check if localStorage is available (client-side)\r\n    if (typeof window !== \"undefined\" && window.localStorage) {\r\n      const savedBatch = localStorage.getItem(\"selectedBatch\");\r\n      return savedBatch ? JSON.parse(savedBatch) : null;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const [batches, setBatches] = useState([]); // store all available batches\r\n\r\n  // Fetch batches only once when the app loads\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function fetchBatches() {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/batches\", {\r\n          signal: controller.signal,\r\n        });\r\n        const fetchedBatches = res.data;\r\n        setBatches(fetchedBatches);\r\n\r\n        // Check if localStorage is available before using it\r\n        if (typeof window !== \"undefined\" && window.localStorage) {\r\n          if (\r\n            !localStorage.getItem(\"selectedBatch\") &&\r\n            fetchedBatches.length > 0\r\n          ) {\r\n            setSelectedBatch(fetchedBatches[0]);\r\n          }\r\n        } else if (fetchedBatches.length > 0) {\r\n          // Fallback for SSR - just set the first batch\r\n          setSelectedBatch(fetchedBatches[0]);\r\n        }\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) return; // request was cancelled\r\n        console.error(\"Error fetching batches:\", error);\r\n      }\r\n    }\r\n    fetchBatches();\r\n    return () => controller.abort();\r\n  }, []);\r\n\r\n  // Whenever selectedBatch changes → save to localStorage (client-side only)\r\n  useEffect(() => {\r\n    if (selectedBatch && typeof window !== \"undefined\" && window.localStorage) {\r\n      localStorage.setItem(\"selectedBatch\", JSON.stringify(selectedBatch));\r\n    }\r\n  }, [selectedBatch]);\r\n\r\n  const reloadBatches = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/batches\");\r\n      const fetchedBatches = res.data;\r\n      setBatches(fetchedBatches);\r\n\r\n      // If no batch is selected and we have batches, select the first one\r\n      if (!selectedBatch && fetchedBatches.length > 0) {\r\n        setSelectedBatch(fetchedBatches[0].year);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching batches:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BatchContext.Provider\r\n      value={{ selectedBatch, setSelectedBatch, batches, reloadBatches }}\r\n    >\r\n      {children}\r\n    </BatchContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useBatchContext = () => {\r\n  const context = useContext(BatchContext);\r\n  if (!context) {\r\n    throw new Error(\"useBatchContext must be used within a BatchProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;AAEA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;AAE1B,SAAS,cAAc,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IAC5B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;kCAAE;YACjD,mDAAmD;YACnD,IAAI,aAAkB,eAAe,OAAO,YAAY,EAAE;gBACxD,MAAM,aAAa,aAAa,OAAO,CAAC;gBACxC,OAAO,aAAa,KAAK,KAAK,CAAC,cAAc;YAC/C;YACA,OAAO;QACT;;IAEA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,GAAG,8BAA8B;IAE1E,6CAA6C;IAC7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,aAAa,IAAI;YACvB,eAAe;gBACb,IAAI;oBACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,iCAAiC;wBAC3D,QAAQ,WAAW,MAAM;oBAC3B;oBACA,MAAM,iBAAiB,IAAI,IAAI;oBAC/B,WAAW;oBAEX,qDAAqD;oBACrD,IAAI,aAAkB,eAAe,OAAO,YAAY,EAAE;wBACxD,IACE,CAAC,aAAa,OAAO,CAAC,oBACtB,eAAe,MAAM,GAAG,GACxB;4BACA,iBAAiB,cAAc,CAAC,EAAE;wBACpC;oBACF,OAAO,IAAI,eAAe,MAAM,GAAG,GAAG;wBACpC,8CAA8C;wBAC9C,iBAAiB,cAAc,CAAC,EAAE;oBACpC;gBACF,EAAE,OAAO,OAAO;oBACd,IAAI,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,QAAQ,QAAQ,wBAAwB;oBAC3D,QAAQ,KAAK,CAAC,2BAA2B;gBAC3C;YACF;YACA;YACA;2CAAO,IAAM,WAAW,KAAK;;QAC/B;kCAAG,EAAE;IAEL,2EAA2E;IAC3E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,iBAAiB,aAAkB,eAAe,OAAO,YAAY,EAAE;gBACzE,aAAa,OAAO,CAAC,iBAAiB,KAAK,SAAS,CAAC;YACvD;QACF;kCAAG;QAAC;KAAc;IAElB,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YAC5B,MAAM,iBAAiB,IAAI,IAAI;YAC/B,WAAW;YAEX,oEAAoE;YACpE,IAAI,CAAC,iBAAiB,eAAe,MAAM,GAAG,GAAG;gBAC/C,iBAAiB,cAAc,CAAC,EAAE,CAAC,IAAI;YACzC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,qBACE,6LAAC,aAAa,QAAQ;QACpB,OAAO;YAAE;YAAe;YAAkB;YAAS;QAAc;kBAEhE;;;;;;AAGP;GAzEgB;KAAA;AA2ET,MAAM,kBAAkB;;IAC7B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}},
    {"offset": {"line": 2358, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/CreateEvent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Calendar,\r\n  Building2,\r\n  Users,\r\n  FileText,\r\n  Star,\r\n  Mic,\r\n  Save,\r\n  X,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  GraduationCap,\r\n} from \"lucide-react\";\r\n\r\n// Update the initial form state to handle backend data format\r\nfunction CreateEvent({\r\n  onBack,\r\n  onEventCreated,\r\n  selectedBatch,\r\n  isEditing = false,\r\n  eventData = null,\r\n}) {\r\n  // Helper function to format time from backend format\r\n  const formatTimeForInput = (timeString) => {\r\n    if (!timeString) return \"\";\r\n    const [time, period] = timeString.split(\" \");\r\n    const [hours, minutes] = time.split(\":\");\r\n    let hour = parseInt(hours);\r\n\r\n    if (period === \"PM\" && hour !== 12) {\r\n      hour += 12;\r\n    } else if (period === \"AM\" && hour === 12) {\r\n      hour = 0;\r\n    }\r\n\r\n    return `${hour.toString().padStart(2, \"0\")}:${minutes}`;\r\n  };\r\n\r\n  // Helper function to parse targetSpecializations from \"{CSE}\" format\r\n  const parseSpecializations = (specializations) => {\r\n    if (!specializations) return [];\r\n    return specializations.replace(/{|}/g, \"\").split(\",\");\r\n  };\r\n\r\n  // 1. Correct initialization for edit mode\r\n  const [formData, setFormData] = useState(\r\n    isEditing && eventData\r\n      ? {\r\n          eventCategory:\r\n            eventData.type === \"company_round\" ? \"company_event\" : \"cgdc_event\",\r\n          title: eventData.title || \"\",\r\n          eventType: eventData.event_type || \"other\",\r\n          date: eventData.date || \"\",\r\n          startTime: formatTimeForInput(eventData.time) || \"\",\r\n          endTime: formatTimeForInput(eventData.endTime) || \"\",\r\n          venue: eventData.venue || \"\",\r\n          mode: eventData.mode || \"offline\",\r\n          isMandatory: eventData.isMandatory || false,\r\n          companyId: eventData.company_id\r\n            ? eventData.company_id.toString()\r\n            : \"\",\r\n          positionId: eventData.position_id\r\n            ? eventData.position_id.toString()\r\n            : \"\",\r\n          targetSpecializations: parseSpecializations(\r\n            eventData.targetSpecializations\r\n          ),\r\n          targetAcademicYears: eventData.targetAcademicYears || [],\r\n          speakerDetails: eventData.speakerDetails || {\r\n            speaker: \"\",\r\n            designation: \"\",\r\n          },\r\n        }\r\n      : {\r\n          eventCategory: \"\",\r\n          title: \"\",\r\n          eventType: \"other\",\r\n          date: \"\", // Single date field\r\n          startTime: \"\", // Just time\r\n          endTime: \"\", // Just time\r\n          venue: \"\",\r\n          mode: \"offline\",\r\n          isMandatory: false,\r\n          companyId: \"\",\r\n          positionId: \"\",\r\n          targetSpecializations: [],\r\n          targetAcademicYears: [],\r\n          speakerDetails: {\r\n            speaker: \"\",\r\n            designation: \"\",\r\n          },\r\n        }\r\n  );\r\n\r\n  const [companiesWithPositions, setCompaniesWithPositions] = useState([]);\r\n  const [selectedCompanyPositions, setSelectedCompanyPositions] = useState([]);\r\n  const [academicYears, setAcademicYears] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [submitStatus, setSubmitStatus] = useState(\"\");\r\n\r\n  // Event types for different categories\r\n  const companyEventTypes = [\r\n    { value: \"other\", label: \"Other\" }, // Add \"other\" as first option\r\n    { value: \"aptitude_test\", label: \"Aptitude Test\" },\r\n    { value: \"technical_round\", label: \"Technical Round\" },\r\n    { value: \"hr_round\", label: \"HR Round\" },\r\n    { value: \"group_discussion\", label: \"Group Discussion\" },\r\n    { value: \"final_interview\", label: \"Final Interview\" },\r\n  ];\r\n\r\n  const cgdcEventTypes = [\r\n    { value: \"other\", label: \"Other\" }, // Add \"other\" as first option\r\n    { value: \"workshop\", label: \"Workshop\" },\r\n    { value: \"seminar\", label: \"Seminar\" },\r\n    { value: \"training\", label: \"Training Session\" },\r\n    { value: \"career_guidance\", label: \"Career Guidance\" },\r\n    { value: \"skill_development\", label: \"Skill Development\" },\r\n    { value: \"pre_placement_talk\", label: \"Pre-Placement Talk\" },\r\n    { value: \"company_visit\", label: \"Company Visit\" },\r\n  ];\r\n\r\n  const specializations = [\"CSE\", \"ECE\", \"ME\"];\r\n\r\n  const modes = [\r\n    { value: \"offline\", label: \"Offline\" },\r\n    { value: \"online\", label: \"Online\" },\r\n    { value: \"hybrid\", label: \"Hybrid\" },\r\n  ];\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    if (selectedBatch) {\r\n      fetchCompaniesWithPositions(selectedBatch);\r\n    }\r\n    fetchBatches();\r\n  }, [selectedBatch]);\r\n\r\n  // Auto-set academic years for company events\r\n  useEffect(() => {\r\n    if (formData.eventCategory === \"company_event\" && selectedBatch) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        targetAcademicYears: [selectedBatch.toString()],\r\n      }));\r\n    } else if (formData.eventCategory === \"cgdc_event\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        targetAcademicYears: [],\r\n      }));\r\n    }\r\n  }, [formData.eventCategory, selectedBatch]);\r\n\r\n  // Update positions when company is selected\r\n  useEffect(() => {\r\n    if (formData.companyId) {\r\n      const selectedCompany = companiesWithPositions.find(\r\n        (company) => company.company_id.toString() === formData.companyId\r\n      );\r\n      setSelectedCompanyPositions(selectedCompany?.positions || []);\r\n      // Only reset positionId when companyId changes by user (not on initial load)\r\n      if (!isEditing) {\r\n        setFormData((prev) => ({ ...prev, positionId: \"\" }));\r\n      }\r\n    } else {\r\n      setSelectedCompanyPositions([]);\r\n      if (!isEditing) {\r\n        setFormData((prev) => ({ ...prev, positionId: \"\" }));\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [formData.companyId, companiesWithPositions]);\r\n\r\n  // When editing, set selectedCompanyPositions after companies are loaded\r\n  useEffect(() => {\r\n    if (isEditing && formData.companyId && companiesWithPositions.length > 0) {\r\n      const selectedCompany = companiesWithPositions.find(\r\n        (company) => company.company_id.toString() === formData.companyId\r\n      );\r\n      setSelectedCompanyPositions(selectedCompany?.positions || []);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isEditing, formData.companyId, companiesWithPositions]);\r\n\r\n  const fetchCompaniesWithPositions = async (batchYear) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/companies/with-active-positions/${batchYear}`\r\n      );\r\n      if (response.data.success) {\r\n        setCompaniesWithPositions(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching companies with positions:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchBatches = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/batches\");\r\n      if (response.data) {\r\n        const years = response.data.map((batch) => batch.year.toString());\r\n        setAcademicYears(years.sort());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching batch years:\", error);\r\n    }\r\n  };\r\n\r\n  // Update the handleInputChange function to maintain \"other\" as default\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (name.startsWith(\"speakerDetails.\")) {\r\n      const field = name.split(\".\")[1];\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        speakerDetails: {\r\n          ...prev.speakerDetails,\r\n          [field]: value,\r\n        },\r\n      }));\r\n    } else if (name === \"eventCategory\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        eventType: \"other\", // Always set to \"other\" when changing category\r\n        companyId: \"\",\r\n        positionId: \"\",\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: type === \"checkbox\" ? checked : value,\r\n      }));\r\n    }\r\n\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors((prev) => ({ ...prev, [name]: \"\" }));\r\n    }\r\n  };\r\n\r\n  const handleMultiSelectChange = (name, value) => {\r\n    setFormData((prev) => {\r\n      const currentValues = prev[name];\r\n      const newValues = currentValues.includes(value)\r\n        ? currentValues.filter((v) => v !== value)\r\n        : [...currentValues, value];\r\n\r\n      return { ...prev, [name]: newValues };\r\n    });\r\n  };\r\n\r\n  // Update the form validation to match API requirements\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Required fields validation\r\n    if (!formData.title.trim()) newErrors.title = \"Title is required\";\r\n\r\n    // Time validation\r\n    if (formData.startTime && formData.endTime) {\r\n      const start = new Date(`2000-01-01T${formData.startTime}`);\r\n      const end = new Date(`2000-01-01T${formData.endTime}`);\r\n      if (end <= start) {\r\n        newErrors.endTime = \"End time must be after start time\";\r\n      }\r\n    }\r\n\r\n    // Target audience validation for cgdc events\r\n    if (formData.eventCategory === \"cgdc_event\") {\r\n      if (\r\n        !formData.targetAcademicYears ||\r\n        formData.targetAcademicYears.length === 0\r\n      ) {\r\n        newErrors.targetAcademicYears =\r\n          \"At least one academic year must be selected\";\r\n      }\r\n\r\n      if (\r\n        !formData.targetSpecializations ||\r\n        formData.targetSpecializations.length === 0\r\n      ) {\r\n        newErrors.targetSpecializations =\r\n          \"At least one specialization must be selected\";\r\n      }\r\n    }\r\n\r\n    // Company event validation\r\n    if (formData.eventCategory === \"company_event\") {\r\n      if (!formData.companyId) newErrors.companyId = \"Company is required\";\r\n      if (!formData.positionId) newErrors.positionId = \"Position is required\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Update the handleSubmit function to match API payload structure\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setSubmitStatus(\"error\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setSubmitStatus(\"\");\r\n\r\n    try {\r\n      // Format time strings correctly for backend\r\n      const formatTimeForBackend = (time) => {\r\n        if (!time) return null;\r\n        // Add seconds to match SQL TIME format\r\n        return `${time}:00`;\r\n      };\r\n\r\n      const eventPayload = {\r\n        title: formData.title.trim(),\r\n        eventType: formData.eventType,\r\n        date: formData.date, // Send date as YYYY-MM-DD\r\n        startTime: formatTimeForBackend(formData.startTime), // Send time as HH:MM:SS\r\n        endTime: formatTimeForBackend(formData.endTime), // Send time as HH:MM:SS\r\n        venue: formData.venue.trim(),\r\n        mode: formData.mode,\r\n        isPlacementEvent: formData.eventCategory === \"company_event\",\r\n        isMandatory: formData.isMandatory,\r\n        companyId:\r\n          formData.eventCategory === \"company_event\"\r\n            ? formData.companyId\r\n            : null,\r\n        positionId:\r\n          formData.eventCategory === \"company_event\"\r\n            ? formData.positionId\r\n            : null,\r\n        targetSpecializations: formData.targetSpecializations,\r\n        targetAcademicYears: formData.targetAcademicYears.map(Number),\r\n        speakerDetails: Object.values(formData.speakerDetails).some((val) =>\r\n          val.trim()\r\n        )\r\n          ? formData.speakerDetails\r\n          : null,\r\n      };\r\n\r\n      const response = await axios[isEditing ? \"put\" : \"post\"](\r\n        `http://localhost:5000/events${isEditing ? `/${eventData.id}` : \"\"}`,\r\n        eventPayload\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setSubmitStatus(\"success\");\r\n        setTimeout(() => {\r\n          onEventCreated?.(response.data.data);\r\n          onBack?.();\r\n        }, 1500);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving event:\", error);\r\n      setSubmitStatus(\"error\");\r\n      setErrors({\r\n        submit: error.response?.data?.message || \"Failed to save event\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCurrentEventTypes = () => {\r\n    return formData.eventCategory === \"company_event\"\r\n      ? companyEventTypes\r\n      : cgdcEventTypes;\r\n  };\r\n\r\n  // Update component title based on mode\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-2 pb-4 border-b border-gray-200/50\">\r\n        <div>\r\n          <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent flex items-center gap-3\">\r\n            <div className=\"p-2 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl text-white shadow-lg\">\r\n              <FileText className=\"h-6 w-6\" />\r\n            </div>\r\n            {isEditing ? \"Edit Event\" : \"Create New Event\"}\r\n          </h2>\r\n          {selectedBatch && (\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              Creating event for Batch {selectedBatch}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <button\r\n          onClick={onBack}\r\n          className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100/50 rounded-xl transition-all duration-200 group\"\r\n        >\r\n          <X className=\"h-6 w-6 group-hover:rotate-90 transition-transform duration-200\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* Success/Error Messages */}\r\n      {submitStatus === \"success\" && (\r\n        <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n          <div className=\"flex items-center text-green-800\">\r\n            <CheckCircle className=\"h-5 w-5 mr-2\" />\r\n            Event created successfully! Redirecting...\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {submitStatus === \"error\" && errors.submit && (\r\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n          <div className=\"flex items-center text-red-800\">\r\n            <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n            {errors.submit}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Event Category Selection */}\r\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n            <FileText className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n            Event Category\r\n          </h2>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() =>\r\n                setFormData((prev) => ({\r\n                  ...prev,\r\n                  eventCategory: \"company_event\",\r\n                }))\r\n              }\r\n              className={`p-6 border-2 rounded-xl transition-all duration-200 text-left ${\r\n                formData.eventCategory === \"company_event\"\r\n                  ? \"border-blue-500 bg-blue-50 shadow-md\"\r\n                  : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div\r\n                  className={`p-2 rounded-lg ${\r\n                    formData.eventCategory === \"company_event\"\r\n                      ? \"bg-blue-100 text-blue-600\"\r\n                      : \"bg-gray-100 text-gray-600\"\r\n                  }`}\r\n                >\r\n                  <Building2 className=\"h-6 w-6\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-900\">Company Event</h3>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Placement drives, interviews, company visits\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() =>\r\n                setFormData((prev) => ({\r\n                  ...prev,\r\n                  eventCategory: \"cgdc_event\",\r\n                }))\r\n              }\r\n              className={`p-6 border-2 rounded-xl transition-all duration-200 text-left ${\r\n                formData.eventCategory === \"cgdc_event\"\r\n                  ? \"border-purple-500 bg-purple-50 shadow-md\"\r\n                  : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div\r\n                  className={`p-2 rounded-lg ${\r\n                    formData.eventCategory === \"cgdc_event\"\r\n                      ? \"bg-purple-100 text-purple-600\"\r\n                      : \"bg-gray-100 text-gray-600\"\r\n                  }`}\r\n                >\r\n                  <GraduationCap className=\"h-6 w-6\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-900\">CGDC Event</h3>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Workshops, seminars, training sessions\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          </div>\r\n\r\n          {errors.eventCategory && (\r\n            <p className=\"mt-2 text-sm text-red-600 flex items-center\">\r\n              <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n              {errors.eventCategory}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Company & Position (only for company events) */}\r\n        {formData.eventCategory === \"company_event\" && (\r\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n              <Building2 className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Company & Position\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Company *\r\n                </label>\r\n                <select\r\n                  name=\"companyId\"\r\n                  value={formData.companyId}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.companyId ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                >\r\n                  <option value=\"\">Select company</option>\r\n                  {companiesWithPositions.map((company) => (\r\n                    <option key={company.company_id} value={company.company_id}>\r\n                      {company.company_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.companyId && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.companyId}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Position *\r\n                </label>\r\n                <select\r\n                  name=\"positionId\"\r\n                  value={formData.positionId}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.positionId ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                  disabled={!formData.companyId}\r\n                >\r\n                  <option value=\"\">Select position</option>\r\n                  {selectedCompanyPositions.map((position) => (\r\n                    <option\r\n                      key={position.position_id}\r\n                      value={position.position_id}\r\n                    >\r\n                      {position.position_title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.positionId && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.positionId}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {formData.eventCategory === \"company_event\" && selectedBatch && (\r\n                <div className=\"md:col-span-2\">\r\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center text-blue-800\">\r\n                      <Users className=\"h-5 w-5 mr-2\" />\r\n                      <span className=\"font-medium\">\r\n                        Target Audience: Batch {selectedBatch} (Automatically\r\n                        selected for company events)\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Basic Information - Only show if category is selected */}\r\n        {formData.eventCategory && (\r\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n              <FileText className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Basic Information\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"md:col-span-2\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Event Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={formData.title || \"\"}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.title ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                  placeholder=\"Enter event title\"\r\n                />\r\n                {errors.title && (\r\n                  <p className=\"mt-1 text-sm text-red-600 flex items-center\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                    {errors.title}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Event Type *\r\n                </label>\r\n                <select\r\n                  name=\"eventType\"\r\n                  value={formData.eventType}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                >\r\n                  {getCurrentEventTypes().map((type) => (\r\n                    <option key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Mode *\r\n                </label>\r\n                <select\r\n                  name=\"mode\"\r\n                  value={formData.mode}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                >\r\n                  {modes.map((mode) => (\r\n                    <option key={mode.value} value={mode.value}>\r\n                      {mode.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Venue\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"venue\"\r\n                  value={formData.venue}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.venue ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                  placeholder=\"e.g., Auditorium, Room 101, Online Platform\"\r\n                />\r\n                {errors.venue && (\r\n                  <p className=\"mt-1 text-sm text-red-600 flex items-center\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                    {errors.venue}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"md:col-span-2\">\r\n                <label className=\"flex items-center mt-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isMandatory\"\r\n                    checked={formData.isMandatory}\r\n                    onChange={handleInputChange}\r\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                  />\r\n                  <span className=\"ml-2 text-sm text-gray-700\">\r\n                    <Star className=\"h-4 w-4 inline mr-1\" />\r\n                    Mandatory attendance\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Date & Time */}\r\n        {formData.eventCategory && (\r\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n              <Calendar className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Date & Time\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Date\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  value={formData.date}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.date ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                />\r\n                {errors.date && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.date}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Start Time\r\n                </label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"startTime\"\r\n                  value={formData.startTime}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.startTime ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                />\r\n                {errors.startTime && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {errors.startTime}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  End Time\r\n                </label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"endTime\"\r\n                  value={formData.endTime}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\r\n                    errors.endTime ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                  disabled={!formData.startTime}\r\n                  required\r\n                  min={formData.startTime}\r\n                />\r\n                {!formData.startTime && (\r\n                  <p className=\"mt-1 text-xs text-gray-500\">\r\n                    Set start time first\r\n                  </p>\r\n                )}\r\n                {errors.endTime && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.endTime}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Speaker Details */}\r\n        {formData.eventCategory && (\r\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n              <Mic className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Speaker Details (Optional)\r\n            </h2>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Speaker Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"speakerDetails.speaker\"\r\n                  value={formData.speakerDetails.speaker}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                  placeholder=\"Enter speaker name\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Designation\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"speakerDetails.designation\"\r\n                  value={formData.speakerDetails.designation}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                  placeholder=\"e.g., Senior Engineer\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Target Audience (only for cgdc events) */}\r\n        {formData.eventCategory === \"cgdc_event\" && (\r\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-xl shadow-md hover:shadow-lg transition-shadow duration-200 border border-white/30 p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center\">\r\n              <Users className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              Target Audience\r\n            </h2>\r\n\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n                  Academic Years * (Select at least one)\r\n                </label>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {academicYears.map((year) => (\r\n                    <button\r\n                      key={year}\r\n                      type=\"button\"\r\n                      onClick={() =>\r\n                        handleMultiSelectChange(\"targetAcademicYears\", year)\r\n                      }\r\n                      className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\r\n                        formData.targetAcademicYears.includes(year)\r\n                          ? \"bg-blue-600 text-white shadow-md\"\r\n                          : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n                      }`}\r\n                    >\r\n                      {year}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                {errors.targetAcademicYears && (\r\n                  <p className=\"mt-2 text-sm text-red-600 flex items-center\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                    {errors.targetAcademicYears}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">\r\n                  Target Specializations * (Select at least one)\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\r\n                  {specializations.map((spec) => (\r\n                    <button\r\n                      key={spec}\r\n                      type=\"button\"\r\n                      onClick={() =>\r\n                        handleMultiSelectChange(\"targetSpecializations\", spec)\r\n                      }\r\n                      className={`px-4 py-2 rounded-lg text-sm text-left transition-all duration-200 ${\r\n                        formData.targetSpecializations.includes(spec)\r\n                          ? \"bg-blue-600 text-white shadow-md\"\r\n                          : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n                      }`}\r\n                    >\r\n                      {spec}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                {errors.targetSpecializations && (\r\n                  <p className=\"mt-2 text-sm text-red-600 flex items-center\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                    {errors.targetSpecializations}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Submit */}\r\n        {formData.eventCategory && (\r\n          <div className=\"flex justify-end space-x-4 pt-8 mt-8 border-t border-gray-200/50\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onBack}\r\n              className=\"px-8 py-3 text-gray-600 border-2 border-gray-300 rounded-xl hover:bg-gray-50 hover:border-gray-400 transition-all duration-200 font-medium\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className={`px-8 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 flex items-center space-x-3 font-medium shadow-lg hover:shadow-xl transform hover:scale-105 ${\r\n                loading ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n              }`}\r\n            >\r\n              <div className=\"p-1 bg-white/20 rounded-lg\">\r\n                <Save className=\"h-4 w-4\" />\r\n              </div>\r\n              {isEditing ? (\r\n                <span>{loading ? \"Updating...\" : \"Update Event\"}</span>\r\n              ) : (\r\n                <span>{loading ? \"Creating...\" : \"Create Event\"}</span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateEvent;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3938, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/MarkAttendanceModal.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Search,\r\n  Users,\r\n  CheckCircle,\r\n  XCircle,\r\n  Save,\r\n  X,\r\n  Clock,\r\n  AlertTriangle,\r\n  Edit,\r\n  User,\r\n} from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\nconst MarkAttendanceModal = ({ event, onClose, onAttendanceMarked }) => {\r\n  const [loading, setLoading] = useState(true); // Set to true initially\r\n  const [saving, setSaving] = useState(false);\r\n  const [students, setStudents] = useState([]);\r\n  const [attendance, setAttendance] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [reasonForChange, setReasonForChange] = useState(\"\");\r\n  const [showReasonModal, setShowReasonModal] = useState(false);\r\n  const [pendingChange, setPendingChange] = useState(null);\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    present: 0,\r\n    absent: 0,\r\n    late: 0,\r\n    notMarked: 0,\r\n  });\r\n  const [eventStatus, setEventStatus] = useState(event?.status || \"upcoming\"); // Add new state for event status\r\n\r\n  // Remove mockEvent and use the actual event prop\r\n  const eventData = event;\r\n\r\n  // Helper function to get event timing status\r\n  const getEventStatus = () => {\r\n    if (!eventData?.date || !eventData?.time || !eventData?.endTime) {\r\n      return \"no_time\";\r\n    }\r\n\r\n    const now = new Date();\r\n    const eventDate = new Date(eventData.date);\r\n    const startTime = new Date(\r\n      `${eventData.date}T${convertTo24Hour(eventData.time)}`\r\n    );\r\n    const endTime = new Date(\r\n      `${eventData.date}T${convertTo24Hour(eventData.endTime)}`\r\n    );\r\n\r\n    if (now < startTime) return \"upcoming\";\r\n    if (now >= startTime && now <= endTime) return \"ongoing\";\r\n    if (now > endTime) return \"completed\";\r\n\r\n    return \"upcoming\";\r\n  };\r\n\r\n  // Convert 12-hour time to 24-hour format\r\n  const convertTo24Hour = (time12h) => {\r\n    const [time, modifier] = time12h.split(\" \");\r\n    let [hours, minutes] = time.split(\":\");\r\n\r\n    if (hours === \"12\") {\r\n      hours = \"00\";\r\n    }\r\n\r\n    if (modifier === \"PM\") {\r\n      hours = parseInt(hours, 10) + 12;\r\n    }\r\n\r\n    return `${hours}:${minutes}:00`;\r\n  };\r\n\r\n  const canMarkAttendance = eventStatus === \"ongoing\";\r\n  const isEditMode = eventStatus === \"completed\";\r\n\r\n  // Add function to fetch students data\r\n  const fetchStudentData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `http://localhost:5000/events/${event.id}/responses`\r\n      );\r\n\r\n      if (response.data.success) {\r\n        const studentData = response.data.data.students || [];\r\n        setStudents(studentData);\r\n\r\n        // Initialize attendance based on event.attendance\r\n        const initialAttendance = {};\r\n\r\n        // First set all students as absent\r\n        studentData.forEach((student) => {\r\n          initialAttendance[student.id] = {\r\n            status: \"absent\",\r\n            check_in_time: null,\r\n            reason_for_change: null,\r\n          };\r\n        });\r\n\r\n        // Then update with existing attendance if available\r\n        if (event.attendance && event.attendance.length > 0) {\r\n          event.attendance.forEach((record) => {\r\n            if (initialAttendance[record.studentId]) {\r\n              initialAttendance[record.studentId] = {\r\n                status: record.status,\r\n                check_in_time: record.checkInTime,\r\n                reason_for_change: null,\r\n              };\r\n            }\r\n          });\r\n        }\r\n\r\n        setAttendance(initialAttendance);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching student data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update useEffect to fetch data when modal opens\r\n  useEffect(() => {\r\n    if (event?.id) {\r\n      // Set event status\r\n      setEventStatus(event.status || \"upcoming\");\r\n\r\n      // Fetch student data and initialize attendance\r\n      fetchStudentData();\r\n    }\r\n  }, [event?.id]);\r\n\r\n  useEffect(() => {\r\n    const newStats = {\r\n      total: students.length,\r\n      present: 0,\r\n      absent: 0,\r\n      late: 0,\r\n      notMarked: 0,\r\n    };\r\n\r\n    Object.values(attendance).forEach((record) => {\r\n      if (record.status === \"present\") newStats.present++;\r\n      else if (record.status === \"absent\") newStats.absent++;\r\n      else if (record.status === \"late\") newStats.late++;\r\n      else newStats.notMarked++;\r\n    });\r\n\r\n    setStats(newStats);\r\n  }, [attendance, students]);\r\n\r\n  // NEW\r\n  const handleSave = async () => {\r\n    try {\r\n      setSaving(true);\r\n\r\n      if (isEditMode) {\r\n        // Handle edit mode - use PUT endpoint\r\n        const records = [];\r\n\r\n        Object.entries(attendance).forEach(([studentId, record]) => {\r\n          records.push({\r\n            studentId: parseInt(studentId),\r\n            status: record.status,\r\n            reasonForChange: record.reason_for_change,\r\n          });\r\n        });\r\n\r\n        const response = await axios.put(\r\n          `http://localhost:5000/events/${event.id}/attendance`,\r\n          {\r\n            records: records,\r\n          }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          const { updatedCount, errorsCount, errors } = response.data;\r\n\r\n          if (errorsCount > 0) {\r\n            console.log(\"Update errors:\", errors);\r\n            alert(\r\n              `Updated ${updatedCount} records successfully. ${errorsCount} errors occurred.`\r\n            );\r\n          } else {\r\n            alert(\r\n              `Successfully updated attendance for ${updatedCount} students.`\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        // Handle initial marking mode - use existing POST endpoint logic\r\n        const presentStudents = [];\r\n        const lateStudents = [];\r\n        const absentStudents = [];\r\n\r\n        Object.entries(attendance).forEach(([studentId, record]) => {\r\n          const student = students.find((s) => s.id === parseInt(studentId));\r\n          if (!student) return;\r\n\r\n          switch (record.status) {\r\n            case \"present\":\r\n              presentStudents.push(student.registration_number);\r\n              break;\r\n            case \"late\":\r\n              lateStudents.push(student.registration_number);\r\n              break;\r\n            case \"absent\":\r\n              absentStudents.push(student.registration_number);\r\n              break;\r\n          }\r\n        });\r\n\r\n        // Make API calls for each status type\r\n        const apiCalls = [];\r\n\r\n        if (presentStudents.length > 0) {\r\n          apiCalls.push(\r\n            axios.post(`http://localhost:5000/events/${event.id}/attendance`, {\r\n              registration_numbers: presentStudents,\r\n              status: \"present\",\r\n            })\r\n          );\r\n        }\r\n\r\n        if (lateStudents.length > 0) {\r\n          apiCalls.push(\r\n            axios.post(`http://localhost:5000/events/${event.id}/attendance`, {\r\n              registration_numbers: lateStudents,\r\n              status: \"late\",\r\n            })\r\n          );\r\n        }\r\n\r\n        if (absentStudents.length > 0) {\r\n          apiCalls.push(\r\n            axios.post(`http://localhost:5000/events/${event.id}/attendance`, {\r\n              registration_numbers: absentStudents,\r\n              status: \"absent\",\r\n            })\r\n          );\r\n        }\r\n\r\n        // Wait for all API calls to complete\r\n        const results = await Promise.all(apiCalls);\r\n\r\n        // Process results\r\n        let totalMarked = 0;\r\n        let totalErrors = 0;\r\n\r\n        results.forEach((response) => {\r\n          if (response.data.success) {\r\n            totalMarked += response.data.summary.marked;\r\n            totalErrors += response.data.summary.failed;\r\n          }\r\n        });\r\n\r\n        if (totalErrors > 0) {\r\n          alert(\r\n            `Marked ${totalMarked} students successfully. ${totalErrors} errors occurred.`\r\n          );\r\n        } else {\r\n          alert(`Successfully marked attendance for ${totalMarked} students.`);\r\n        }\r\n      }\r\n\r\n      onAttendanceMarked?.();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Error saving attendance:\", error);\r\n      alert(error.response?.data?.message || \"Failed to save attendance\");\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n  // NEW\r\n  const confirmChangeWithReason = () => {\r\n    if (!reasonForChange.trim()) {\r\n      alert(\"Please provide a reason for this change\");\r\n      return;\r\n    }\r\n\r\n    if (pendingChange) {\r\n      setAttendance((prev) => ({\r\n        ...prev,\r\n        [pendingChange.studentId]: {\r\n          ...prev[pendingChange.studentId], // Keep existing data\r\n          status: pendingChange.status,\r\n          check_in_time:\r\n            pendingChange.status === \"present\"\r\n              ? new Date().toISOString()\r\n              : prev[pendingChange.studentId]?.check_in_time || null,\r\n          reason_for_change: reasonForChange.trim(),\r\n        },\r\n      }));\r\n    }\r\n\r\n    setShowReasonModal(false);\r\n    setReasonForChange(\"\");\r\n    setPendingChange(null);\r\n  };\r\n\r\n  // new\r\n  const handleAttendanceUpdate = (studentId, status) => {\r\n    if (isEditMode) {\r\n      // For completed events, require a reason for any change\r\n      setPendingChange({ studentId, status });\r\n      setShowReasonModal(true);\r\n    } else if (canMarkAttendance) {\r\n      // For ongoing events, allow direct updates\r\n      setAttendance((prev) => ({\r\n        ...prev,\r\n        [studentId]: {\r\n          status,\r\n          check_in_time: status === \"present\" ? new Date().toISOString() : null,\r\n          reason_for_change: null,\r\n        },\r\n      }));\r\n    } else {\r\n      alert(\"Attendance can only be marked when event is ongoing or completed\");\r\n    }\r\n  };\r\n\r\n  const filteredStudents = students.filter(\r\n    (student) =>\r\n      student.registration_number\r\n        ?.toLowerCase()\r\n        .includes(searchTerm.toLowerCase()) ||\r\n      student.first_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      student.last_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      student.enrollment_number\r\n        ?.toLowerCase()\r\n        .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getStatusMessage = () => {\r\n    switch (eventStatus) {\r\n      case \"upcoming\":\r\n        return {\r\n          message:\r\n            \"This event hasn't started yet. Click 'Start Event' to begin marking attendance.\",\r\n          color: \"text-amber-700 bg-amber-50 border-amber-200\",\r\n          icon: <Clock className=\"h-4 w-4\" />,\r\n        };\r\n      case \"ongoing\":\r\n        return {\r\n          message: \"Event is ongoing. You can mark attendance now.\",\r\n          color: \"text-green-700 bg-green-50 border-green-200\",\r\n          icon: <CheckCircle className=\"h-4 w-4\" />,\r\n        };\r\n      case \"completed\":\r\n        return {\r\n          message:\r\n            \"Event has ended. Changes require a reason and will be logged.\",\r\n          color: \"text-blue-700 bg-blue-50 border-blue-200\",\r\n          icon: <Edit className=\"h-4 w-4\" />,\r\n        };\r\n      default:\r\n        return {\r\n          message: \"Event status unknown.\",\r\n          color: \"text-gray-700 bg-gray-50 border-gray-200\",\r\n          icon: <AlertTriangle className=\"h-4 w-4\" />,\r\n        };\r\n    }\r\n  };\r\n\r\n  const statusInfo = getStatusMessage();\r\n\r\n  // Add function to update event status\r\n  const updateEventStatus = async (newStatus) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:5000/events/${event.id}/status`,\r\n        { status: newStatus }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setEventStatus(newStatus);\r\n      }\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Failed to update event status\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 overflow-y-auto\">\r\n        <div className=\"min-h-full w-full p-4\">\r\n          <div className=\"bg-white rounded-xl shadow-xl w-full max-w-6xl mx-auto my-8\">\r\n            {/* Header */}\r\n            <div className=\"bg-slate-900 px-6 py-5 text-white rounded-t-xl relative\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"absolute top-4 right-4 p-2 hover:bg-white/10 rounded-lg transition-colors\"\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n\r\n              <div className=\"flex items-start gap-4\">\r\n                <div className=\"p-3 bg-white/10 rounded-lg\">\r\n                  <Users className=\"h-6 w-6\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-2xl font-semibold mb-2\">\r\n                    {isEditMode ? \"Edit Attendance\" : \"Mark Attendance\"}\r\n                  </h2>\r\n                  <div className=\"space-y-1\">\r\n                    <p className=\"text-slate-200 font-medium\">\r\n                      {eventData?.title}\r\n                    </p>\r\n                    <p className=\"text-slate-300 text-sm\">\r\n                      {eventData?.company}\r\n                      {eventData?.positionTitle &&\r\n                        ` • ${eventData?.positionTitle}`}\r\n                    </p>\r\n                    <div className=\"text-slate-400 text-sm flex items-center gap-4\">\r\n                      <span>\r\n                        {eventData?.date &&\r\n                          new Date(eventData.date).toLocaleDateString()}\r\n                      </span>\r\n                      <span>\r\n                        {eventData?.time} - {eventData?.endTime}\r\n                      </span>\r\n                      <span>{eventData?.venue}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Status Controls */}\r\n              <div className=\"flex items-center gap-2 mt-4\">\r\n                <button\r\n                  onClick={() => updateEventStatus(\"ongoing\")}\r\n                  disabled={eventStatus !== \"upcoming\"}\r\n                  className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                    eventStatus === \"ongoing\"\r\n                      ? \"bg-green-100 text-green-700\"\r\n                      : \"bg-gray-100 text-gray-600\"\r\n                  } disabled:opacity-50`}\r\n                >\r\n                  Start Event\r\n                </button>\r\n                <button\r\n                  onClick={() => updateEventStatus(\"completed\")}\r\n                  disabled={eventStatus !== \"ongoing\"}\r\n                  className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                    eventStatus === \"completed\"\r\n                      ? \"bg-blue-100 text-blue-700\"\r\n                      : \"bg-gray-100 text-gray-600\"\r\n                  } disabled:opacity-50`}\r\n                >\r\n                  End Event\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Status Message */}\r\n            <div\r\n              className={`mx-6 mt-6 p-4 rounded-lg border ${statusInfo.color} flex items-start gap-3`}\r\n            >\r\n              {statusInfo.icon}\r\n              <p className=\"text-sm font-medium flex-1\">{statusInfo.message}</p>\r\n            </div>\r\n\r\n            {/* Default Warning */}\r\n            <div className=\"mx-6 mt-4 p-4 rounded-lg bg-orange-50 border border-orange-200 flex items-start gap-3\">\r\n              <AlertTriangle className=\"h-4 w-4 text-orange-600 mt-0.5\" />\r\n              <div className=\"text-sm text-orange-700\">\r\n                <p className=\"font-medium mb-1\">Important Note</p>\r\n                <p>\r\n                  Students are marked as absent by default. Only mark present\r\n                  for those who attended.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Stats */}\r\n            <div className=\"grid grid-cols-5 gap-4 p-6 bg-slate-50 border-y border-slate-200 mt-6\">\r\n              <StatCard title=\"Total\" value={stats.total} />\r\n              <StatCard title=\"Present\" value={stats.present} color=\"green\" />\r\n              <StatCard title=\"Late\" value={stats.late} color=\"amber\" />\r\n              <StatCard title=\"Absent\" value={stats.absent} color=\"red\" />\r\n              <StatCard\r\n                title=\"Not Marked\"\r\n                value={stats.notMarked}\r\n                color=\"gray\"\r\n              />\r\n            </div>\r\n\r\n            {/* Search */}\r\n            <div className=\"p-6 border-b border-slate-200\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-5 w-5\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by registration number, enrollment number, or name...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Student List */}\r\n            {/* Student List */}\r\n            <div className=\"p-6\">\r\n              {!canMarkAttendance && !isEditMode ? (\r\n                <div className=\"flex items-center justify-center py-16\">\r\n                  <div className=\"text-center\">\r\n                    <Clock className=\"h-16 w-16 text-slate-300 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-slate-700 mb-2\">\r\n                      Attendance marking is not available yet\r\n                    </h3>\r\n                    <p className=\"text-slate-500\">\r\n                      Please wait for the event to start\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ) : loading ? (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-3\">\r\n                  {filteredStudents.map((student) => (\r\n                    <StudentCard\r\n                      key={student.id}\r\n                      student={student}\r\n                      attendance={attendance[student.id]}\r\n                      onUpdate={handleAttendanceUpdate}\r\n                      isEditMode={isEditMode}\r\n                      canMarkAttendance={canMarkAttendance || isEditMode}\r\n                    />\r\n                  ))}\r\n\r\n                  {/* Save Button - Show for both ongoing and completed events */}\r\n                  {(canMarkAttendance || isEditMode) && (\r\n                    <div className=\"mt-8 pt-6 border-t border-slate-200\">\r\n                      <button\r\n                        onClick={handleSave}\r\n                        disabled={saving}\r\n                        className=\"w-full flex items-center justify-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium\"\r\n                      >\r\n                        <Save className=\"h-5 w-5 mr-2\" />\r\n                        {saving\r\n                          ? \"Saving...\"\r\n                          : isEditMode\r\n                            ? \"Update Attendance\"\r\n                            : \"Save Attendance\"}\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Reason Modal */}\r\n      {showReasonModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-60 overflow-y-auto\">\r\n          <div className=\"min-h-full w-full p-4 flex items-center justify-center\">\r\n            <div className=\"bg-white rounded-xl shadow-xl w-full max-w-md mx-auto\">\r\n              <div className=\"p-6\">\r\n                <h3 className=\"text-xl font-semibold text-slate-900 mb-4\">\r\n                  Reason for Change Required\r\n                </h3>\r\n                <p className=\"text-slate-600 mb-4\">\r\n                  Since the event has ended, please provide a reason for this\r\n                  attendance change:\r\n                </p>\r\n                <textarea\r\n                  value={reasonForChange}\r\n                  onChange={(e) => setReasonForChange(e.target.value)}\r\n                  placeholder=\"e.g., Late submission due to technical issues, Student provided valid excuse, etc.\"\r\n                  className=\"w-full p-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none\"\r\n                  rows={4}\r\n                />\r\n                <div className=\"flex gap-3 mt-6\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowReasonModal(false);\r\n                      setReasonForChange(\"\");\r\n                      setPendingChange(null);\r\n                    }}\r\n                    className=\"flex-1 px-4 py-2 border border-slate-300 text-slate-700 rounded-lg hover:bg-slate-50 transition-colors font-medium\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    onClick={confirmChangeWithReason}\r\n                    disabled={!reasonForChange.trim()}\r\n                    className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium\"\r\n                  >\r\n                    Confirm Change\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Helper Components\r\nconst StatCard = ({ title, value, color = \"blue\" }) => {\r\n  const colorClasses = {\r\n    green: \"text-green-600 bg-green-50 border-green-200\",\r\n    amber: \"text-amber-600 bg-amber-50 border-amber-200\",\r\n    red: \"text-red-600 bg-red-50 border-red-200\",\r\n    gray: \"text-slate-600 bg-slate-50 border-slate-200\",\r\n    blue: \"text-blue-600 bg-blue-50 border-blue-200\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`p-4 rounded-lg border ${colorClasses[color] || colorClasses.blue}`}\r\n    >\r\n      <div className=\"text-2xl font-bold mb-1\">{value}</div>\r\n      <div className=\"text-sm font-medium opacity-80\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StudentCard = ({\r\n  student,\r\n  attendance,\r\n  onUpdate,\r\n  isEditMode,\r\n  canMarkAttendance,\r\n}) => (\r\n  <div className=\"bg-white border border-slate-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n    <div className=\"flex items-center justify-between\">\r\n      <div className=\"flex items-center gap-4\">\r\n        <div className=\"h-12 w-12 rounded-full bg-slate-100 flex items-center justify-center\">\r\n          <User className=\"h-6 w-6 text-slate-400\" />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"font-semibold text-slate-900 text-lg\">\r\n            {student.first_name} {student.last_name}\r\n          </h3>\r\n          <div className=\"text-sm text-slate-500 mt-1 flex items-center gap-4\">\r\n            <span>Reg: {student.registration_number}</span>\r\n            <span>Enr: {student.enrollment_number}</span>\r\n            <span>\r\n              {student.department} {student.batch_year}\r\n            </span>\r\n          </div>\r\n          {attendance?.check_in_time && (\r\n            <div className=\"text-sm text-slate-600 mt-1\">\r\n              <Clock className=\"h-3 w-3 inline mr-1\" />\r\n              Check-in: {attendance.check_in_time}\r\n            </div>\r\n          )}\r\n          {attendance?.reason_for_change && (\r\n            <div className=\"text-sm text-blue-600 mt-2 p-2 bg-blue-50 rounded\">\r\n              <span className=\"font-medium\">Reason:</span>{\" \"}\r\n              {attendance.reason_for_change}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-2\">\r\n        <AttendanceButton\r\n          status=\"present\"\r\n          currentStatus={attendance?.status}\r\n          onClick={() => onUpdate(student.id, \"present\")}\r\n          disabled={!canMarkAttendance}\r\n          icon={<CheckCircle className=\"h-4 w-4 mr-2\" />}\r\n          label=\"Present\"\r\n        />\r\n        <AttendanceButton\r\n          status=\"late\"\r\n          currentStatus={attendance?.status}\r\n          onClick={() => onUpdate(student.id, \"late\")}\r\n          disabled={!canMarkAttendance}\r\n          icon={<Clock className=\"h-4 w-4 mr-2\" />}\r\n          label=\"Late\"\r\n        />\r\n        <AttendanceButton\r\n          status=\"absent\"\r\n          currentStatus={attendance?.status}\r\n          onClick={() => onUpdate(student.id, \"absent\")}\r\n          disabled={!canMarkAttendance}\r\n          icon={<XCircle className=\"h-4 w-4 mr-2\" />}\r\n          label=\"Absent\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst AttendanceButton = ({\r\n  status,\r\n  currentStatus,\r\n  onClick,\r\n  disabled,\r\n  icon,\r\n  label,\r\n}) => {\r\n  const isSelected = currentStatus === status;\r\n\r\n  const baseClasses =\r\n    \"flex items-center px-4 py-2 rounded-lg text-sm font-medium transition-all\";\r\n  const statusClasses = {\r\n    present: isSelected\r\n      ? \"bg-green-100 text-green-700 border-2 border-green-300 shadow-sm\"\r\n      : \"bg-slate-100 text-slate-600 hover:bg-green-50 hover:text-green-600 border border-slate-200\",\r\n    late: isSelected\r\n      ? \"bg-amber-100 text-amber-700 border-2 border-amber-300 shadow-sm\"\r\n      : \"bg-slate-100 text-slate-600 hover:bg-amber-50 hover:text-amber-600 border border-slate-200\",\r\n    absent: isSelected\r\n      ? \"bg-red-100 text-red-700 border-2 border-red-300 shadow-sm\"\r\n      : \"bg-slate-100 text-slate-600 hover:bg-red-50 hover:text-red-600 border border-slate-200\",\r\n  };\r\n\r\n  const disabledClasses = disabled\r\n    ? \"opacity-50 cursor-not-allowed\"\r\n    : \"cursor-pointer\";\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={`${baseClasses} ${statusClasses[status]} ${disabledClasses}`}\r\n    >\r\n      {icon}\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MarkAttendanceModal;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5097, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/event-and-attendance/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Search,\r\n  Download,\r\n  Calendar,\r\n  Plus,\r\n  RefreshCw,\r\n  CheckCircle,\r\n  CalendarClock,\r\n  Clock,\r\n  Users,\r\n  ArrowLeft,\r\n} from \"lucide-react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport EventCard from \"./EventCard\";\r\nimport StudentDetailModel from \"./StudentDetailModel\";\r\nimport PaginationBar from \"./PaginationBar\";\r\nimport { useBatchContext, BatchProvider } from \"../../context/BatchContext\";\r\nimport CreateEvent from \"./CreateEvent\";\r\nimport MarkAttendanceModal from \"./MarkAttendanceModal\";\r\n\r\nconst EventAttendancePage = () => {\r\n  const { selectedBatch } = useBatchContext();\r\n  const [selectedEventType, setSelectedEventType] = useState(\"all\");\r\n  const [selectedStatus, setSelectedStatus] = useState(\"all\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [allEvents, setAllEvents] = useState([]);\r\n  const [events, setEvents] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalEvents: 0,\r\n    completedEvents: 0,\r\n    ongoingEvents: 0,\r\n    upcomingEvents: 0,\r\n    companyRounds: 0,\r\n    cdgcEvents: 0,\r\n    averageAttendanceRate: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    hasMore: false,\r\n  });\r\n  const [showCreateEvent, setShowCreateEvent] = useState(false);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n  const [showAttendanceModal, setShowAttendanceModal] = useState(false);\r\n\r\n  // Fetch all events from backend with attendance data for specific batch\r\n  const fetchEvents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Use the new endpoint with batch year\r\n      const response = await axios.get(\r\n        `http://localhost:5000/events/batch/${selectedBatch}`\r\n      );\r\n\r\n      if (response.data.success) {\r\n        // Process events to calculate attendance statistics\r\n        const eventsWithStats = response.data.data.map((event) => {\r\n          const totalStudents = event.attendance.length;\r\n          const attendedStudents = event.attendance.filter(\r\n            (student) =>\r\n              student.status === \"present\" || student.status === \"late\"\r\n          ).length;\r\n          const absentStudents = event.attendance.filter(\r\n            (student) => student.status === \"absent\"\r\n          ).length;\r\n          const attendanceRate =\r\n            totalStudents > 0\r\n              ? Math.round((attendedStudents / totalStudents) * 100)\r\n              : 0;\r\n\r\n          return {\r\n            ...event,\r\n            totalStudents,\r\n            attendedStudents,\r\n            absentStudents,\r\n            attendanceRate,\r\n          };\r\n        });\r\n\r\n        setAllEvents(eventsWithStats);\r\n        filterAndPaginateEvents(eventsWithStats);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching events:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter and paginate events locally\r\n  const filterAndPaginateEvents = (eventsToFilter = allEvents, page = 1) => {\r\n    let filteredEvents = [...eventsToFilter];\r\n\r\n    // Apply type filter\r\n    if (selectedEventType !== \"all\") {\r\n      filteredEvents = filteredEvents.filter(\r\n        (event) => event.type === selectedEventType\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (selectedStatus !== \"all\") {\r\n      filteredEvents = filteredEvents.filter(\r\n        (event) => event.status === selectedStatus\r\n      );\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      filteredEvents = filteredEvents.filter(\r\n        (event) =>\r\n          event.title.toLowerCase().includes(searchLower) ||\r\n          event.venue?.toLowerCase().includes(searchLower) ||\r\n          event.company?.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n\r\n    // Calculate pagination\r\n    const limit = 10;\r\n    const totalItems = filteredEvents.length;\r\n    const totalPages = Math.ceil(totalItems / limit);\r\n    const currentPage = Math.min(page, totalPages);\r\n    const startIndex = (currentPage - 1) * limit;\r\n    const endIndex = startIndex + limit;\r\n\r\n    // Update state\r\n    setEvents(filteredEvents.slice(startIndex, endIndex));\r\n    setPagination({\r\n      currentPage,\r\n      totalPages,\r\n      hasMore: currentPage < totalPages,\r\n    });\r\n  };\r\n\r\n  // Fetch dashboard statistics - now calculate from events data\r\n  const calculateStats = (eventsData) => {\r\n    const totalEvents = eventsData.length;\r\n    const completedEvents = eventsData.filter(\r\n      (e) => e.status === \"completed\"\r\n    ).length;\r\n    const ongoingEvents = eventsData.filter(\r\n      (e) => e.status === \"ongoing\"\r\n    ).length;\r\n    const upcomingEvents = eventsData.filter(\r\n      (e) => e.status === \"upcoming\"\r\n    ).length;\r\n    const companyRounds = eventsData.filter(\r\n      (e) => e.type === \"company_round\"\r\n    ).length;\r\n    const cdgcEvents = eventsData.filter((e) => e.type === \"cdgc_event\").length;\r\n\r\n    const totalAttendance = eventsData.reduce(\r\n      (sum, event) => sum + (event.attendedStudents || 0),\r\n      0\r\n    );\r\n    const totalPossibleAttendance = eventsData.reduce(\r\n      (sum, event) => sum + (event.totalStudents || 0),\r\n      0\r\n    );\r\n    const averageAttendanceRate =\r\n      totalPossibleAttendance > 0\r\n        ? Math.round((totalAttendance / totalPossibleAttendance) * 100)\r\n        : 0;\r\n\r\n    setStats({\r\n      totalEvents,\r\n      completedEvents,\r\n      ongoingEvents,\r\n      upcomingEvents,\r\n      companyRounds,\r\n      cdgcEvents,\r\n      averageAttendanceRate,\r\n    });\r\n  };\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    if (selectedBatch) {\r\n      fetchEvents();\r\n    }\r\n  }, [selectedBatch, showAttendanceModal]);\r\n\r\n  // Calculate stats when events change\r\n  useEffect(() => {\r\n    if (allEvents.length > 0) {\r\n      calculateStats(allEvents);\r\n    }\r\n  }, [allEvents]);\r\n\r\n  // Effect for filtering\r\n  useEffect(() => {\r\n    filterAndPaginateEvents(allEvents, 1);\r\n  }, [selectedEventType, selectedStatus, searchTerm, allEvents]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    filterAndPaginateEvents(allEvents, newPage);\r\n  };\r\n\r\n  // Add handler for event creation/edit\r\n  const handleEventSaved = () => {\r\n    setShowCreateEvent(false);\r\n    setEditingEvent(null);\r\n    fetchEvents();\r\n  };\r\n\r\n  // Export report handler\r\n  const handleExportReport = () => {\r\n    try {\r\n      // Prepare data for export\r\n      const exportData = allEvents.map((event) => ({\r\n        \"Event Title\": event.title,\r\n        Type: event.type === \"company_round\" ? \"Company Round\" : \"CDGC Event\",\r\n        Company: event.company || \"-\",\r\n        Position: event.positionTitle || \"-\",\r\n        Date: new Date(event.date).toLocaleDateString(),\r\n        Time: `${event.time} - ${event.endTime}`,\r\n        Venue: event.venue || \"-\",\r\n        Mode: event.mode,\r\n        Status: event.status.charAt(0).toUpperCase() + event.status.slice(1),\r\n        \"Total Students\": event.totalStudents || 0,\r\n        Present:\r\n          event.attendance?.filter((s) => s.status === \"present\").length || 0,\r\n        Late: event.attendance?.filter((s) => s.status === \"late\").length || 0,\r\n        Absent:\r\n          event.attendance?.filter((s) => s.status === \"absent\").length || 0,\r\n        \"Attendance Rate\": `${event.attendanceRate || 0}%`,\r\n        \"Target Years\": event.targetAcademicYears?.join(\", \") || \"-\",\r\n        \"Target Departments\":\r\n          event.targetSpecializations?.replace(/[{}]/g, \"\") || \"-\",\r\n      }));\r\n\r\n      // Create worksheet\r\n      const ws = XLSX.utils.json_to_sheet(exportData);\r\n\r\n      // Set column widths\r\n      ws[\"!cols\"] = [\r\n        { wch: 30 }, // Event Title\r\n        { wch: 15 }, // Type\r\n        { wch: 20 }, // Company\r\n        { wch: 20 }, // Position\r\n        { wch: 12 }, // Date\r\n        { wch: 20 }, // Time\r\n        { wch: 15 }, // Venue\r\n        { wch: 10 }, // Mode\r\n        { wch: 12 }, // Status\r\n        { wch: 15 }, // Total Students\r\n        { wch: 10 }, // Present\r\n        { wch: 10 }, // Late\r\n        { wch: 10 }, // Absent\r\n        { wch: 15 }, // Attendance Rate\r\n        { wch: 15 }, // Target Years\r\n        { wch: 20 }, // Target Departments\r\n      ];\r\n\r\n      // Create workbook\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, `Events - Batch ${selectedBatch}`);\r\n\r\n      // Generate filename\r\n      const fileName = `events_report_batch_${selectedBatch}_${\r\n        new Date().toISOString().split(\"T\")[0]\r\n      }.xlsx`;\r\n\r\n      // Save file\r\n      XLSX.writeFile(wb, fileName);\r\n    } catch (error) {\r\n      console.error(\"Error exporting report:\", error);\r\n      alert(\"Failed to export events report\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n      {/* Main content */}\r\n      <div className={showCreateEvent ? \"filter blur-sm\" : \"\"}>\r\n        <div className=\"max-w-7xl mx-auto p-6\">\r\n          {/* Header - Updated to match CompanyListing style */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n              <div className=\"flex items-start gap-4\">\r\n                <button\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  <ArrowLeft className=\"h-6 w-6 text-gray-600\" />\r\n                </button>\r\n                <div>\r\n                  <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                    Event & Attendance Management\r\n                  </h1>\r\n                  <p className=\"text-gray-600\">\r\n                    Track attendance for company rounds and CDGC events - Batch{\" \"}\r\n                    {selectedBatch}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-3\">\r\n                <button\r\n                  onClick={() => fetchEvents()}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2.5 rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md\"\r\n                >\r\n                  <RefreshCw className=\"h-4 w-4\" />\r\n                  Refresh\r\n                </button>\r\n                <button\r\n                  onClick={() => setShowCreateEvent(true)}\r\n                  className=\"bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-6 py-2.5 rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md\"\r\n                >\r\n                  <Plus className=\"h-4 w-4\" />\r\n                  Create Event\r\n                </button>\r\n                <button\r\n                  onClick={handleExportReport}\r\n                  className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2.5 rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md\"\r\n                >\r\n                  <Download className=\"h-4 w-4\" />\r\n                  Export Report\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Enhanced Stats Cards - Updated to match CompanyListing style */}\r\n            <div className=\"grid grid-cols-2 lg:grid-cols-7 gap-4 mt-6\">\r\n              <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-xl border border-blue-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Calendar className=\"text-blue-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-blue-600 text-sm font-medium\">\r\n                      Total Events\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-blue-900\">\r\n                      {stats.totalEvents}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-xl border border-green-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <CheckCircle className=\"text-green-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-green-600 text-sm font-medium\">\r\n                      Completed\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-green-900\">\r\n                      {stats.completedEvents}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 p-4 rounded-xl border border-yellow-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <CalendarClock className=\"text-yellow-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-yellow-600 text-sm font-medium\">\r\n                      Ongoing\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-yellow-900\">\r\n                      {stats.ongoingEvents}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-purple-50 to-violet-50 p-4 rounded-xl border border-purple-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Clock className=\"text-purple-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-purple-600 text-sm font-medium\">\r\n                      Upcoming\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-purple-900\">\r\n                      {stats.upcomingEvents}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-rose-50 to-pink-50 p-4 rounded-xl border border-rose-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Users className=\"text-rose-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-rose-600 text-sm font-medium\">\r\n                      Company Rounds\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-rose-900\">\r\n                      {stats.companyRounds}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-cyan-50 to-teal-50 p-4 rounded-xl border border-cyan-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Calendar className=\"text-cyan-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-cyan-600 text-sm font-medium\">\r\n                      CDGC Events\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-cyan-900\">\r\n                      {stats.cdgcEvents}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-gradient-to-r from-gray-50 to-slate-50 p-4 rounded-xl border border-gray-100\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Users className=\"text-gray-600\" size={24} />\r\n                  <div>\r\n                    <p className=\"text-gray-600 text-sm font-medium\">\r\n                      Avg Attendance\r\n                    </p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      {stats.averageAttendanceRate}%\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters and Search - Updated to match CompanyListing style */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-4\">\r\n              <div>\r\n                <h2 className=\"text-xl font-bold text-gray-900\">\r\n                  Batch {selectedBatch}\r\n                </h2>\r\n                <p className=\"text-sm text-gray-600 mt-1\">\r\n                  {allEvents.length} events registered\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col sm:flex-row gap-4\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search events...\"\r\n                    className=\"w-full pl-9 pr-4 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"sm:w-48\">\r\n                <select\r\n                  className=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  value={selectedEventType}\r\n                  onChange={(e) => setSelectedEventType(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Event Types</option>\r\n                  <option value=\"company_round\">Company Rounds</option>\r\n                  <option value=\"cdgc_event\">CDGC Events</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"sm:w-48\">\r\n                <select\r\n                  className=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  value={selectedStatus}\r\n                  onChange={(e) => setSelectedStatus(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Status</option>\r\n                  <option value=\"upcoming\">Upcoming</option>\r\n                  <option value=\"ongoing\">Ongoing</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"cancelled\">Cancelled</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Loading State */}\r\n          {loading && (\r\n            <div className=\"flex justify-center items-center py-8\">\r\n              <RefreshCw className=\"h-8 w-8 animate-spin text-blue-600\" />\r\n              <span className=\"ml-2 text-gray-600\">\r\n                Loading events for batch {selectedBatch}...\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Events List */}\r\n          {!loading && (\r\n            <>\r\n              <div className=\"space-y-6\">\r\n                {events.length === 0 ? (\r\n                  <div className=\"text-center py-12\">\r\n                    <Calendar className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\r\n                      No events found for batch {selectedBatch}\r\n                    </h3>\r\n                    <p className=\"mt-1 text-sm text-gray-500\">\r\n                      Try adjusting your filters or search terms, or check if\r\n                      events are targeted for this batch year.\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  events.map((event) => (\r\n                    <EventCard\r\n                      key={event.id}\r\n                      event={event}\r\n                      setSelectedEvent={setSelectedEvent}\r\n                      fetchEvents={fetchEvents}\r\n                      selectedBatch={selectedBatch}\r\n                      setEditingEvent={setEditingEvent}\r\n                      onAttendanceClick={() => {\r\n                        setSelectedEvent(event);\r\n                        setShowAttendanceModal(true);\r\n                      }}\r\n                    />\r\n                  ))\r\n                )}\r\n              </div>\r\n\r\n              {/* Pagination */}\r\n              {pagination.totalPages > 1 && (\r\n                <PaginationBar\r\n                  pagination={pagination}\r\n                  handlePageChange={handlePageChange}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {/* Student Details Modal */}\r\n          {selectedEvent && (\r\n            <StudentDetailModel\r\n              selectedEvent={selectedEvent}\r\n              setSelectedEvent={setSelectedEvent}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create/Edit Event Modal */}\r\n      {(showCreateEvent || editingEvent) && (\r\n        <div className=\"fixed inset-0 bg-gradient-to-br from-blue-900/20 via-indigo-900/30 to-purple-900/20 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white/95 backdrop-blur-md rounded-2xl shadow-2xl border border-white/20 p-8 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n            <CreateEvent\r\n              onBack={() => {\r\n                setShowCreateEvent(false);\r\n                setEditingEvent(null);\r\n              }}\r\n              onEventCreated={handleEventSaved}\r\n              selectedBatch={selectedBatch}\r\n              isEditing={!!editingEvent}\r\n              eventData={editingEvent}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Mark Attendance Modal */}\r\n      {showAttendanceModal && (\r\n        <MarkAttendanceModal\r\n          event={selectedEvent}\r\n          onClose={() => setShowAttendanceModal(false)}\r\n          onAttendanceMarked={() => {\r\n            // Refresh your data if needed\r\n            fetchEvents();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EventAttendanceLayout = () => (\r\n  <BatchProvider>\r\n    <EventAttendancePage />\r\n  </BatchProvider>\r\n);\r\n\r\nexport default EventAttendanceLayout;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}