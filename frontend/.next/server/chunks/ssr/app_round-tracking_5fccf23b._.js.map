{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/StatsCards.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Users, CheckCircle, Building2 } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport { useBatchContext } from \"../../context/BatchContext\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst StatsCards = () => {\r\n  const [stats, setStats] = useState({\r\n    totalApplications: 0,\r\n    activeCompanies: 0,\r\n    totalPlacements: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const { selectedBatch } = useBatchContext();\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${backendUrl}/round-tracking/stats/${selectedBatch}`\r\n      );\r\n      setStats({\r\n        totalApplications: data.totalApplications || 0,\r\n        activeCompanies: data.activeCompanies || 0,\r\n        totalPlacements: data.totalPlacements || 0,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching stats:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const statCards = [\r\n    {\r\n      title: \"Total Applications\",\r\n      value: stats.totalApplications,\r\n      icon: Users,\r\n      color: \"blue\",\r\n      bgColor: \"bg-blue-50\",\r\n      iconColor: \"text-blue-600\",\r\n      textColor: \"text-blue-900\",\r\n    },\r\n    {\r\n      title: \"Active Companies\",\r\n      value: stats.activeCompanies,\r\n      icon: Building2,\r\n      color: \"purple\",\r\n      bgColor: \"bg-purple-50\",\r\n      iconColor: \"text-purple-600\",\r\n      textColor: \"text-purple-900\",\r\n    },\r\n    {\r\n      title: \"Total Placements\",\r\n      value: stats.totalPlacements,\r\n      icon: CheckCircle,\r\n      color: \"emerald\",\r\n      bgColor: \"bg-emerald-50\",\r\n      iconColor: \"text-emerald-600\",\r\n      textColor: \"text-emerald-900\",\r\n    },\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6\">\r\n        {[1, 2, 3, 4].map((i) => (\r\n          <div\r\n            key={i}\r\n            className=\"bg-gray-50 rounded-lg p-4 h-24 animate-pulse\"\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6\">\r\n      {statCards.map((stat, index) => {\r\n        const Icon = stat.icon;\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={`${stat.bgColor} rounded-lg p-4 hover:shadow-md transition-shadow`}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">\r\n                  {stat.title}\r\n                </p>\r\n                <p className={`text-2xl font-bold ${stat.textColor} mt-1`}>\r\n                  {stat.value.toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className={`${stat.bgColor} rounded-full p-3`}>\r\n                <Icon className={`h-6 w-6 ${stat.iconColor}`} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsCards;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA,MAAM;AAEN,MAAM,aAAa;IACjB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjC,mBAAmB;QACnB,iBAAiB;QACjB,iBAAiB;IACnB;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,GAAG,WAAW,sBAAsB,EAAE,eAAe;YAEvD,SAAS;gBACP,mBAAmB,KAAK,iBAAiB,IAAI;gBAC7C,iBAAiB,KAAK,eAAe,IAAI;gBACzC,iBAAiB,KAAK,eAAe,IAAI;YAC3C;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,YAAY;QAChB;YACE,OAAO;YACP,OAAO,MAAM,iBAAiB;YAC9B,MAAM,oMAAA,CAAA,QAAK;YACX,OAAO;YACP,SAAS;YACT,WAAW;YACX,WAAW;QACb;QACA;YACE,OAAO;YACP,OAAO,MAAM,eAAe;YAC5B,MAAM,gNAAA,CAAA,YAAS;YACf,OAAO;YACP,SAAS;YACT,WAAW;YACX,WAAW;QACb;QACA;YACE,OAAO;YACP,OAAO,MAAM,eAAe;YAC5B,MAAM,2NAAA,CAAA,cAAW;YACjB,OAAO;YACP,SAAS;YACT,WAAW;YACX,WAAW;QACb;KACD;IAED,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,kBACjB,8OAAC;oBAEC,WAAU;mBADL;;;;;;;;;;IAMf;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,UAAU,GAAG,CAAC,CAAC,MAAM;YACpB,MAAM,OAAO,KAAK,IAAI;YACtB,qBACE,8OAAC;gBAEC,WAAW,GAAG,KAAK,OAAO,CAAC,iDAAiD,CAAC;0BAE7E,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAE,WAAU;8CACV,KAAK,KAAK;;;;;;8CAEb,8OAAC;oCAAE,WAAW,CAAC,mBAAmB,EAAE,KAAK,SAAS,CAAC,KAAK,CAAC;8CACtD,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;sCAG9B,8OAAC;4BAAI,WAAW,GAAG,KAAK,OAAO,CAAC,iBAAiB,CAAC;sCAChD,cAAA,8OAAC;gCAAK,WAAW,CAAC,QAAQ,EAAE,KAAK,SAAS,EAAE;;;;;;;;;;;;;;;;;eAb3C;;;;;QAkBX;;;;;;AAGN;uCAEe","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/ResultUploadModal.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  FileText,\r\n  X,\r\n  Upload,\r\n  Check,\r\n  AlertCircle,\r\n  CheckCircle2,\r\n  XCircle,\r\n  Info,\r\n} from \"lucide-react\";\r\nimport axios from \"axios\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst ResultUploadModal = ({\r\n  eventId,\r\n  positionId,\r\n  onClose,\r\n  companyName,\r\n  positionTitle,\r\n  onResultsUpdated,\r\n  editMode = false,\r\n}) => {\r\n  const [uploadMethod, setUploadMethod] = useState(\"manual\");\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedStudents, setSelectedStudents] = useState(new Set());\r\n  const [initiallySelected, setInitiallySelected] = useState(new Set());\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [csvProcessing, setCsvProcessing] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchEventStudents();\r\n  }, [eventId, positionId]);\r\n\r\n  const fetchEventStudents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const queryParams = new URLSearchParams({\r\n        status: \"attended\",\r\n      });\r\n\r\n      if (positionId) {\r\n        queryParams.append(\"positionId\", positionId);\r\n      }\r\n\r\n      const response = await axios.get(\r\n        `${backendUrl}/round-tracking/events/${eventId}/students?${queryParams}`\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setStudents(response.data.students || []);\r\n\r\n        // Pre-select already qualified students\r\n        const alreadyQualified = response.data.students\r\n          .filter((s) => s.result_status === \"selected\")\r\n          .map((s) => s.id);\r\n        setSelectedStudents(new Set(alreadyQualified));\r\n        setInitiallySelected(new Set(alreadyQualified));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      setError(error.response?.data?.message || \"Failed to load students\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStudentToggle = (studentId) => {\r\n    const newSelected = new Set(selectedStudents);\r\n    if (newSelected.has(studentId)) {\r\n      newSelected.delete(studentId);\r\n    } else {\r\n      newSelected.add(studentId);\r\n    }\r\n    setSelectedStudents(newSelected);\r\n  };\r\n\r\n  const getStudentSelectionStatus = (studentId) => {\r\n    const isSelected = selectedStudents.has(studentId);\r\n    const wasSelected = initiallySelected.has(studentId);\r\n\r\n    if (editMode) {\r\n      if (isSelected && wasSelected) return \"unchanged\";\r\n      if (isSelected && !wasSelected) return \"newly-selected\";\r\n      if (!isSelected && wasSelected) return \"deselected\";\r\n    }\r\n    return isSelected ? \"selected\" : \"not-selected\";\r\n  };\r\n\r\n  const getChangeSummary = () => {\r\n    if (!editMode) return null;\r\n\r\n    const newlySelected = [...selectedStudents].filter(\r\n      (id) => !initiallySelected.has(id)\r\n    );\r\n    const deselected = [...initiallySelected].filter(\r\n      (id) => !selectedStudents.has(id)\r\n    );\r\n\r\n    return {\r\n      newlySelected: newlySelected.length,\r\n      deselected: deselected.length,\r\n      unchanged: selectedStudents.size - newlySelected.length,\r\n    };\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (!selectedFile) return;\r\n\r\n    setFile(selectedFile);\r\n    setCsvProcessing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Use FormData for file upload\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      const response = await axios.post(\r\n        `${backendUrl}/round-tracking/events/${eventId}/upload-results`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setUploadSuccess(true);\r\n        setUploadResult(response.data.data);\r\n      } else {\r\n        setError(response.data.message || \"Failed to process file.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"CSV processing error:\", error);\r\n      setError(\r\n        error.response?.data?.message ||\r\n          \"Failed to process CSV. Please ensure it contains valid registration numbers.\"\r\n      );\r\n    } finally {\r\n      setCsvProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const qualifiedRegistrationNumbers = students\r\n        .filter((student) => selectedStudents.has(student.id))\r\n        .map((student) => student.registration_number);\r\n\r\n      // For edit mode, also send deselected students\r\n      let payload;\r\n      if (editMode) {\r\n        const deselectedRegistrationNumbers = students\r\n          .filter(\r\n            (student) =>\r\n              initiallySelected.has(student.id) &&\r\n              !selectedStudents.has(student.id)\r\n          )\r\n          .map((student) => student.registration_number);\r\n\r\n        payload = {\r\n          qualifiedRegistrationNumbers,\r\n          deselectedRegistrationNumbers,\r\n          method: \"manual\",\r\n        };\r\n      } else {\r\n        if (qualifiedRegistrationNumbers.length === 0) {\r\n          setError(\"Please select at least one student\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        payload = {\r\n          qualifiedRegistrationNumbers,\r\n          method: \"manual\",\r\n        };\r\n      }\r\n\r\n      const response = await axios.post(\r\n        `${backendUrl}/round-tracking/events/${eventId}/results`,\r\n        payload\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setUploadSuccess(true);\r\n        setUploadResult(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating results:\", error);\r\n      setError(error.response?.data?.message || \"Failed to update results\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getRowClassName = (studentId) => {\r\n    const status = getStudentSelectionStatus(studentId);\r\n    const baseClass = \"transition-all cursor-pointer\";\r\n\r\n    switch (status) {\r\n      case \"newly-selected\":\r\n        return `${baseClass} bg-green-50 hover:bg-green-100 border-l-4 border-green-500`;\r\n      case \"deselected\":\r\n        return `${baseClass} bg-red-50 hover:bg-red-100 border-l-4 border-red-500`;\r\n      case \"unchanged\":\r\n        return `${baseClass} bg-blue-50 hover:bg-blue-100`;\r\n      case \"selected\":\r\n        return `${baseClass} bg-blue-50 hover:bg-blue-100`;\r\n      default:\r\n        return `${baseClass} hover:bg-gray-50`;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (studentId) => {\r\n    const status = getStudentSelectionStatus(studentId);\r\n\r\n    if (!editMode) return null;\r\n\r\n    switch (status) {\r\n      case \"newly-selected\":\r\n        return (\r\n          <span className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-green-100 text-green-700 text-xs font-medium rounded\">\r\n            <CheckCircle2 size={12} />\r\n            New\r\n          </span>\r\n        );\r\n      case \"deselected\":\r\n        return (\r\n          <span className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-red-100 text-red-700 text-xs font-medium rounded\">\r\n            <XCircle size={12} />\r\n            Removed\r\n          </span>\r\n        );\r\n      case \"unchanged\":\r\n        return (\r\n          <span className=\"inline-flex items-center gap-1 px-2 py-0.5 bg-blue-100 text-blue-700 text-xs font-medium rounded\">\r\n            <Check size={12} />\r\n            Selected\r\n          </span>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Success Screen\r\n  if (uploadSuccess && uploadResult) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n        <div className=\"bg-white rounded-2xl max-w-2xl w-full overflow-hidden shadow-2xl\">\r\n          <div className=\"p-8 text-center\">\r\n            <div className=\"inline-flex items-center justify-center w-20 h-20 rounded-full bg-green-100 mb-6\">\r\n              <CheckCircle2 className=\"h-10 w-10 text-green-600\" />\r\n            </div>\r\n            <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">\r\n              Results {editMode ? \"Updated\" : \"Uploaded\"} Successfully!\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-8\">\r\n              The round results have been {editMode ? \"updated\" : \"processed\"}{\" \"}\r\n              successfully.\r\n            </p>\r\n\r\n            <div className=\"bg-gray-50 rounded-xl p-6 mb-6\">\r\n              <div className=\"grid grid-cols-3 gap-6\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-blue-600 mb-1\">\r\n                    {uploadResult.totalAttended || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Total Attended</div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-green-600 mb-1\">\r\n                    {uploadResult.selectedCount || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Selected</div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-3xl font-bold text-red-600 mb-1\">\r\n                    {uploadResult.rejectedCount || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Not Selected</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {editMode && getChangeSummary() && (\r\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6 text-left\">\r\n                <div className=\"flex items-start gap-2\">\r\n                  <Info\r\n                    size={16}\r\n                    className=\"text-blue-600 mt-0.5 flex-shrink-0\"\r\n                  />\r\n                  <div className=\"text-sm\">\r\n                    <p className=\"font-semibold text-blue-900 mb-2\">\r\n                      Changes Made:\r\n                    </p>\r\n                    <ul className=\"space-y-1 text-blue-800\">\r\n                      {getChangeSummary().newlySelected > 0 && (\r\n                        <li>\r\n                          • Added {getChangeSummary().newlySelected} new student\r\n                          {getChangeSummary().newlySelected !== 1 ? \"s\" : \"\"}\r\n                        </li>\r\n                      )}\r\n                      {getChangeSummary().deselected > 0 && (\r\n                        <li>\r\n                          • Removed {getChangeSummary().deselected} student\r\n                          {getChangeSummary().deselected !== 1 ? \"s\" : \"\"}\r\n                        </li>\r\n                      )}\r\n                      {getChangeSummary().unchanged > 0 && (\r\n                        <li>\r\n                          • Kept {getChangeSummary().unchanged} existing\r\n                          selection\r\n                          {getChangeSummary().unchanged !== 1 ? \"s\" : \"\"}\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-center gap-3 mt-6\">\r\n              <button\r\n                onClick={() => {\r\n                  onResultsUpdated?.();\r\n                  onClose();\r\n                }}\r\n                className=\"px-5 py-2.5 bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n        {/* Header - Remove sticky */}\r\n        <div className=\"bg-white px-8 py-6 border-b border-gray-100\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div>\r\n              <h3 className=\"text-2xl font-semibold text-gray-900\">\r\n                {editMode ? \"Edit Results\" : \"Upload Results\"}\r\n              </h3>\r\n\r\n              <p className=\"text-sm text-gray-500 mt-2\">\r\n                {companyName} · {positionTitle}\r\n              </p>\r\n              {editMode && (\r\n                <div className=\"mt-3 inline-flex items-center gap-2 px-3 py-1.5 bg-amber-50 border border-amber-200 rounded-lg\">\r\n                  <AlertCircle size={14} className=\"text-amber-600\" />\r\n                  <span className=\"text-xs text-amber-700 font-medium\">\r\n                    Editing last round results\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {uploadMethod === \"file\" && (\r\n                <div className=\"mt-3 bg-blue-50 border border-blue-100 rounded-lg p-4\">\r\n                  <p className=\"text-sm text-blue-800\">\r\n                    <span className=\"font-medium\">Excel Format:</span> Use any\r\n                    column header:\r\n                    <code className=\"mx-1 px-1.5 py-0.5 bg-white rounded text-blue-700 border border-blue-200\">\r\n                      registration_number\r\n                    </code>\r\n                    or\r\n                    <code className=\"mx-1 px-1.5 py-0.5 bg-white rounded text-blue-700 border border-blue-200\">\r\n                      reg_number\r\n                    </code>\r\n                    or\r\n                    <code className=\"mx-1 px-1.5 py-0.5 bg-white rounded text-blue-700 border border-blue-200\">\r\n                      Registration Number\r\n                    </code>\r\n                    with selected students only\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg p-2 transition-all\"\r\n            >\r\n              <X size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"px-8 py-6\">\r\n          {/* Method Selection */}\r\n          <div className=\"inline-flex rounded-xl bg-gray-100 p-1 mb-8\">\r\n            <button\r\n              className={`px-6 py-2.5 rounded-lg text-sm font-medium transition-all ${\r\n                uploadMethod === \"manual\"\r\n                  ? \"bg-white text-gray-900 shadow-sm\"\r\n                  : \"text-gray-600 hover:text-gray-900\"\r\n              }`}\r\n              onClick={() => setUploadMethod(\"manual\")}\r\n            >\r\n              Manual Selection\r\n            </button>\r\n            <button\r\n              className={`px-6 py-2.5 rounded-lg text-sm font-medium transition-all ${\r\n                uploadMethod === \"file\"\r\n                  ? \"bg-white text-gray-900 shadow-sm\"\r\n                  : \"text-gray-600 hover:text-gray-900\"\r\n              }`}\r\n              onClick={() => setUploadMethod(\"file\")}\r\n            >\r\n              CSV Upload\r\n            </button>\r\n          </div>\r\n\r\n          {/* Manual or File Upload content */}\r\n          {uploadMethod === \"manual\" ? (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <div className=\"text-sm text-gray-600\">\r\n                  {students.length} students attended\r\n                  {selectedStudents.size > 0 && (\r\n                    <span className=\"ml-2 text-emerald-600 font-semibold\">\r\n                      • {selectedStudents.size} qualified\r\n                    </span>\r\n                  )}\r\n                  {editMode && getChangeSummary() && (\r\n                    <>\r\n                      {getChangeSummary().newlySelected > 0 && (\r\n                        <span className=\"ml-2 text-green-600 font-semibold\">\r\n                          • +{getChangeSummary().newlySelected} new\r\n                        </span>\r\n                      )}\r\n                      {getChangeSummary().deselected > 0 && (\r\n                        <span className=\"ml-2 text-red-600 font-semibold\">\r\n                          • -{getChangeSummary().deselected} removed\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex gap-3\">\r\n                  <button\r\n                    className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\r\n                    onClick={() =>\r\n                      setSelectedStudents(new Set(students.map((s) => s.id)))\r\n                    }\r\n                  >\r\n                    Select All\r\n                  </button>\r\n                  <button\r\n                    className=\"text-sm text-gray-600 hover:text-gray-700 font-medium\"\r\n                    onClick={() => setSelectedStudents(new Set())}\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {editMode && (\r\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4\">\r\n                  <div className=\"flex items-start gap-2\">\r\n                    <Info\r\n                      size={14}\r\n                      className=\"text-blue-600 mt-0.5 flex-shrink-0\"\r\n                    />\r\n                    <p className=\"text-xs text-blue-800\">\r\n                      <span className=\"font-semibold\">Legend:</span> Green =\r\n                      Newly selected, Red = Removed, Blue = Already selected\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {students.length > 0 ? (\r\n                <div className=\"border border-gray-200 rounded-xl overflow-hidden\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th className=\"px-6 py-4 text-left w-12\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                            checked={\r\n                              students.length > 0 &&\r\n                              selectedStudents.size === students.length\r\n                            }\r\n                            onChange={() => {\r\n                              if (selectedStudents.size === students.length) {\r\n                                setSelectedStudents(new Set());\r\n                              } else {\r\n                                setSelectedStudents(\r\n                                  new Set(students.map((s) => s.id))\r\n                                );\r\n                              }\r\n                            }}\r\n                          />\r\n                        </th>\r\n                        <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                          Registration\r\n                        </th>\r\n                        <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                          Name\r\n                        </th>\r\n                        <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                          Branch\r\n                        </th>\r\n                        <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                          CGPA\r\n                        </th>\r\n                        {editMode && (\r\n                          <th className=\"px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Status\r\n                          </th>\r\n                        )}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-100\">\r\n                      {students.map((student) => (\r\n                        <tr\r\n                          key={student.id}\r\n                          className={getRowClassName(student.id)}\r\n                          onClick={() => handleStudentToggle(student.id)}\r\n                        >\r\n                          <td className=\"px-6 py-4\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                              checked={selectedStudents.has(student.id)}\r\n                              onChange={() => handleStudentToggle(student.id)}\r\n                              onClick={(e) => e.stopPropagation()}\r\n                            />\r\n                          </td>\r\n                          <td className=\"px-6 py-4 text-sm font-medium text-gray-900\">\r\n                            {student.registration_number}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n                            {student.name}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 text-sm text-gray-600\">\r\n                            {student.department} - {student.branch}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 text-sm text-gray-600\">\r\n                            {student.cgpa\r\n                              ? parseFloat(student.cgpa).toFixed(2)\r\n                              : \"N/A\"}\r\n                          </td>\r\n                          {editMode && (\r\n                            <td className=\"px-6 py-4\">\r\n                              {getStatusBadge(student.id)}\r\n                            </td>\r\n                          )}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-16 text-gray-400\">\r\n                  <FileText className=\"mx-auto h-12 w-12 mb-3\" />\r\n                  <p>No students attended this round yet</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"border-2 border-dashed border-gray-300 rounded-2xl p-12 text-center hover:border-blue-400 hover:bg-blue-50/50 transition-all\">\r\n                <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-blue-100 mb-4\">\r\n                  <Upload className=\"h-8 w-8 text-blue-600\" />\r\n                </div>\r\n                <label htmlFor=\"file-upload\" className=\"cursor-pointer block\">\r\n                  <p className=\"text-base font-medium text-gray-900 mb-2\">\r\n                    Upload Results File\r\n                  </p>\r\n                  <input\r\n                    id=\"file-upload\"\r\n                    name=\"file-upload\"\r\n                    type=\"file\"\r\n                    accept=\".csv,.xlsx,.xls\"\r\n                    className=\"sr-only\"\r\n                    onChange={handleFileUpload}\r\n                    disabled={csvProcessing}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"mt-3 inline-flex items-center px-6 py-2.5 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors shadow-sm disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    disabled={csvProcessing}\r\n                  >\r\n                    {csvProcessing ? \"Processing...\" : \"Choose File\"}\r\n                  </button>\r\n                  {file && !csvProcessing && (\r\n                    <div className=\"mt-4 inline-flex items-center px-4 py-2 bg-green-50 text-green-700 rounded-lg\">\r\n                      <Check size={16} className=\"mr-2\" />\r\n                      <span className=\"text-sm font-medium\">{file.name}</span>\r\n                    </div>\r\n                  )}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Error Display - Remove sticky */}\r\n        {error && (\r\n          <div className=\"px-8 py-4 bg-red-50 border-t border-red-100\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <AlertCircle size={16} className=\"text-red-600 flex-shrink-0\" />\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer - Remove sticky */}\r\n        <div className=\"px-8 py-5 bg-gray-50 border-t border-gray-100\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"text-sm text-gray-600\">\r\n              {uploadMethod === \"manual\" && selectedStudents.size > 0 && (\r\n                <div className=\"flex items-center gap-3\">\r\n                  <span className=\"font-medium text-emerald-600\">\r\n                    {selectedStudents.size} student\r\n                    {selectedStudents.size !== 1 ? \"s\" : \"\"} will be marked as\r\n                    qualified\r\n                  </span>\r\n                  {editMode && getChangeSummary() && (\r\n                    <>\r\n                      {getChangeSummary().newlySelected > 0 && (\r\n                        <span className=\"text-green-600 text-xs\">\r\n                          (+{getChangeSummary().newlySelected} new)\r\n                        </span>\r\n                      )}\r\n                      {getChangeSummary().deselected > 0 && (\r\n                        <span className=\"text-red-600 text-xs\">\r\n                          (-{getChangeSummary().deselected} removed)\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                className=\"px-5 py-2.5 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-100 transition-colors\"\r\n                onClick={onClose}\r\n                disabled={loading || csvProcessing}\r\n              >\r\n                Cancel\r\n              </button>\r\n              {uploadMethod === \"manual\" && (\r\n                <button\r\n                  className={`px-5 py-2.5 rounded-lg text-sm font-medium text-white transition-colors disabled:opacity-50 disabled:cursor-not-allowed shadow-sm ${\r\n                    editMode\r\n                      ? \"bg-amber-600 hover:bg-amber-700\"\r\n                      : \"bg-blue-600 hover:bg-blue-700\"\r\n                  }`}\r\n                  onClick={handleSubmit}\r\n                  disabled={\r\n                    loading || (!editMode && selectedStudents.size === 0)\r\n                  }\r\n                >\r\n                  {editMode ? \"Update Results\" : \"Upload Results\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Loading Overlay */}\r\n        {(loading || csvProcessing) && (\r\n          <div className=\"fixed inset-0 bg-white/80 backdrop-blur-sm flex items-center justify-center z-30\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-gray-200 border-t-blue-600 mx-auto\"></div>\r\n              <p className=\"mt-4 text-sm font-medium text-gray-600\">\r\n                {csvProcessing\r\n                  ? \"Processing CSV...\"\r\n                  : editMode\r\n                    ? \"Updating results...\"\r\n                    : \"Uploading results...\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultUploadModal;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;AACA,MAAM;AAEN,MAAM,oBAAoB,CAAC,EACzB,OAAO,EACP,UAAU,EACV,OAAO,EACP,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,WAAW,KAAK,EACjB;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI;IAC7D,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAS;KAAW;IAExB,MAAM,qBAAqB;QACzB,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,cAAc,IAAI,gBAAgB;gBACtC,QAAQ;YACV;YAEA,IAAI,YAAY;gBACd,YAAY,MAAM,CAAC,cAAc;YACnC;YAEA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,GAAG,WAAW,uBAAuB,EAAE,QAAQ,UAAU,EAAE,aAAa;YAG1E,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,YAAY,SAAS,IAAI,CAAC,QAAQ,IAAI,EAAE;gBAExC,wCAAwC;gBACxC,MAAM,mBAAmB,SAAS,IAAI,CAAC,QAAQ,CAC5C,MAAM,CAAC,CAAC,IAAM,EAAE,aAAa,KAAK,YAClC,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;gBAClB,oBAAoB,IAAI,IAAI;gBAC5B,qBAAqB,IAAI,IAAI;YAC/B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,sBAAsB,CAAC;QAC3B,MAAM,cAAc,IAAI,IAAI;QAC5B,IAAI,YAAY,GAAG,CAAC,YAAY;YAC9B,YAAY,MAAM,CAAC;QACrB,OAAO;YACL,YAAY,GAAG,CAAC;QAClB;QACA,oBAAoB;IACtB;IAEA,MAAM,4BAA4B,CAAC;QACjC,MAAM,aAAa,iBAAiB,GAAG,CAAC;QACxC,MAAM,cAAc,kBAAkB,GAAG,CAAC;QAE1C,IAAI,UAAU;YACZ,IAAI,cAAc,aAAa,OAAO;YACtC,IAAI,cAAc,CAAC,aAAa,OAAO;YACvC,IAAI,CAAC,cAAc,aAAa,OAAO;QACzC;QACA,OAAO,aAAa,aAAa;IACnC;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,UAAU,OAAO;QAEtB,MAAM,gBAAgB;eAAI;SAAiB,CAAC,MAAM,CAChD,CAAC,KAAO,CAAC,kBAAkB,GAAG,CAAC;QAEjC,MAAM,aAAa;eAAI;SAAkB,CAAC,MAAM,CAC9C,CAAC,KAAO,CAAC,iBAAiB,GAAG,CAAC;QAGhC,OAAO;YACL,eAAe,cAAc,MAAM;YACnC,YAAY,WAAW,MAAM;YAC7B,WAAW,iBAAiB,IAAI,GAAG,cAAc,MAAM;QACzD;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,eAAe,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;QAC1C,IAAI,CAAC,cAAc;QAEnB,QAAQ;QACR,iBAAiB;QACjB,SAAS;QAET,IAAI;YACF,+BAA+B;YAC/B,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YAExB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,WAAW,uBAAuB,EAAE,QAAQ,eAAe,CAAC,EAC/D,UACA;gBACE,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAGF,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,iBAAiB;gBACjB,gBAAgB,SAAS,IAAI,CAAC,IAAI;YACpC,OAAO;gBACL,SAAS,SAAS,IAAI,CAAC,OAAO,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,SACE,MAAM,QAAQ,EAAE,MAAM,WACpB;QAEN,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,+BAA+B,SAClC,MAAM,CAAC,CAAC,UAAY,iBAAiB,GAAG,CAAC,QAAQ,EAAE,GACnD,GAAG,CAAC,CAAC,UAAY,QAAQ,mBAAmB;YAE/C,+CAA+C;YAC/C,IAAI;YACJ,IAAI,UAAU;gBACZ,MAAM,gCAAgC,SACnC,MAAM,CACL,CAAC,UACC,kBAAkB,GAAG,CAAC,QAAQ,EAAE,KAChC,CAAC,iBAAiB,GAAG,CAAC,QAAQ,EAAE,GAEnC,GAAG,CAAC,CAAC,UAAY,QAAQ,mBAAmB;gBAE/C,UAAU;oBACR;oBACA;oBACA,QAAQ;gBACV;YACF,OAAO;gBACL,IAAI,6BAA6B,MAAM,KAAK,GAAG;oBAC7C,SAAS;oBACT,WAAW;oBACX;gBACF;gBACA,UAAU;oBACR;oBACA,QAAQ;gBACV;YACF;YAEA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,WAAW,uBAAuB,EAAE,QAAQ,QAAQ,CAAC,EACxD;YAGF,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,iBAAiB;gBACjB,gBAAgB,SAAS,IAAI,CAAC,IAAI;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC5C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,SAAS,0BAA0B;QACzC,MAAM,YAAY;QAElB,OAAQ;YACN,KAAK;gBACH,OAAO,GAAG,UAAU,2DAA2D,CAAC;YAClF,KAAK;gBACH,OAAO,GAAG,UAAU,qDAAqD,CAAC;YAC5E,KAAK;gBACH,OAAO,GAAG,UAAU,6BAA6B,CAAC;YACpD,KAAK;gBACH,OAAO,GAAG,UAAU,6BAA6B,CAAC;YACpD;gBACE,OAAO,GAAG,UAAU,iBAAiB,CAAC;QAC1C;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,SAAS,0BAA0B;QAEzC,IAAI,CAAC,UAAU,OAAO;QAEtB,OAAQ;YACN,KAAK;gBACH,qBACE,8OAAC;oBAAK,WAAU;;sCACd,8OAAC,qNAAA,CAAA,eAAY;4BAAC,MAAM;;;;;;wBAAM;;;;;;;YAIhC,KAAK;gBACH,qBACE,8OAAC;oBAAK,WAAU;;sCACd,8OAAC,4MAAA,CAAA,UAAO;4BAAC,MAAM;;;;;;wBAAM;;;;;;;YAI3B,KAAK;gBACH,qBACE,8OAAC;oBAAK,WAAU;;sCACd,8OAAC,oMAAA,CAAA,QAAK;4BAAC,MAAM;;;;;;wBAAM;;;;;;;YAIzB;gBACE,OAAO;QACX;IACF;IAEA,iBAAiB;IACjB,IAAI,iBAAiB,cAAc;QACjC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,qNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;sCAE1B,8OAAC;4BAAG,WAAU;;gCAA4C;gCAC/C,WAAW,YAAY;gCAAW;;;;;;;sCAE7C,8OAAC;4BAAE,WAAU;;gCAAqB;gCACH,WAAW,YAAY;gCAAa;gCAAI;;;;;;;sCAIvE,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACZ,aAAa,aAAa,IAAI;;;;;;0DAEjC,8OAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;kDAEzC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACZ,aAAa,aAAa,IAAI;;;;;;0DAEjC,8OAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;kDAEzC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACZ,aAAa,aAAa,IAAI;;;;;;0DAEjC,8OAAC;gDAAI,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;;;;;;wBAK5C,YAAY,oCACX,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kMAAA,CAAA,OAAI;wCACH,MAAM;wCACN,WAAU;;;;;;kDAEZ,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAE,WAAU;0DAAmC;;;;;;0DAGhD,8OAAC;gDAAG,WAAU;;oDACX,mBAAmB,aAAa,GAAG,mBAClC,8OAAC;;4DAAG;4DACO,mBAAmB,aAAa;4DAAC;4DACzC,mBAAmB,aAAa,KAAK,IAAI,MAAM;;;;;;;oDAGnD,mBAAmB,UAAU,GAAG,mBAC/B,8OAAC;;4DAAG;4DACS,mBAAmB,UAAU;4DAAC;4DACxC,mBAAmB,UAAU,KAAK,IAAI,MAAM;;;;;;;oDAGhD,mBAAmB,SAAS,GAAG,mBAC9B,8OAAC;;4DAAG;4DACM,mBAAmB,SAAS;4DAAC;4DAEpC,mBAAmB,SAAS,KAAK,IAAI,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAS1D,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,SAAS;oCACP;oCACA;gCACF;gCACA,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDACX,WAAW,iBAAiB;;;;;;kDAG/B,8OAAC;wCAAE,WAAU;;4CACV;4CAAY;4CAAI;;;;;;;oCAElB,0BACC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,oNAAA,CAAA,cAAW;gDAAC,MAAM;gDAAI,WAAU;;;;;;0DACjC,8OAAC;gDAAK,WAAU;0DAAqC;;;;;;;;;;;;oCAKxD,iBAAiB,wBAChB,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAE,WAAU;;8DACX,8OAAC;oDAAK,WAAU;8DAAc;;;;;;gDAAoB;8DAElD,8OAAC;oDAAK,WAAU;8DAA2E;;;;;;gDAEpF;8DAEP,8OAAC;oDAAK,WAAU;8DAA2E;;;;;;gDAEpF;8DAEP,8OAAC;oDAAK,WAAU;8DAA2E;;;;;;gDAEpF;;;;;;;;;;;;;;;;;;0CAOf,8OAAC;gCACC,SAAS;gCACT,WAAU;0CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;oCAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;8BAMf,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,WAAW,CAAC,0DAA0D,EACpE,iBAAiB,WACb,qCACA,qCACJ;oCACF,SAAS,IAAM,gBAAgB;8CAChC;;;;;;8CAGD,8OAAC;oCACC,WAAW,CAAC,0DAA0D,EACpE,iBAAiB,SACb,qCACA,qCACJ;oCACF,SAAS,IAAM,gBAAgB;8CAChC;;;;;;;;;;;;wBAMF,iBAAiB,yBAChB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;gDACZ,SAAS,MAAM;gDAAC;gDAChB,iBAAiB,IAAI,GAAG,mBACvB,8OAAC;oDAAK,WAAU;;wDAAsC;wDACjD,iBAAiB,IAAI;wDAAC;;;;;;;gDAG5B,YAAY,oCACX;;wDACG,mBAAmB,aAAa,GAAG,mBAClC,8OAAC;4DAAK,WAAU;;gEAAoC;gEAC9C,mBAAmB,aAAa;gEAAC;;;;;;;wDAGxC,mBAAmB,UAAU,GAAG,mBAC/B,8OAAC;4DAAK,WAAU;;gEAAkC;gEAC5C,mBAAmB,UAAU;gEAAC;;;;;;;;;;;;;;;sDAM5C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,WAAU;oDACV,SAAS,IACP,oBAAoB,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;8DAEvD;;;;;;8DAGD,8OAAC;oDACC,WAAU;oDACV,SAAS,IAAM,oBAAoB,IAAI;8DACxC;;;;;;;;;;;;;;;;;;gCAMJ,0BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,kMAAA,CAAA,OAAI;gDACH,MAAM;gDACN,WAAU;;;;;;0DAEZ,8OAAC;gDAAE,WAAU;;kEACX,8OAAC;wDAAK,WAAU;kEAAgB;;;;;;oDAAc;;;;;;;;;;;;;;;;;;gCAOrD,SAAS,MAAM,GAAG,kBACjB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;gDAAM,WAAU;0DACf,cAAA,8OAAC;;sEACC,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEACC,MAAK;gEACL,WAAU;gEACV,SACE,SAAS,MAAM,GAAG,KAClB,iBAAiB,IAAI,KAAK,SAAS,MAAM;gEAE3C,UAAU;oEACR,IAAI,iBAAiB,IAAI,KAAK,SAAS,MAAM,EAAE;wEAC7C,oBAAoB,IAAI;oEAC1B,OAAO;wEACL,oBACE,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;oEAEpC;gEACF;;;;;;;;;;;sEAGJ,8OAAC;4DAAG,WAAU;sEAAmF;;;;;;sEAGjG,8OAAC;4DAAG,WAAU;sEAAmF;;;;;;sEAGjG,8OAAC;4DAAG,WAAU;sEAAmF;;;;;;sEAGjG,8OAAC;4DAAG,WAAU;sEAAmF;;;;;;wDAGhG,0BACC,8OAAC;4DAAG,WAAU;sEAAmF;;;;;;;;;;;;;;;;;0DAMvG,8OAAC;gDAAM,WAAU;0DACd,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;wDAEC,WAAW,gBAAgB,QAAQ,EAAE;wDACrC,SAAS,IAAM,oBAAoB,QAAQ,EAAE;;0EAE7C,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEACC,MAAK;oEACL,WAAU;oEACV,SAAS,iBAAiB,GAAG,CAAC,QAAQ,EAAE;oEACxC,UAAU,IAAM,oBAAoB,QAAQ,EAAE;oEAC9C,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;;;;;;0EAGrC,8OAAC;gEAAG,WAAU;0EACX,QAAQ,mBAAmB;;;;;;0EAE9B,8OAAC;gEAAG,WAAU;0EACX,QAAQ,IAAI;;;;;;0EAEf,8OAAC;gEAAG,WAAU;;oEACX,QAAQ,UAAU;oEAAC;oEAAI,QAAQ,MAAM;;;;;;;0EAExC,8OAAC;gEAAG,WAAU;0EACX,QAAQ,IAAI,GACT,WAAW,QAAQ,IAAI,EAAE,OAAO,CAAC,KACjC;;;;;;4DAEL,0BACC,8OAAC;gEAAG,WAAU;0EACX,eAAe,QAAQ,EAAE;;;;;;;uDA7BzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;6FAsCzB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,8MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;sDAAE;;;;;;;;;;;;;;;;;qFAKT,8OAAC;sCACC,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;;;;;;kDAEpB,8OAAC;wCAAM,SAAQ;wCAAc,WAAU;;0DACrC,8OAAC;gDAAE,WAAU;0DAA2C;;;;;;0DAGxD,8OAAC;gDACC,IAAG;gDACH,MAAK;gDACL,MAAK;gDACL,QAAO;gDACP,WAAU;gDACV,UAAU;gDACV,UAAU;;;;;;0DAEZ,8OAAC;gDACC,MAAK;gDACL,WAAU;gDACV,UAAU;0DAET,gBAAgB,kBAAkB;;;;;;4CAEpC,QAAQ,CAAC,+BACR,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,oMAAA,CAAA,QAAK;wDAAC,MAAM;wDAAI,WAAU;;;;;;kEAC3B,8OAAC;wDAAK,WAAU;kEAAuB,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAU7D,uBACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,oNAAA,CAAA,cAAW;gCAAC,MAAM;gCAAI,WAAU;;;;;;0CACjC,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;;8BAM3C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACZ,iBAAiB,YAAY,iBAAiB,IAAI,GAAG,mBACpD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;;gDACb,iBAAiB,IAAI;gDAAC;gDACtB,iBAAiB,IAAI,KAAK,IAAI,MAAM;gDAAG;;;;;;;wCAGzC,YAAY,oCACX;;gDACG,mBAAmB,aAAa,GAAG,mBAClC,8OAAC;oDAAK,WAAU;;wDAAyB;wDACpC,mBAAmB,aAAa;wDAAC;;;;;;;gDAGvC,mBAAmB,UAAU,GAAG,mBAC/B,8OAAC;oDAAK,WAAU;;wDAAuB;wDAClC,mBAAmB,UAAU;wDAAC;;;;;;;;;;;;;;;;;;;;0CAQ/C,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,WAAU;wCACV,SAAS;wCACT,UAAU,WAAW;kDACtB;;;;;;oCAGA,iBAAiB,0BAChB,8OAAC;wCACC,WAAW,CAAC,kIAAkI,EAC5I,WACI,oCACA,iCACJ;wCACF,SAAS;wCACT,UACE,WAAY,CAAC,YAAY,iBAAiB,IAAI,KAAK;kDAGpD,WAAW,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;gBAQxC,CAAC,WAAW,aAAa,mBACxB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAE,WAAU;0CACV,gBACG,sBACA,WACE,wBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtB;uCAEe","debugId":null}},
    {"offset": {"line": 1450, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/ViewResultsModal.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  X,\r\n  CheckCircle,\r\n  XCircle,\r\n  Users,\r\n  TrendingUp,\r\n  Calendar,\r\n  MapPin,\r\n  Clock,\r\n  Building2,\r\n  Briefcase,\r\n  Search,\r\n} from \"lucide-react\";\r\nimport axios from \"axios\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst ViewResultsModal = ({\r\n  eventId,\r\n  positionId,\r\n  onClose,\r\n  companyName,\r\n  positionTitle,\r\n}) => {\r\n  const [eventDetails, setEventDetails] = useState(null);\r\n  const [students, setStudents] = useState([]);\r\n  const [filteredStudents, setFilteredStudents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editedResults, setEditedResults] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    resultStatus: \"all\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchEventDetails();\r\n    fetchStudents();\r\n  }, [eventId, positionId]);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [students, filters]);\r\n\r\n  const fetchEventDetails = async () => {\r\n    try {\r\n      const queryParams = positionId ? `?positionId=${positionId}` : \"\";\r\n      const { data } = await axios.get(\r\n        `${backendUrl}/round-tracking/events/${eventId}/details${queryParams}`\r\n      );\r\n\r\n      if (data.success) {\r\n        setEventDetails(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching event details:\", error);\r\n      setError(\"Failed to load event details\");\r\n    }\r\n  };\r\n\r\n  const fetchStudents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const queryParams = new URLSearchParams({\r\n        status: \"applied\",\r\n      });\r\n\r\n      if (positionId) {\r\n        queryParams.append(\"positionId\", positionId);\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `${backendUrl}/round-tracking/events/${eventId}/students?${queryParams}`\r\n      );\r\n\r\n      if (data.success) {\r\n        setStudents(data.students || []);\r\n        // Initialize edited results\r\n        const initialResults = {};\r\n        data.students.forEach((student) => {\r\n          initialResults[student.id] = student.result_status || \"pending\";\r\n        });\r\n        setEditedResults(initialResults);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      setError(\"Failed to load students\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...students];\r\n\r\n    // Search filter\r\n    if (filters.search) {\r\n      const searchLower = filters.search.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (student) =>\r\n          student.name.toLowerCase().includes(searchLower) ||\r\n          student.registration_number.toLowerCase().includes(searchLower) ||\r\n          student.enrollment_number?.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n\r\n    // Result status filter\r\n    if (filters.resultStatus !== \"all\") {\r\n      filtered = filtered.filter((student) => {\r\n        const status = editMode\r\n          ? editedResults[student.id]\r\n          : student.result_status || \"pending\";\r\n        return status === filters.resultStatus;\r\n      });\r\n    }\r\n\r\n    setFilteredStudents(filtered);\r\n  };\r\n\r\n  const handleResultChange = (studentId, newStatus) => {\r\n    setEditedResults((prev) => ({\r\n      ...prev,\r\n      [studentId]: newStatus,\r\n    }));\r\n  };\r\n\r\n  const handleSaveResults = async () => {\r\n    try {\r\n      setSaving(true);\r\n      setError(null);\r\n\r\n      // Get qualified student registration numbers\r\n      const qualifiedRegistrationNumbers = students\r\n        .filter((student) => editedResults[student.id] === \"selected\")\r\n        .map((student) => student.registration_number);\r\n\r\n      const response = await axios.post(\r\n        `${backendUrl}/round-tracking/events/${eventId}/results`,\r\n        {\r\n          qualifiedRegistrationNumbers,\r\n          method: \"manual\",\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        // Refresh data\r\n        await fetchStudents();\r\n        await fetchEventDetails();\r\n        setEditMode(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving results:\", error);\r\n      setError(error.response?.data?.message || \"Failed to save results\");\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    // Reset to original results\r\n    const originalResults = {};\r\n    students.forEach((student) => {\r\n      originalResults[student.id] = student.result_status || \"pending\";\r\n    });\r\n    setEditedResults(originalResults);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleBulkAction = (action) => {\r\n    const newResults = { ...editedResults };\r\n    filteredStudents.forEach((student) => {\r\n      newResults[student.id] = action;\r\n    });\r\n    setEditedResults(newResults);\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    switch (status) {\r\n      case \"selected\":\r\n        return (\r\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-emerald-100 text-emerald-800\">\r\n            <CheckCircle size={12} className=\"mr-1\" />\r\n            Selected\r\n          </span>\r\n        );\r\n      case \"rejected\":\r\n        return (\r\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n            <XCircle size={12} className=\"mr-1\" />\r\n            Rejected\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n            <Clock size={12} className=\"mr-1\" />\r\n            Pending\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const csvData = filteredStudents.map((student) => ({\r\n      Registration: student.registration_number,\r\n      Name: student.name,\r\n      Department: student.department,\r\n      Branch: student.branch,\r\n      CGPA: student.cgpa,\r\n      Attendance: student.attendance_status || \"N/A\",\r\n      Result: editMode\r\n        ? editedResults[student.id]\r\n        : student.result_status || \"pending\",\r\n    }));\r\n\r\n    const headers = Object.keys(csvData[0]).join(\",\");\r\n    const rows = csvData.map((row) => Object.values(row).join(\",\"));\r\n    const csv = [headers, ...rows].join(\"\\n\");\r\n\r\n    const blob = new Blob([csv], { type: \"text/csv\" });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `event_${eventId}_results.csv`;\r\n    a.click();\r\n  };\r\n\r\n  const getCountsByPosition = () => {\r\n    if (!eventDetails?.counts_per_position) return null;\r\n    const positionData = Object.values(eventDetails.counts_per_position)[0];\r\n    return positionData;\r\n  };\r\n\r\n  const counts = getCountsByPosition();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-xl w-full max-w-7xl max-h-[90vh] overflow-y-auto\">\r\n        {/* Everything in one scrollable container */}\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Header Section */}\r\n          <div className=\"bg-white\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  {eventDetails?.title}\r\n                </h1>\r\n                <div className=\"flex items-center gap-3 mt-2 text-sm text-gray-600\">\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <Building2 size={14} />\r\n                    <span>{companyName}</span>\r\n                  </div>\r\n                  <span>•</span>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <Briefcase size={14} />\r\n                    <span>{positionTitle}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                onClick={onClose}\r\n                className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              >\r\n                <X className=\"h-5 w-5 text-gray-500\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Event Details */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6\">\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <div className=\"flex items-center gap-2 text-gray-600 mb-1\">\r\n                  <Calendar size={16} />\r\n                  <span className=\"text-sm font-medium\">Date & Time</span>\r\n                </div>\r\n                <p className=\"text-gray-900 font-semibold\">\r\n                  {eventDetails?.event_date\r\n                    ? new Date(eventDetails.event_date).toLocaleDateString(\r\n                        \"en-US\",\r\n                        {\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          year: \"numeric\",\r\n                        }\r\n                      )\r\n                    : \"N/A\"}\r\n                </p>\r\n                {eventDetails?.start_time && (\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {eventDetails.start_time.slice(0, 5)}\r\n                    {eventDetails.end_time &&\r\n                      ` - ${eventDetails.end_time.slice(0, 5)}`}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <div className=\"flex items-center gap-2 text-gray-600 mb-1\">\r\n                  <MapPin size={16} />\r\n                  <span className=\"text-sm font-medium\">Venue</span>\r\n                </div>\r\n                <p className=\"text-gray-900 font-semibold\">\r\n                  {eventDetails?.venue || \"N/A\"}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {eventDetails?.mode?.toUpperCase() || \"OFFLINE\"}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <div className=\"flex items-center gap-2 text-gray-600 mb-1\">\r\n                  <Users size={16} />\r\n                  <span className=\"text-sm font-medium\">Round Number</span>\r\n                </div>\r\n                <p className=\"text-gray-900 font-semibold text-2xl\">\r\n                  {eventDetails?.round_number || 1}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <div className=\"flex items-center gap-2 text-gray-600 mb-1\">\r\n                  <TrendingUp size={16} />\r\n                  <span className=\"text-sm font-medium\">Status</span>\r\n                </div>\r\n                <span\r\n                  className={`inline-block px-3 py-1 rounded-full text-sm font-medium ${\r\n                    eventDetails?.status === \"completed\"\r\n                      ? \"bg-emerald-100 text-emerald-800\"\r\n                      : eventDetails?.status === \"ongoing\"\r\n                        ? \"bg-blue-100 text-blue-800\"\r\n                        : \"bg-amber-100 text-amber-800\"\r\n                  }`}\r\n                >\r\n                  {eventDetails?.status?.toUpperCase()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Stats Cards */}\r\n            {counts && (\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6\">\r\n                {eventDetails?.round_number === 1 && (\r\n                  <div className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\">\r\n                    <p className=\"text-sm text-blue-600 font-medium\">Applied</p>\r\n                    <p className=\"text-2xl font-bold text-blue-900 mt-1\">\r\n                      {counts.applied || 0}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                <div className=\"bg-purple-50 rounded-lg p-4 border border-purple-200\">\r\n                  <p className=\"text-sm text-purple-600 font-medium\">\r\n                    Eligible\r\n                  </p>\r\n                  <p className=\"text-2xl font-bold text-purple-900 mt-1\">\r\n                    {counts.eligible || 0}\r\n                  </p>\r\n                </div>\r\n                <div className=\"bg-amber-50 rounded-lg p-4 border border-amber-200\">\r\n                  <p className=\"text-sm text-amber-600 font-medium\">Attended</p>\r\n                  <p className=\"text-2xl font-bold text-amber-900 mt-1\">\r\n                    {counts.attended || 0}\r\n                  </p>\r\n                </div>\r\n                <div className=\"bg-emerald-50 rounded-lg p-4 border border-emerald-200\">\r\n                  <p className=\"text-sm text-emerald-600 font-medium\">\r\n                    Qualified\r\n                  </p>\r\n                  <p className=\"text-2xl font-bold text-emerald-900 mt-1\">\r\n                    {counts.qualified || 0}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n              <p className=\"text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Filters and Bulk Actions */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4\">\r\n            <div className=\"flex flex-col md:flex-row gap-4 items-center justify-between\">\r\n              <div className=\"flex-1 w-full md:w-auto\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search students...\"\r\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    value={filters.search}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, search: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-3\">\r\n                <select\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  value={filters.resultStatus}\r\n                  onChange={(e) =>\r\n                    setFilters({ ...filters, resultStatus: e.target.value })\r\n                  }\r\n                >\r\n                  <option value=\"all\">All Results</option>\r\n                  <option value=\"selected\">Selected</option>\r\n                  <option value=\"rejected\">Rejected</option>\r\n                  <option value=\"pending\">Pending</option>\r\n                </select>\r\n\r\n                {editMode && (\r\n                  <div className=\"flex items-center gap-2 border-l pl-3\">\r\n                    <span className=\"text-sm text-gray-600\">Bulk:</span>\r\n                    <button\r\n                      onClick={() => handleBulkAction(\"selected\")}\r\n                      className=\"px-3 py-1 bg-emerald-100 text-emerald-700 rounded hover:bg-emerald-200 transition-colors text-sm\"\r\n                    >\r\n                      Select All\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleBulkAction(\"rejected\")}\r\n                      className=\"px-3 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors text-sm\"\r\n                    >\r\n                      Reject All\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 text-sm text-gray-600\">\r\n              Showing {filteredStudents.length} of {students.length} students\r\n              {editMode && (\r\n                <span className=\"ml-2 text-emerald-600 font-medium\">\r\n                  •{\" \"}\r\n                  {\r\n                    Object.values(editedResults).filter((r) => r === \"selected\")\r\n                      .length\r\n                  }{\" \"}\r\n                  selected\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Students Table */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Student\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Registration\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Department\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      CGPA\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Attendance\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Result\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredStudents.map((student) => (\r\n                    <tr key={student.id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          {student.name}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {student.enrollment_number}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {student.registration_number}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                        {student.department}\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          {student.branch}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {student.cgpa\r\n                          ? parseFloat(student.cgpa).toFixed(2)\r\n                          : \"N/A\"}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {student.attendance_status === \"present\" ? (\r\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                            Present\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n                            Absent\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {editMode ? (\r\n                          <select\r\n                            value={editedResults[student.id] || \"pending\"}\r\n                            onChange={(e) =>\r\n                              handleResultChange(student.id, e.target.value)\r\n                            }\r\n                            className=\"px-3 py-1 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\r\n                          >\r\n                            <option value=\"pending\">Pending</option>\r\n                            <option value=\"selected\">Selected</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                          </select>\r\n                        ) : (\r\n                          getStatusBadge(student.result_status || \"pending\")\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {filteredStudents.length === 0 && (\r\n              <div className=\"text-center py-12\">\r\n                <Users size={48} className=\"mx-auto text-gray-300 mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                  No Students Found\r\n                </h3>\r\n                <p className=\"text-gray-500\">\r\n                  {filters.search || filters.resultStatus !== \"all\"\r\n                    ? \"Try adjusting your filters\"\r\n                    : \"No students have applied for this round yet\"}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                Showing {filteredStudents.length} of {students.length} students\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  onClick={exportToCSV}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-700\"\r\n                >\r\n                  Export Results\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Loading Overlay */}\r\n        {loading && (\r\n          <div className=\"absolute inset-0 bg-white/80 flex items-center justify-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewResultsModal;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2662, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/RoundsTable.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport {\r\n  Eye,\r\n  Upload,\r\n  CheckCircle,\r\n  Clock,\r\n  AlertCircle,\r\n  Calendar,\r\n  MapPin,\r\n  TrendingUp,\r\n  Users,\r\n  Edit,\r\n} from \"lucide-react\";\r\nimport ResultUploadModal from \"./ResultUploadModal\";\r\nimport ViewResultsModal from \"./ViewResultsModal\";\r\n\r\nconst RoundsTable = ({\r\n  events,\r\n  positionId,\r\n  companyName,\r\n  positionTitle,\r\n  onUpdate,\r\n}) => {\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleBulkUpload = (eventId) => {\r\n    setSelectedEvent(eventId);\r\n    setEditMode(false);\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleEdit = (eventId) => {\r\n    setSelectedEvent(eventId);\r\n    setEditMode(true);\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleViewResults = (eventId) => {\r\n    setSelectedEvent(eventId);\r\n    setShowViewModal(true);\r\n  };\r\n\r\n  const handleResultsUpdated = useCallback(() => {\r\n    onUpdate?.();\r\n  }, [onUpdate]);\r\n\r\n  const getEventStatusIcon = (event) => {\r\n    if (event.status === \"completed\")\r\n      return <CheckCircle size={14} className=\"text-emerald-500\" />;\r\n    if (event.status === \"ongoing\")\r\n      return <Clock size={14} className=\"text-blue-500\" />;\r\n    return <AlertCircle size={14} className=\"text-slate-400\" />;\r\n  };\r\n\r\n  const getRoundTypeBadge = (mode) => {\r\n    const types = {\r\n      online: \"bg-blue-50 text-blue-700 border-blue-200\",\r\n      offline: \"bg-purple-50 text-purple-700 border-purple-200\",\r\n      hybrid: \"bg-indigo-50 text-indigo-700 border-indigo-200\",\r\n    };\r\n    return types[mode] || \"bg-slate-50 text-slate-700 border-slate-200\";\r\n  };\r\n\r\n  const calculatePercentage = (numerator, denominator) => {\r\n    if (!denominator || denominator === 0) return \"0\";\r\n    return Math.round((numerator / denominator) * 100);\r\n  };\r\n\r\n  const formatTime = (timeStr) => {\r\n    if (!timeStr) return \"\";\r\n    try {\r\n      const [hours, minutes] = timeStr.split(\":\");\r\n      const hour = parseInt(hours);\r\n      const ampm = hour >= 12 ? \"PM\" : \"AM\";\r\n      const displayHour = hour % 12 || 12;\r\n      return `${displayHour}:${minutes} ${ampm}`;\r\n    } catch (e) {\r\n      return timeStr;\r\n    }\r\n  };\r\n\r\n  // Check if this event is the last round\r\n  const isLastRound = (eventIndex) => {\r\n    return eventIndex === events.length - 1;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-slate-200\">\r\n          <thead className=\"bg-slate-50\">\r\n            <tr>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Round Details\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Users size={12} />\r\n                  Eligible\r\n                </div>\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <TrendingUp size={12} />\r\n                  Applied\r\n                </div>\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Attended\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Qualified\r\n              </th>\r\n              <th className=\"px-4 py-2.5 text-left text-xs font-semibold text-slate-700 uppercase tracking-wide\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-slate-100 bg-white\">\r\n            {events.map((event, index) => (\r\n              <tr\r\n                key={event.id}\r\n                className=\"hover:bg-slate-50 transition-colors\"\r\n              >\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <div className=\"h-7 w-7 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center\">\r\n                        <span className=\"text-xs font-bold text-white\">\r\n                          {event.round_number || index + 1}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center gap-1.5 mb-1\">\r\n                        <h3 className=\"text-sm font-semibold text-slate-900\">\r\n                          {event.title}\r\n                        </h3>\r\n                        {getEventStatusIcon(event)}\r\n                      </div>\r\n                      <span\r\n                        className={`inline-block text-xs px-2 py-0.5 rounded border font-medium ${getRoundTypeBadge(\r\n                          event.mode\r\n                        )}`}\r\n                      >\r\n                        {event.mode?.toUpperCase() || \"OFFLINE\"}\r\n                      </span>\r\n                      <div className=\"mt-1.5 space-y-0.5\">\r\n                        {event.event_date && (\r\n                          <div className=\"flex items-center gap-1 text-xs text-slate-600\">\r\n                            <Calendar size={11} className=\"text-slate-400\" />\r\n                            <span>\r\n                              {new Date(event.event_date).toLocaleDateString(\r\n                                \"en-US\",\r\n                                {\r\n                                  month: \"short\",\r\n                                  day: \"numeric\",\r\n                                  year: \"numeric\",\r\n                                }\r\n                              )}\r\n                            </span>\r\n                            {event.start_time && (\r\n                              <span className=\"ml-1\">\r\n                                • {formatTime(event.start_time)}\r\n                                {event.end_time &&\r\n                                  ` - ${formatTime(event.end_time)}`}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {event.venue && (\r\n                          <div className=\"flex items-center gap-1 text-xs text-slate-600\">\r\n                            <MapPin size={11} className=\"text-slate-400\" />\r\n                            <span className=\"truncate\">{event.venue}</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"text-sm font-semibold text-slate-900\">\r\n                    {event.eligible_count || 0}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-blue-600\">\r\n                      {event.round_number == 1 ? event.applied_count || 0 : \"-\"}\r\n                    </div>\r\n                    {event.round_number === 1 && (\r\n                      <div className=\"text-xs text-slate-500\">\r\n                        {calculatePercentage(\r\n                          event.applied_count,\r\n                          event.eligible_count\r\n                        )}\r\n                        %\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-amber-600\">\r\n                      {event.attended_count || 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-slate-500\">\r\n                      {calculatePercentage(\r\n                        event.attended_count,\r\n                        event.eligible_count\r\n                      )}\r\n                      %\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div>\r\n                    <div className=\"text-sm font-semibold text-emerald-600\">\r\n                      {event.qualified_count || 0}\r\n                    </div>\r\n                    <div className=\"text-xs text-slate-500\">\r\n                      {calculatePercentage(\r\n                        event.qualified_count,\r\n                        event.attended_count\r\n                      )}\r\n                      %\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                      className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-blue-700 bg-blue-50 rounded hover:bg-blue-100 transition-colors border border-blue-200\"\r\n                      onClick={() => handleViewResults(event.id)}\r\n                    >\r\n                      <Eye className=\"h-3.5 w-3.5 mr-1\" />\r\n                      View\r\n                    </button>\r\n                    {event.status !== \"completed\" && (\r\n                      <button\r\n                        className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-white bg-emerald-600 rounded hover:bg-emerald-700 transition-colors\"\r\n                        onClick={() => handleBulkUpload(event.id)}\r\n                      >\r\n                        <Upload className=\"h-3.5 w-3.5 mr-1\" />\r\n                        Upload\r\n                      </button>\r\n                    )}\r\n                    {event.status === \"completed\" && isLastRound(index) && (\r\n                      <button\r\n                        className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-amber-700 bg-amber-50 rounded hover:bg-amber-100 transition-colors border border-amber-200\"\r\n                        onClick={() => handleEdit(event.id)}\r\n                      >\r\n                        <Edit className=\"h-3.5 w-3.5 mr-1\" />\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                    {event.status === \"completed\" && !isLastRound(index) && (\r\n                      <div className=\"relative group\">\r\n                        <button\r\n                          className=\"inline-flex items-center px-2.5 py-1.5 text-xs font-medium text-slate-400 bg-slate-50 rounded cursor-not-allowed border border-slate-200\"\r\n                          disabled\r\n                        >\r\n                          <Edit className=\"h-3.5 w-3.5 mr-1\" />\r\n                          Edit\r\n                        </button>\r\n                        <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-slate-900 text-white text-xs rounded-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all whitespace-nowrap z-10 pointer-events-none\">\r\n                          Cannot edit - subsequent rounds exist\r\n                          <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 -mt-1 border-4 border-transparent border-t-slate-900\"></div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {showUploadModal && (\r\n        <ResultUploadModal\r\n          eventId={selectedEvent}\r\n          positionId={positionId}\r\n          onClose={() => {\r\n            setShowUploadModal(false);\r\n            setEditMode(false);\r\n          }}\r\n          companyName={companyName}\r\n          positionTitle={positionTitle}\r\n          onResultsUpdated={handleResultsUpdated}\r\n          editMode={editMode}\r\n        />\r\n      )}\r\n\r\n      {showViewModal && selectedEvent && (\r\n        <ViewResultsModal\r\n          eventId={selectedEvent}\r\n          positionId={positionId}\r\n          onClose={() => {\r\n            setShowViewModal(false);\r\n            setSelectedEvent(null);\r\n          }}\r\n          companyName={companyName}\r\n          positionTitle={positionTitle}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoundsTable;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3307, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/CompanyCard.js"],"sourcesContent":["import { ChevronDown, ChevronRight, Calendar } from \"lucide-react\";\r\nimport RoundsTable from \"./RoundsTable\";\r\n\r\nconst formatPackage = (amount) => {\r\n  if (amount == null || isNaN(amount)) {\r\n    return \"Not Disclosed\";\r\n  }\r\n\r\n  if (amount >= 10000000) {\r\n    return `₹ ${(amount / 10000000).toFixed(1)} Cr`;\r\n  } else if (amount >= 100000) {\r\n    return `₹ ${(amount / 100000).toFixed(1)} LPA`;\r\n  }\r\n  return `₹ ${amount.toLocaleString()}`;\r\n};\r\n\r\nconst CompanyCard = ({ company, onToggle, isExpanded, onUpdate }) => {\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"ongoing\":\r\n        return \"bg-blue-50 text-blue-700 border-blue-200\";\r\n      case \"completed\":\r\n        return \"bg-emerald-50 text-emerald-700 border-emerald-200\";\r\n      case \"upcoming\":\r\n        return \"bg-amber-50 text-amber-700 border-amber-200\";\r\n      default:\r\n        return \"bg-slate-50 text-slate-700 border-slate-200\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 overflow-hidden hover:shadow-md transition-shadow\">\r\n      <div\r\n        className=\"px-5 py-3 bg-gradient-to-r from-slate-50 to-white cursor-pointer hover:from-slate-100 hover:to-slate-50 transition-colors\"\r\n        onClick={() => onToggle(company.id)}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            {isExpanded ? (\r\n              <ChevronDown size={18} className=\"text-slate-600\" />\r\n            ) : (\r\n              <ChevronRight size={18} className=\"text-slate-600\" />\r\n            )}\r\n            <div>\r\n              <h3 className=\"text-base font-semibold text-slate-900\">\r\n                {company.company_name}\r\n              </h3>\r\n              <p className=\"text-xs text-slate-500 mt-0.5\">\r\n                {company.positions?.length || 0} positions\r\n              </p>\r\n            </div>\r\n            <span\r\n              className={`px-2.5 py-0.5 rounded-md text-xs font-medium border ${getStatusColor(company.status)}`}\r\n            >\r\n              {company.status?.charAt(0).toUpperCase() +\r\n                company.status?.slice(1)}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs text-slate-500\">Applications</p>\r\n              <p className=\"text-base font-semibold text-slate-900\">\r\n                {company.total_applications || 0}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && (\r\n        <div className=\"border-t border-slate-200\">\r\n          {company.positions?.map((position) => (\r\n            <PositionSection\r\n              key={position.id}\r\n              position={position}\r\n              companyName={company.company_name}\r\n              companyId={company.id}\r\n              onUpdate={onUpdate}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PositionSection = ({ position, companyName, companyId, onUpdate }) => {\r\n  const renderPackageInfo = () => {\r\n    switch (position.job_type) {\r\n      case \"internship\":\r\n        return position.internship_stipend_monthly > 0 ? (\r\n          <span className=\"text-xs text-slate-600\">\r\n            {formatPackage(position.internship_stipend_monthly)}/month\r\n          </span>\r\n        ) : (\r\n          <span className=\"text-xs text-slate-600\">Stipend not disclosed</span>\r\n        );\r\n\r\n      case \"full_time\":\r\n        return (\r\n          <span className=\"text-xs text-slate-600\">\r\n            {formatPackage(position.package_range)}\r\n          </span>\r\n        );\r\n\r\n      case \"internship_plus_ppo\":\r\n        return (\r\n          <>\r\n            <span className=\"text-xs text-slate-600\">\r\n              {position.internship_stipend_monthly > 0\r\n                ? `${formatPackage(position.internship_stipend_monthly)}/month stipend`\r\n                : \"Stipend not disclosed\"}\r\n            </span>\r\n            <span className=\"text-xs text-slate-400\">•</span>\r\n            <span className=\"text-xs text-slate-600\">\r\n              PPO: {formatPackage(position.package_range)}\r\n            </span>\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-b border-slate-100 last:border-b-0\">\r\n      <div className=\"px-5 py-3 bg-blue-50/50\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h4 className=\"text-sm font-semibold text-slate-900\">\r\n              {position.position_title}\r\n            </h4>\r\n            <div className=\"flex items-center space-x-3 mt-1\">\r\n              {renderPackageInfo()}\r\n              <span className=\"text-xs text-slate-400\">•</span>\r\n              <span className=\"text-xs text-slate-600\">\r\n                {position.job_type?.replace(/_/g, \" \").toUpperCase()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <p className=\"text-xs text-slate-500\">Selected</p>\r\n            <p className=\"text-base font-semibold text-emerald-600\">\r\n              {position.selected_students || 0}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {position.events && position.events.length > 0 ? (\r\n        <RoundsTable\r\n          events={position.events}\r\n          positionId={position.id}\r\n          companyName={companyName}\r\n          companyId={companyId}\r\n          positionTitle={position.position_title}\r\n          onUpdate={onUpdate}\r\n        />\r\n      ) : (\r\n        <div className=\"px-5 py-6 text-center text-slate-500\">\r\n          <Calendar size={32} className=\"mx-auto mb-2 text-slate-300\" />\r\n          <p className=\"text-sm\">No rounds scheduled yet</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3678, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/round-tracking/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Search, Calendar, ArrowLeft } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport { useBatchContext } from \"../../context/BatchContext\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nimport StatsCards from \"./StatsCards\";\r\nimport CompanyCard from \"./CompanyCard\";\r\n\r\nconst FilterBar = ({ filters, onFiltersChange }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\r\n      <div className=\"flex flex-col lg:flex-row gap-4\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search companies or positions...\"\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              value={filters.search}\r\n              onChange={(e) =>\r\n                onFiltersChange({ ...filters, search: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"lg:w-48\">\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            value={filters.status}\r\n            onChange={(e) =>\r\n              onFiltersChange({ ...filters, status: e.target.value })\r\n            }\r\n          >\r\n            <option value=\"all\">All Status</option>\r\n            <option value=\"upcoming\">Upcoming</option>\r\n            <option value=\"ongoing\">Ongoing</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"lg:w-48\">\r\n          <select\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            value={filters.jobType}\r\n            onChange={(e) =>\r\n              onFiltersChange({ ...filters, jobType: e.target.value })\r\n            }\r\n          >\r\n            <option value=\"all\">All Job Types</option>\r\n            <option value=\"internship\">Internship</option>\r\n            <option value=\"full_time\">Full Time</option>\r\n            <option value=\"internship_plus_ppo\">Internship + PPO</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Component\r\nconst RoundTrackingPage = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedCompanies, setExpandedCompanies] = useState(new Set());\r\n  const { selectedBatch } = useBatchContext();\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    status: \"all\",\r\n    jobType: \"all\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Fixed: Use hyphen instead of underscore\r\n      const { data } = await axios.get(\r\n        `${backendUrl}/round-tracking/companies/${selectedBatch}`\r\n      );\r\n\r\n      const transformedCompanies = data.companies.map((company) => {\r\n        // Calculate total applications for this company\r\n        const totalApplications = company.positions.reduce((sum, position) => {\r\n          const firstRoundEvent = position.events.find(\r\n            (e) => e.round_number === 1\r\n          );\r\n          return sum + (firstRoundEvent?.applied_count || 0);\r\n        }, 0);\r\n\r\n        return {\r\n          id: company.id,\r\n          company_name: company.company_name,\r\n          is_marquee: company.is_marquee,\r\n          sector: company.sector,\r\n          total_applications: totalApplications,\r\n          // Calculate company status from position events\r\n          status: calculateCompanyStatus(company.positions),\r\n          positions: company.positions.map((position) => ({\r\n            id: position.id,\r\n            position_title: position.position_title,\r\n            job_type: position.job_type,\r\n            package_range: position.package_range,\r\n            internship_stipend_monthly: position.internship_stipend_monthly,\r\n            // Backend uses final_selected_count\r\n            selected_students: position.final_selected_count || 0,\r\n            events: position.events.map((event) => ({\r\n              id: event.id,\r\n              title: event.title,\r\n              event_date: event.event_date,\r\n              start_time: event.start_time,\r\n              end_time: event.end_time,\r\n              venue: event.venue,\r\n              mode: event.mode,\r\n              status: event.status,\r\n              round_number: event.round_number,\r\n              eligible_count: event.eligible_count,\r\n              applied_count: event.applied_count,\r\n              attended_count: event.attended_count,\r\n              qualified_count: event.qualified_count,\r\n              // Add defaults for fields that may not exist\r\n              description: event.description || \"\",\r\n              round_type: event.mode || \"offline\", // Use mode as round_type\r\n            })),\r\n          })),\r\n        };\r\n      });\r\n\r\n      setCompanies(transformedCompanies);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to calculate company status based on position events\r\n  const calculateCompanyStatus = (positions) => {\r\n    let hasUpcoming = false;\r\n    let hasOngoing = false;\r\n    let hasCompleted = false;\r\n\r\n    positions.forEach((position) => {\r\n      position.events.forEach((event) => {\r\n        switch (event.status) {\r\n          case \"upcoming\":\r\n            hasUpcoming = true;\r\n            break;\r\n          case \"ongoing\":\r\n            hasOngoing = true;\r\n            break;\r\n          case \"completed\":\r\n            hasCompleted = true;\r\n            break;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (hasOngoing) return \"ongoing\";\r\n    if (hasUpcoming) return \"upcoming\";\r\n    if (hasCompleted) return \"completed\";\r\n    return \"upcoming\"; // default status\r\n  };\r\n\r\n  const handleCompanyToggle = (companyId) => {\r\n    const newExpanded = new Set(expandedCompanies);\r\n    if (newExpanded.has(companyId)) {\r\n      newExpanded.delete(companyId);\r\n    } else {\r\n      newExpanded.add(companyId);\r\n    }\r\n    setExpandedCompanies(newExpanded);\r\n  };\r\n\r\n  const filteredCompanies = companies.filter((company) => {\r\n    const matchesSearch =\r\n      company.company_name\r\n        .toLowerCase()\r\n        .includes(filters.search.toLowerCase()) ||\r\n      company.positions?.some((pos) =>\r\n        pos.position_title.toLowerCase().includes(filters.search.toLowerCase())\r\n      );\r\n    const matchesStatus =\r\n      filters.status === \"all\" || company.status === filters.status;\r\n    const matchesJobType =\r\n      filters.jobType === \"all\" ||\r\n      company.positions?.some((pos) => pos.job_type === filters.jobType);\r\n\r\n    return matchesSearch && matchesStatus && matchesJobType;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading round data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\r\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-6 max-w-md w-full\">\r\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">\r\n            Error Loading Data\r\n          </h3>\r\n          <p className=\"text-red-600\">{error}</p>\r\n          <button\r\n            onClick={fetchData}\r\n            className=\"mt-4 px-4 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n      <div className=\"max-w-7xl mx-auto p-6\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            <div className=\"flex items-start gap-4\">\r\n              <button\r\n                onClick={() => window.history.back()}\r\n                className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              >\r\n                <ArrowLeft className=\"h-6 w-6 text-gray-600\" />\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  Round Tracking\r\n                </h1>\r\n                <p className=\"text-gray-600\">\r\n                  Monitor student progress through interview rounds\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <StatsCards />\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <FilterBar filters={filters} onFiltersChange={setFilters} />\r\n\r\n        {/* Companies List */}\r\n        <div className=\"space-y-4\">\r\n          {filteredCompanies.length > 0 ? (\r\n            filteredCompanies.map((company) => (\r\n              <CompanyCard\r\n                key={company.id}\r\n                company={company}\r\n                onToggle={handleCompanyToggle}\r\n                isExpanded={expandedCompanies.has(company.id)}\r\n                onUpdate={() => fetchData()}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\r\n              <Calendar size={48} className=\"mx-auto mb-4 text-gray-300\" />\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                No Companies Found\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {filters.search ||\r\n                filters.status !== \"all\" ||\r\n                filters.jobType !== \"all\"\r\n                  ? \"Try adjusting your filters to see more results.\"\r\n                  : \"No companies have scheduled rounds yet.\"}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundTrackingPage;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}