{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/students/page.js"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useState, useEffect } from 'react';\r\n// import { \r\n//   Users, \r\n//   UserCheck,\r\n//   UserX,\r\n//   Clock,\r\n//   Search,\r\n//   Download,\r\n//   Plus,\r\n//   Eye,\r\n//   Edit,\r\n//   Award,\r\n//   ArrowUpDown,\r\n//   MoreHorizontal,\r\n//   CheckCircle,\r\n//   XCircle,\r\n//   AlertCircle,\r\n// } from 'lucide-react';\r\n// import axios from 'axios';\r\n\r\n// export default function StudentManagement() {\r\n//   // State variables\r\n//   const [students, setStudents] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('all');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedBranch, setSelectedBranch] = useState('all');\r\n//   const [selectedBatch, setSelectedBatch] = useState('all');\r\n//   const [sortBy, setSortBy] = useState('name');\r\n//   const [sortOrder, setSortOrder] = useState('asc');\r\n\r\n//   // Fetch students data\r\n//   useEffect(() => {\r\n//     const fetchStudents = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/students');\r\n//         setStudents(response.data);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchStudents();\r\n//   }, []); // Refetch when academic year changes\r\n\r\n//   // Helper function to format student name\r\n//   const formatStudentName = (student) => {\r\n//     return `${student.first_name} ${student.last_name}`;\r\n//   };\r\n\r\n//   const getStatistics = () => {\r\n//     const totalStudents = students.length;\r\n//     const placedStudents = students.filter(s => s.placement_status === 'placed').length;\r\n//     const unplacedStudents = students.filter(s => s.placement_status === 'unplaced').length;\r\n//     const eligibleStudents = students.filter(s => s.placement_status === 'eligible').length;\r\n//     const notInterestedStudents = students.filter(s => \r\n//       ['not_interested', 'higher_studies', 'entrepreneurship'].includes(s.placement_status)\r\n//     ).length;\r\n\r\n//     const placementPercentage = totalStudents ? \r\n//       ((placedStudents / totalStudents) * 100).toFixed(1) : 0;\r\n\r\n//     const avgPackage = students\r\n//       .filter(s => s.current_offer && s.current_offer.package)\r\n//       .reduce((acc, s) => acc + (s.current_offer.package/100000), 0) / \r\n//       students.filter(s => s.current_offer).length || 0;\r\n\r\n//     return {\r\n//       totalStudents,\r\n//       placedStudents,\r\n//       eligibleStudents,\r\n//       unplacedStudents,\r\n//       notInterestedStudents,\r\n//       placementPercentage,\r\n//       avgPackage: avgPackage.toFixed(1),\r\n//       // highestPackage: highestPackage.toFixed(1)\r\n//     };\r\n//   };\r\n\r\n//   const stats = getStatistics();\r\n\r\n//   const getFilteredStudents = () => {\r\n//     let filtered = [...students];\r\n\r\n//     if (selectedCategory !== 'all') {\r\n//       filtered = filtered.filter(student => student.placement_status === selectedCategory);\r\n//     }\r\n\r\n//     if (selectedBranch !== 'all') {\r\n//       filtered = filtered.filter(student => student.branch === selectedBranch);\r\n//     }\r\n\r\n//     if (selectedBatch !== 'all') {\r\n//       filtered = filtered.filter(student => student.batch_year.toString() === selectedBatch);\r\n//     }\r\n\r\n//     if (searchTerm) {\r\n//       filtered = filtered.filter(student => \r\n//         formatStudentName(student).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         student.registration_number?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//         student.college_email?.toLowerCase().includes(searchTerm.toLowerCase())\r\n//       );\r\n//     }\r\n\r\n//     // Sorting logic\r\n//     filtered.sort((a, b) => {\r\n//       let aValue, bValue;\r\n      \r\n//       switch (sortBy) {\r\n//         case 'name':\r\n//           aValue = formatStudentName(a);\r\n//           bValue = formatStudentName(b);\r\n//           break;\r\n//         case 'rollNo':\r\n//           aValue = a.registration_number || '';\r\n//           bValue = b.registration_number || '';\r\n//           break;\r\n//         case 'cgpa':\r\n//           aValue = a.cgpa || 0;\r\n//           bValue = b.cgpa || 0;\r\n//           break;\r\n//         case 'package':\r\n//           aValue = (a.current_offer?.package || 0)/100000;\r\n//           bValue = (b.current_offer?.package || 0)/100000;\r\n//           break;\r\n//         default:\r\n//           aValue = formatStudentName(a);\r\n//           bValue = formatStudentName(b);\r\n//       }\r\n\r\n//       return sortOrder === 'asc' ? \r\n//         (aValue > bValue ? 1 : -1) : \r\n//         (aValue < bValue ? 1 : -1);\r\n//     });\r\n\r\n//     return filtered;\r\n//   };\r\n\r\n//   const getStatusIcon = (status) => {\r\n//     switch(status) {\r\n//       case 'placed':\r\n//         return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n//       case 'multiple-offers':\r\n//         return <Award className=\"h-4 w-4 text-purple-600\" />;\r\n//       case 'in-process':\r\n//         return <Clock className=\"h-4 w-4 text-blue-600\" />;\r\n//       case 'unplaced':\r\n//         return <XCircle className=\"h-4 w-4 text-red-600\" />;\r\n//       case 'ineligible':\r\n//         return <AlertCircle className=\"h-4 w-4 text-orange-600\" />;\r\n//       default:\r\n//         return <Users className=\"h-4 w-4 text-gray-600\" />;\r\n//     }\r\n//   };\r\n\r\n//   const getStatusColor = (status) => {\r\n//     switch(status) {\r\n//       case 'placed': return 'bg-green-100 text-green-800';\r\n//       case 'multiple-offers': return 'bg-purple-100 text-purple-800';\r\n//       case 'in-process': return 'bg-blue-100 text-blue-800';\r\n//       case 'unplaced': return 'bg-red-100 text-red-800';\r\n//       case 'ineligible': return 'bg-orange-100 text-orange-800';\r\n//       default: return 'bg-gray-100 text-gray-800';\r\n//     }\r\n//   };\r\n\r\n//   const getCategoryFromPackage = (packageAmount) => {\r\n//     if (!packageAmount) return 'N/A';\r\n//     if (packageAmount >= 20) return 'Super Dream';\r\n//     if (packageAmount >= 10) return 'Dream';\r\n//     if (packageAmount >= 7) return 'Day 1';\r\n//     if (packageAmount >= 4) return 'Day 2';\r\n//     return 'Pool Campus';\r\n//   };\r\n\r\n//   const filteredStudents = getFilteredStudents();\r\n//   const branches = [...new Set(students.map(s => s.branch))];\r\n//   const batches = [...new Set(students.map(s => s.batch))];\r\n\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 p-6\">\r\n//       <div className=\"max-w-7xl mx-auto space-y-6\">\r\n//         {/* Header */}\r\n//         <div className=\"flex justify-between items-center\">\r\n//           <div>\r\n//             <div className=\"flex items-center gap-4\">\r\n//               <h1 className=\"text-3xl font-bold text-gray-800\">Student Management</h1>\r\n//             </div>\r\n//             <p className=\"text-gray-600 mt-1\">\r\n//               Manage and categorize students based on placement status and college rules\r\n//             </p>\r\n//           </div>\r\n//           <div className=\"flex space-x-3\">\r\n//             <button className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center space-x-2\">\r\n//               <Download className=\"h-4 w-4\" />\r\n//               <span>Export Data</span>\r\n//             </button>\r\n//             <button className=\"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 flex items-center space-x-2\">\r\n//               <Plus className=\"h-4 w-4\" />\r\n//               <span>Import Data</span>\r\n//             </button>\r\n//             <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n//               <Plus className=\"h-4 w-4\" />\r\n//               <span>Add Student</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Statistics Cards */}\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\">\r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">Total Students</p>\r\n//                 <p className=\"text-2xl font-bold text-gray-900\">{stats.totalStudents}</p>\r\n//               </div>\r\n//               <Users className=\"h-8 w-8 text-blue-600\" />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">Total Interested</p>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">(for Placement)</p>\r\n//                 <p className=\"text-2xl font-bold text-gray-900\">{stats.totalStudents-2}</p>\r\n//               </div>\r\n//               <Users className=\"h-8 w-8 text-blue-600\" />\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">Placed</p>\r\n//                 <p className=\"text-2xl font-bold text-green-600\">{stats.placedStudents}</p>\r\n//                 <p className=\"text-xs text-green-600\">{stats.placementPercentage}%</p>\r\n//               </div>\r\n//               <UserCheck className=\"h-8 w-8 text-green-600\" />\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">In Process</p>\r\n//                 <p className=\"text-2xl font-bold text-blue-600\">{stats.inProcessStudents}</p>\r\n//               </div>\r\n//               <Clock className=\"h-8 w-8 text-blue-600\" />\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">Unplaced</p>\r\n//                 <p className=\"text-2xl font-bold text-red-600\">{stats.unplacedStudents}</p>\r\n//               </div>\r\n//               <UserX className=\"h-8 w-8 text-red-600\" />\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//             <div className=\"flex items-center justify-between\">\r\n//               <div>\r\n//                 <p className=\"text-sm font-medium text-gray-600\">Avg CTC</p>\r\n//                 <p className=\"text-xl font-bold text-purple-600\">{stats.avgPackage} LPA</p>\r\n//                 {/* <p className=\"text-xs text-gray-500\">Highest: {stats.highestPackage} LPA</p> // TODO */}\r\n//                 <p className=\"text-xs text-gray-500\">Medium: 12 LPA</p>\r\n//                 <p className=\"text-xs text-gray-500\">Lowest: 6 LPA</p>\r\n//               </div>\r\n//               <Award className=\"h-8 w-8 text-purple-600\" />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Category Filters */}\r\n//         <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n//           <div className=\"flex flex-wrap items-center gap-4\">\r\n//             <div className=\"flex items-center space-x-2\">\r\n//               <span className=\"text-sm font-medium text-gray-700\">Category:</span>\r\n//               <div className=\"flex space-x-2\">\r\n//                 {[\r\n//                   { key: 'all', label: 'All Students', count: stats.totalStudents },\r\n//                   { key: 'placed', label: 'Placed', count: stats.placedStudents },\r\n//                   { key: 'multiple-offers', label: 'Multiple Offers', count: students.filter(s => s.status === 'multiple-offers').length },\r\n//                   { key: 'in-process', label: 'In Process', count: stats.inProcessStudents },\r\n//                   { key: 'unplaced', label: 'Unplaced', count: stats.unplacedStudents },\r\n//                   { key: 'ineligible', label: 'Ineligible', count: stats.ineligibleStudents }\r\n//                 ].map((category) => (\r\n//                   <button\r\n//                     key={category.key}\r\n//                     onClick={() => setSelectedCategory(category.key)}\r\n//                     className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n//                       selectedCategory === category.key\r\n//                         ? 'bg-blue-100 text-blue-700 border border-blue-200'\r\n//                         : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n//                     }`}\r\n//                   >\r\n//                     {category.label} ({category.count})\r\n//                   </button>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Search and Filters */}\r\n//         <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n//           <div className=\"flex flex-wrap gap-4 items-center\">\r\n//             <div className=\"flex-1 min-w-64\">\r\n//               <div className=\"relative\">\r\n//                 <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Search by name, roll number, email, or company...\"\r\n//                   value={searchTerm}\r\n//                   onChange={(e) => setSearchTerm(e.target.value)}\r\n//                   className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <select \r\n//               value={selectedBranch} \r\n//               onChange={(e) => setSelectedBranch(e.target.value)}\r\n//               className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n//            >\r\n//               <option value=\"all\">All Branches</option>\r\n//               {branches.map(branch => (\r\n//                 <option key={branch} value={branch}>{branch}</option>\r\n//               ))}\r\n//             </select>\r\n            \r\n//             <select \r\n//               value={selectedBatch} \r\n//               onChange={(e) => setSelectedBatch(e.target.value)}\r\n//               className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n//             >\r\n//               <option value=\"all\">All Batches</option>\r\n//               {batches.map(batch => (\r\n//                 <option key={batch} value={batch}>{batch}</option>\r\n//               ))}\r\n//             </select>\r\n            \r\n//             <select \r\n//               value={sortBy} \r\n//               onChange={(e) => setSortBy(e.target.value)}\r\n//               className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n//             >\r\n//               <option value=\"name\">Sort by Name</option>\r\n//               <option value=\"rollNo\">Sort by Roll No</option>\r\n//               <option value=\"cgpa\">Sort by CGPA</option>\r\n//               <option value=\"package\">Sort by Package</option>\r\n//             </select>\r\n            \r\n//             <button\r\n//               onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center space-x-1\"\r\n//             >\r\n//               <ArrowUpDown className=\"h-4 w-4\" />\r\n//               <span className=\"text-sm\">{sortOrder === 'asc' ? 'ASC' : 'DESC'}</span>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { \r\n  Users, \r\n  UserCheck,\r\n  UserX,\r\n  Clock,\r\n  Search,\r\n  Download,\r\n  Plus,\r\n  Eye,\r\n  Edit,\r\n  Award,\r\n  ArrowUpDown,\r\n  MoreHorizontal,\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertCircle,\r\n  X,\r\n  FileSpreadsheet\r\n} from 'lucide-react';\r\n\r\nexport default function StudentManagement() {\r\n  // State variables\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedBranch, setSelectedBranch] = useState('all');\r\n  const [selectedBatch, setSelectedBatch] = useState('all');\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [showExportModal, setShowExportModal] = useState(false);\r\n  const [selectedColumns, setSelectedColumns] = useState({});\r\n\r\n  // Available columns for export (excluding id, user_id, student_id, created_at, updated_at)\r\n  const exportableColumns = [\r\n    { key: 'first_name', label: 'First Name', category: 'Personal' },\r\n    { key: 'last_name', label: 'Last Name', category: 'Personal' },\r\n    { key: 'registration_number', label: 'Registration Number', category: 'Academic' },\r\n    { key: 'college_email', label: 'College Email', category: 'Contact' },\r\n    { key: 'personal_email', label: 'Personal Email', category: 'Contact' },\r\n    { key: 'phone', label: 'Phone Number', category: 'Contact' },\r\n    { key: 'alternate_phone', label: 'Alternate Phone', category: 'Contact' },\r\n    { key: 'department', label: 'Department', category: 'Academic' },\r\n    { key: 'branch', label: 'Branch', category: 'Academic' },\r\n    { key: 'batch_year', label: 'Batch Year', category: 'Academic' },\r\n    { key: 'cgpa', label: 'CGPA', category: 'Academic' },\r\n    { key: 'backlogs', label: 'Backlogs', category: 'Academic' },\r\n    { key: 'class_10_percentage', label: '10th Percentage', category: 'Academic' },\r\n    { key: 'class_12_percentage', label: '12th Percentage', category: 'Academic' },\r\n    { key: 'placement_status', label: 'Placement Status', category: 'Placement' },\r\n    { key: 'current_company', label: 'Current Company', category: 'Placement' },\r\n    { key: 'current_package', label: 'Current Package (LPA)', category: 'Placement' },\r\n    { key: 'total_offers', label: 'Total Offers', category: 'Placement' },\r\n    { key: 'drives_attended', label: 'Drives Attended', category: 'Placement' },\r\n    { key: 'drives_skipped', label: 'Drives Skipped', category: 'Placement' }\r\n  ];\r\n\r\n  // Sample data for demonstration\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const sampleData = [\r\n      {\r\n        id: 1,\r\n        first_name: 'John',\r\n        last_name: 'Doe',\r\n        registration_number: '2021001',\r\n        college_email: 'john.doe@college.edu',\r\n        personal_email: 'john@gmail.com',\r\n        phone: '9876543210',\r\n        alternate_phone: '9876543211',\r\n        department: 'Computer Science',\r\n        branch: 'CSE',\r\n        batch_year: 2025,\r\n        cgpa: 8.5,\r\n        backlogs: 0,\r\n        class_10_percentage: 85.5,\r\n        class_12_percentage: 88.2,\r\n        placement_status: 'placed',\r\n        current_offer: {\r\n          company_name: 'TechCorp',\r\n          package: 1200000\r\n        },\r\n        offers_received: [\r\n          { company_name: 'TechCorp', package: 1200000 },\r\n          { company_name: 'InfoSys', package: 800000 }\r\n        ],\r\n        drives_skipped: 0\r\n      },\r\n      {\r\n        id: 2,\r\n        first_name: 'Jane',\r\n        last_name: 'Smith',\r\n        registration_number: '2021002',\r\n        college_email: 'jane.smith@college.edu',\r\n        personal_email: 'jane@gmail.com',\r\n        phone: '9876543212',\r\n        department: 'Information Technology',\r\n        branch: 'IT',\r\n        batch_year: 2025,\r\n        cgpa: 9.2,\r\n        backlogs: 0,\r\n        class_10_percentage: 92.0,\r\n        class_12_percentage: 89.5,\r\n        placement_status: 'unplaced',\r\n        offers_received: [],\r\n        drives_skipped: 2\r\n      }\r\n    ];\r\n    setStudents(sampleData);\r\n\r\n    // Initialize all columns as selected by default\r\n    const initialSelection = {};\r\n    exportableColumns.forEach(col => {\r\n      initialSelection[col.key] = true;\r\n    });\r\n    setSelectedColumns(initialSelection);\r\n  }, []);\r\n\r\n  // Helper function to format student name\r\n  const formatStudentName = (student) => {\r\n    return `${student.first_name} ${student.last_name}`;\r\n  };\r\n\r\n  const getStatistics = () => {\r\n    const totalStudents = students.length;\r\n    const placedStudents = students.filter(s => s.placement_status === 'placed').length;\r\n    const unplacedStudents = students.filter(s => s.placement_status === 'unplaced').length;\r\n    const eligibleStudents = students.filter(s => s.placement_status === 'eligible').length;\r\n    const inProcessStudents = students.filter(s => s.placement_status === 'in-process').length;\r\n    const ineligibleStudents = students.filter(s => s.placement_status === 'ineligible').length;\r\n    const notInterestedStudents = students.filter(s => \r\n      ['not_interested', 'higher_studies', 'entrepreneurship'].includes(s.placement_status)\r\n    ).length;\r\n\r\n    const placementPercentage = totalStudents ? \r\n      ((placedStudents / totalStudents) * 100).toFixed(1) : 0;\r\n\r\n    const avgPackage = students\r\n      .filter(s => s.current_offer && s.current_offer.package)\r\n      .reduce((acc, s) => acc + (s.current_offer.package/100000), 0) / \r\n      students.filter(s => s.current_offer).length || 0;\r\n\r\n    return {\r\n      totalStudents,\r\n      placedStudents,\r\n      eligibleStudents,\r\n      unplacedStudents,\r\n      inProcessStudents,\r\n      ineligibleStudents,\r\n      notInterestedStudents,\r\n      placementPercentage,\r\n      avgPackage: avgPackage.toFixed(1),\r\n    };\r\n  };\r\n\r\n  const stats = getStatistics();\r\n\r\n  const getFilteredStudents = () => {\r\n    let filtered = [...students];\r\n\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(student => student.placement_status === selectedCategory);\r\n    }\r\n\r\n    if (selectedBranch !== 'all') {\r\n      filtered = filtered.filter(student => student.branch === selectedBranch);\r\n    }\r\n\r\n    if (selectedBatch !== 'all') {\r\n      filtered = filtered.filter(student => student.batch_year.toString() === selectedBatch);\r\n    }\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(student => \r\n        formatStudentName(student).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        student.registration_number?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        student.college_email?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Sorting logic\r\n    filtered.sort((a, b) => {\r\n      let aValue, bValue;\r\n      \r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = formatStudentName(a);\r\n          bValue = formatStudentName(b);\r\n          break;\r\n        case 'rollNo':\r\n          aValue = a.registration_number || '';\r\n          bValue = b.registration_number || '';\r\n          break;\r\n        case 'cgpa':\r\n          aValue = a.cgpa || 0;\r\n          bValue = b.cgpa || 0;\r\n          break;\r\n        case 'package':\r\n          aValue = (a.current_offer?.package || 0)/100000;\r\n          bValue = (b.current_offer?.package || 0)/100000;\r\n          break;\r\n        default:\r\n          aValue = formatStudentName(a);\r\n          bValue = formatStudentName(b);\r\n      }\r\n\r\n      return sortOrder === 'asc' ? \r\n        (aValue > bValue ? 1 : -1) : \r\n        (aValue < bValue ? 1 : -1);\r\n    });\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const filteredData = getFilteredStudents();\r\n    const selectedColumnKeys = Object.keys(selectedColumns).filter(key => selectedColumns[key]);\r\n    \r\n    if (selectedColumnKeys.length === 0) {\r\n      alert('Please select at least one column to export.');\r\n      return;\r\n    }\r\n\r\n    // Prepare data for export\r\n    const exportData = filteredData.map(student => {\r\n      const row = {};\r\n      selectedColumnKeys.forEach(key => {\r\n        switch (key) {\r\n          case 'current_company':\r\n            row[key] = student.current_offer?.company_name || 'N/A';\r\n            break;\r\n          case 'current_package':\r\n            row[key] = student.current_offer?.package ? (student.current_offer.package / 100000).toFixed(1) : 'N/A';\r\n            break;\r\n          case 'total_offers':\r\n            row[key] = student.offers_received?.length || 0;\r\n            break;\r\n          case 'drives_attended':\r\n            row[key] = (student.drives_attended || 0);\r\n            break;\r\n          case 'cgpa':\r\n            row[key] = student.cgpa !== undefined && student.cgpa !== null \r\n              ? Number(student.cgpa).toFixed(2) \r\n              : 'N/A';\r\n            break;\r\n          default:\r\n            row[key] = student[key] || 'N/A';\r\n        }\r\n      });\r\n      return row;\r\n    });\r\n\r\n    // Create CSV content\r\n    const headers = selectedColumnKeys.map(key => \r\n      exportableColumns.find(col => col.key === key)?.label || key\r\n    );\r\n    \r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...exportData.map(row => \r\n        selectedColumnKeys.map(key => {\r\n          const value = row[key];\r\n          // Wrap in quotes if contains comma or quotes\r\n          return typeof value === 'string' && (value.includes(',') || value.includes('\"')) \r\n            ? `\"${value.replace(/\"/g, '\"\"')}\"` \r\n            : value;\r\n        }).join(',')\r\n      )\r\n    ].join('\\n');\r\n\r\n    // Download file\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `students_export_${new Date().toISOString().split('T')[0]}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    \r\n    setShowExportModal(false);\r\n  };\r\n\r\n  const handleColumnToggle = (columnKey) => {\r\n    setSelectedColumns(prev => ({\r\n      ...prev,\r\n      [columnKey]: !prev[columnKey]\r\n    }));\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    const allSelected = exportableColumns.every(col => selectedColumns[col.key]);\r\n    const newSelection = {};\r\n    exportableColumns.forEach(col => {\r\n      newSelection[col.key] = !allSelected;\r\n    });\r\n    setSelectedColumns(newSelection);\r\n  };\r\n\r\n  const handleSelectByCategory = (category) => {\r\n    const categoryColumns = exportableColumns.filter(col => col.category === category);\r\n    const allCategorySelected = categoryColumns.every(col => selectedColumns[col.key]);\r\n    \r\n    setSelectedColumns(prev => {\r\n      const newSelection = { ...prev };\r\n      categoryColumns.forEach(col => {\r\n        newSelection[col.key] = !allCategorySelected;\r\n      });\r\n      return newSelection;\r\n    });\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch(status) {\r\n      case 'placed':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'multiple-offers':\r\n        return <Award className=\"h-4 w-4 text-purple-600\" />;\r\n      case 'in-process':\r\n        return <Clock className=\"h-4 w-4 text-blue-600\" />;\r\n      case 'unplaced':\r\n        return <XCircle className=\"h-4 w-4 text-red-600\" />;\r\n      case 'ineligible':\r\n        return <AlertCircle className=\"h-4 w-4 text-orange-600\" />;\r\n      default:\r\n        return <Users className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch(status) {\r\n      case 'placed': return 'bg-green-100 text-green-800';\r\n      case 'multiple-offers': return 'bg-purple-100 text-purple-800';\r\n      case 'in-process': return 'bg-blue-100 text-blue-800';\r\n      case 'unplaced': return 'bg-red-100 text-red-800';\r\n      case 'ineligible': return 'bg-orange-100 text-orange-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const filteredStudents = getFilteredStudents();\r\n  const branches = [...new Set(students.map(s => s.branch))];\r\n  const batches = [...new Set(students.map(s => s.batch_year))];\r\n  const categories = [...new Set(exportableColumns.map(col => col.category))];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <div>\r\n            <div className=\"flex items-center gap-4\">\r\n              <h1 className=\"text-3xl font-bold text-gray-800\">Student Management</h1>\r\n            </div>\r\n            <p className=\"text-gray-600 mt-1\">\r\n              Manage and categorize students based on placement status and college rules\r\n            </p>\r\n          </div>\r\n          <div className=\"flex space-x-3\">\r\n            <button \r\n              onClick={() => setShowExportModal(true)}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center space-x-2\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>Export Data</span>\r\n            </button>\r\n            <button className=\"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 flex items-center space-x-2\">\r\n              <Plus className=\"h-4 w-4\" />\r\n              <span>Import Data</span>\r\n            </button>\r\n            <button className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-2\">\r\n              <Plus className=\"h-4 w-4\" />\r\n              <span>Add Student</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Export Modal */}\r\n        {showExportModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-2\">\r\n                  <FileSpreadsheet className=\"h-6 w-6\" />\r\n                  Export Student Data\r\n                </h2>\r\n                <button\r\n                  onClick={() => setShowExportModal(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-gray-600 mb-2\">\r\n                  Exporting {filteredStudents.length} student(s) based on current filters.\r\n                </p>\r\n                <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                  <button\r\n                    onClick={handleSelectAll}\r\n                    className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-md text-sm hover:bg-blue-200\"\r\n                  >\r\n                    {exportableColumns.every(col => selectedColumns[col.key]) ? 'Deselect All' : 'Select All'}\r\n                  </button>\r\n                  {categories.map(category => (\r\n                    <button\r\n                      key={category}\r\n                      onClick={() => handleSelectByCategory(category)}\r\n                      className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-md text-sm hover:bg-gray-200\"\r\n                    >\r\n                      {category} ({exportableColumns.filter(col => col.category === category && selectedColumns[col.key]).length}/{exportableColumns.filter(col => col.category === category).length})\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-6\">\r\n                {categories.map(category => (\r\n                  <div key={category} className=\"border rounded-lg p-4\">\r\n                    <h3 className=\"font-semibold text-gray-800 mb-3 flex items-center justify-between\">\r\n                      {category}\r\n                      <span className=\"text-sm text-gray-500\">\r\n                        {exportableColumns.filter(col => col.category === category && selectedColumns[col.key]).length}/\r\n                        {exportableColumns.filter(col => col.category === category).length}\r\n                      </span>\r\n                    </h3>\r\n                    <div className=\"space-y-2\">\r\n                      {exportableColumns\r\n                        .filter(col => col.category === category)\r\n                        .map(column => (\r\n                          <label key={column.key} className=\"flex items-center space-x-2 cursor-pointer\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={selectedColumns[column.key] || false}\r\n                              onChange={() => handleColumnToggle(column.key)}\r\n                              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                            />\r\n                            <span className=\"text-sm text-gray-700\">{column.label}</span>\r\n                          </label>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3 pt-4 border-t\">\r\n                <button\r\n                  onClick={() => setShowExportModal(false)}\r\n                  className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleExport}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center space-x-2\"\r\n                  disabled={Object.values(selectedColumns).every(v => !v)}\r\n                >\r\n                  <Download className=\"h-4 w-4\" />\r\n                  <span>Export CSV ({Object.values(selectedColumns).filter(v => v).length} columns)</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Statistics Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Students</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalStudents}</p>\r\n              </div>\r\n              <Users className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Interested</p>\r\n                <p className=\"text-sm font-medium text-gray-600\">(for Placement)</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalStudents-2}</p>\r\n              </div>\r\n              <Users className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Placed</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">{stats.placedStudents}</p>\r\n                <p className=\"text-xs text-green-600\">{stats.placementPercentage}%</p>\r\n              </div>\r\n              <UserCheck className=\"h-8 w-8 text-green-600\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">In Process</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.inProcessStudents}</p>\r\n              </div>\r\n              <Clock className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Unplaced</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">{stats.unplacedStudents}</p>\r\n              </div>\r\n              <UserX className=\"h-8 w-8 text-red-600\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Avg CTC</p>\r\n                <p className=\"text-xl font-bold text-purple-600\">{stats.avgPackage} LPA</p>\r\n                <p className=\"text-xs text-gray-500\">Medium: 12 LPA</p>\r\n                <p className=\"text-xs text-gray-500\">Lowest: 6 LPA</p>\r\n              </div>\r\n              <Award className=\"h-8 w-8 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Category Filters */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex flex-wrap items-center gap-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-sm font-medium text-gray-700\">Category:</span>\r\n              <div className=\"flex space-x-2\">\r\n                {[\r\n                  { key: 'all', label: 'All Students', count: stats.totalStudents },\r\n                  { key: 'placed', label: 'Placed', count: stats.placedStudents },\r\n                  { key: 'multiple-offers', label: 'Multiple Offers', count: students.filter(s => s.status === 'multiple-offers').length },\r\n                  { key: 'in-process', label: 'In Process', count: stats.inProcessStudents },\r\n                  { key: 'unplaced', label: 'Unplaced', count: stats.unplacedStudents },\r\n                  { key: 'ineligible', label: 'Ineligible', count: stats.ineligibleStudents }\r\n                ].map((category) => (\r\n                  <button\r\n                    key={category.key}\r\n                    onClick={() => setSelectedCategory(category.key)}\r\n                    className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n                      selectedCategory === category.key\r\n                        ? 'bg-blue-100 text-blue-700 border border-blue-200'\r\n                        : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                    }`}\r\n                  >\r\n                    {category.label} ({category.count})\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border\">\r\n          <div className=\"flex flex-wrap gap-4 items-center\">\r\n            <div className=\"flex-1 min-w-64\">\r\n              <div className=\"relative\">\r\n                <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by name, roll number, email, or company...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <select \r\n              value={selectedBranch} \r\n              onChange={(e) => setSelectedBranch(e.target.value)}\r\n              className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n           >\r\n              <option value=\"all\">All Branches</option>\r\n              {branches.map(branch => (\r\n                <option key={branch} value={branch}>{branch}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <select \r\n              value={selectedBatch} \r\n              onChange={(e) => setSelectedBatch(e.target.value)}\r\n              className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"all\">All Batches</option>\r\n              {batches.map(batch => (\r\n                <option key={batch} value={batch}>{batch}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <select \r\n              value={sortBy} \r\n              onChange={(e) => setSortBy(e.target.value)}\r\n              className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"name\">Sort by Name</option>\r\n              <option value=\"rollNo\">Sort by Roll No</option>\r\n              <option value=\"cgpa\">Sort by CGPA</option>\r\n              <option value=\"package\">Sort by Package</option>\r\n            </select>\r\n            \r\n            <button\r\n              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center space-x-1\"\r\n            >\r\n              <ArrowUpDown className=\"h-4 w-4\" />\r\n              <span className=\"text-sm\">{sortOrder === 'asc' ? 'ASC' : 'DESC'}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Students Table */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    <input type=\"checkbox\" className=\"rounded\" />\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Student Details</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Academic Info</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact details</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Placement Details</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">BOARD MARKS</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredStudents.map((student) => {\r\n                  return (\r\n                    <tr key={student.id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <input type=\"checkbox\" className=\"rounded\" />\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {formatStudentName(student)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {student.registration_number}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-400\">\r\n                              {student.college_email}\r\n                            </div>\r\n                            <div className=\"text-xs text-gray-400\">\r\n                              {student.personal_email}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-900\">{student.department} { student.branch}</div>\r\n                          <div className=\"text-sm text-gray-500\">\r\n                            CGPA: {student.cgpa !== undefined && student.cgpa !== null \r\n                              ? Number(student.cgpa).toFixed(2) \r\n                              : 'N/A'}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-400\">\r\n                            Backlogs: {student.backlogs} | Batch: {student.batch_year}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm\">+91 {student.phone}</div>\r\n                        {student.alternate_phone && <div className=\"text-sm\">+91 {student.alternate_phone}</div>}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                          getStatusColor(student.placement_status)\r\n                        }`}>\r\n                          {student.placement_status.replace('_', ' ')}\r\n                        </div>\r\n                        {student.current_offer && (\r\n                          <div className=\"mt-1 text-sm text-gray-600\">\r\n                            {student.current_offer.company_name}\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        {student.offers_received?.length > 0 ? (\r\n                          <div>\r\n                            <div className=\"text-sm font-medium\">\r\n                              {student.offers_received.length} Offer(s)\r\n                            </div>\r\n                            {student.offers_received.slice(0, 2).map((offer, idx) => (\r\n                              <div key={idx} className=\"text-xs text-gray-500\">\r\n                                {offer.company_name} - {(offer.package/100000).toFixed(1)} LPA\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <span className=\"text-sm text-gray-400\">No offers yet</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm\">\r\n                          <div>10th: {student.class_10_percentage}%</div>\r\n                          <div>12th: {student.class_12_percentage}%</div>\r\n                          {student.drives_skipped > 0 && (\r\n                            <div className=\"text-red-500\">\r\n                              Drives Skipped: {student.drives_skipped}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <div className=\"flex space-x-2\">\r\n                          <button className=\"text-blue-600 hover:text-blue-900\">\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button className=\"text-green-600 hover:text-green-900\">\r\n                            <Edit className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button className=\"text-gray-600 hover:text-gray-900\">\r\n                            <MoreHorizontal className=\"h-4 w-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary */}\r\n        <div className=\"text-center text-sm text-gray-500\">\r\n          Showing {filteredStudents.length} of {students.length} students\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}