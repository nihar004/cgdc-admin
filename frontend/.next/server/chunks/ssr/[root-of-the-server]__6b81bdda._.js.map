{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy/soetcgdc/frontend/context/AuthContext.js"],"sourcesContent":["\"use client\";\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRouter, usePathname } from \"next/navigation\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  // Configure axios defaults\r\n  axios.defaults.baseURL = backendUrl;\r\n  axios.defaults.withCredentials = true;\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      // Only redirect if we're sure about the auth state\r\n      if (pathname === \"/auth\" && user) {\r\n        router.push(\"/\");\r\n      } else if (!user && pathname !== \"/auth\") {\r\n        router.push(\"/auth\");\r\n      }\r\n    }\r\n  }, [user, loading, pathname]);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/auth/me\");\r\n      if (data.success) {\r\n        setUser(data.user);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Auth check failed:\", error);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const { data } = await axios.post(\"/auth/login\", { username, password });\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        router.push(\"/\");\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || \"Login failed\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(\"/auth/logout\");\r\n      setUser(null);\r\n      router.push(\"/auth\");\r\n    } catch (error) {\r\n      console.error(\"Logout failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAHA;;;;;AAIA,MAAM;AAEN,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE,CAAC;AAE5B,SAAS,aAAa,EAAE,QAAQ,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,2BAA2B;IAC3B,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,GAAG;IACzB,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,eAAe,GAAG;IAEjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,SAAS;YACZ,mDAAmD;YACnD,IAAI,aAAa,WAAW,MAAM;gBAChC,OAAO,IAAI,CAAC;YACd,OAAO,IAAI,CAAC,QAAQ,aAAa,SAAS;gBACxC,OAAO,IAAI,CAAC;YACd;QACF;IACF,GAAG;QAAC;QAAM;QAAS;KAAS;IAE5B,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YACjC,IAAI,KAAK,OAAO,EAAE;gBAChB,QAAQ,KAAK,IAAI;YACnB,OAAO;gBACL,QAAQ;YACV;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,QAAQ;QACV,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,QAAQ,OAAO,UAAU;QAC7B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,eAAe;gBAAE;gBAAU;YAAS;YACtE,IAAI,KAAK,OAAO,EAAE;gBAChB,QAAQ,KAAK,IAAI;gBACjB,OAAO,IAAI,CAAC;gBACZ,OAAO;oBAAE,SAAS;gBAAK;YACzB;QACF,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,SAAS;gBACT,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;YAC5C;QACF;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC;YACjB,QAAQ;YACR,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kBAAkB;QAClC;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;QAAO;kBACzD;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/deploy/soetcgdc/frontend/context/BatchContext.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst BatchContext = createContext();\r\n\r\nexport function BatchProvider({ children }) {\r\n  const [selectedBatch, setSelectedBatch] = useState(() => {\r\n    // Check if localStorage is available (client-side)\r\n    if (typeof window !== \"undefined\" && window.localStorage) {\r\n      const savedBatch = localStorage.getItem(\"selectedBatch\");\r\n      return savedBatch ? JSON.parse(savedBatch) : null;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const [batches, setBatches] = useState([]); // store all available batches\r\n\r\n  // Fetch batches only once when the app loads\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function fetchBatches() {\r\n      try {\r\n        const res = await axios.get(`${backendUrl}/batches`, {\r\n          signal: controller.signal,\r\n        });\r\n        const fetchedBatches = res.data;\r\n        setBatches(fetchedBatches);\r\n\r\n        // Check if localStorage is available before using it\r\n        if (typeof window !== \"undefined\" && window.localStorage) {\r\n          if (\r\n            !localStorage.getItem(\"selectedBatch\") &&\r\n            fetchedBatches.length > 0\r\n          ) {\r\n            setSelectedBatch(fetchedBatches[0]);\r\n          }\r\n        } else if (fetchedBatches.length > 0) {\r\n          // Fallback for SSR - just set the first batch\r\n          setSelectedBatch(fetchedBatches[0]);\r\n        }\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) return; // request was cancelled\r\n        console.error(\"Error fetching batches:\", error);\r\n      }\r\n    }\r\n    fetchBatches();\r\n    return () => controller.abort();\r\n  }, []);\r\n\r\n  // Whenever selectedBatch changes â†’ save to localStorage (client-side only)\r\n  useEffect(() => {\r\n    if (selectedBatch && typeof window !== \"undefined\" && window.localStorage) {\r\n      localStorage.setItem(\"selectedBatch\", JSON.stringify(selectedBatch));\r\n    }\r\n  }, [selectedBatch]);\r\n\r\n  const reloadBatches = async () => {\r\n    try {\r\n      const res = await axios.get(`${backendUrl}/batches`);\r\n      const fetchedBatches = res.data;\r\n      setBatches(fetchedBatches);\r\n\r\n      // If no batch is selected and we have batches, select the first one\r\n      if (!selectedBatch && fetchedBatches.length > 0) {\r\n        setSelectedBatch(fetchedBatches[0].year);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching batches:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BatchContext.Provider\r\n      value={{ selectedBatch, setSelectedBatch, batches, reloadBatches }}\r\n    >\r\n      {children}\r\n    </BatchContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useBatchContext = () => {\r\n  const context = useContext(BatchContext);\r\n  if (!context) {\r\n    throw new Error(\"useBatchContext must be used within a BatchProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAIA,MAAM;AAEN,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AAE1B,SAAS,cAAc,EAAE,QAAQ,EAAE;IACxC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,mDAAmD;QACnD;;QAIA,OAAO;IACT;IAEA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,GAAG,8BAA8B;IAE1E,6CAA6C;IAC7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,IAAI;QACvB,eAAe;YACb,IAAI;gBACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,QAAQ,CAAC,EAAE;oBACnD,QAAQ,WAAW,MAAM;gBAC3B;gBACA,MAAM,iBAAiB,IAAI,IAAI;gBAC/B,WAAW;gBAEX,qDAAqD;gBACrD;;qBAOO,IAAI,eAAe,MAAM,GAAG,GAAG;oBACpC,8CAA8C;oBAC9C,iBAAiB,cAAc,CAAC,EAAE;gBACpC;YACF,EAAE,OAAO,OAAO;gBACd,IAAI,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,QAAQ,QAAQ,wBAAwB;gBAC3D,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QACF;QACA;QACA,OAAO,IAAM,WAAW,KAAK;IAC/B,GAAG,EAAE;IAEL,2EAA2E;IAC3E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;;IAGF,GAAG;QAAC;KAAc;IAElB,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,WAAW,QAAQ,CAAC;YACnD,MAAM,iBAAiB,IAAI,IAAI;YAC/B,WAAW;YAEX,oEAAoE;YACpE,IAAI,CAAC,iBAAiB,eAAe,MAAM,GAAG,GAAG;gBAC/C,iBAAiB,cAAc,CAAC,EAAE,CAAC,IAAI;YACzC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,qBACE,8OAAC,aAAa,QAAQ;QACpB,OAAO;YAAE;YAAe;YAAkB;YAAS;QAAc;kBAEhE;;;;;;AAGP;AAEO,MAAM,kBAAkB;IAC7B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}