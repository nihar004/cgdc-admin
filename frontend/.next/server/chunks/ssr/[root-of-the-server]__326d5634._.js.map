{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_6feb203d.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_6feb203d-module__8DQF1a__className\",\n  \"variable\": \"geist_6feb203d-module__8DQF1a__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_6feb203d.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.js%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_c7d183a.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_c7d183a-module__ZW1U4G__className\",\n  \"variable\": \"geist_mono_c7d183a-module__ZW1U4G__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_c7d183a.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.js%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,yJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,yJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/AuthContext.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AuthContext.js <module evaluation>\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AuthContext.js <module evaluation>\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wDACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wDACA","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/AuthContext.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AuthContext.js\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AuthContext.js\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oCACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oCACA","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/BatchContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BatchContext = createContext();\r\n\r\nexport function BatchProvider({ children }) {\r\n  const [selectedBatch, setSelectedBatch] = useState(() => {\r\n    // Check if localStorage is available (client-side)\r\n    if (typeof window !== \"undefined\" && window.localStorage) {\r\n      const savedBatch = localStorage.getItem(\"selectedBatch\");\r\n      return savedBatch ? JSON.parse(savedBatch) : null;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const [batches, setBatches] = useState([]); // store all available batches\r\n\r\n  // Fetch batches only once when the app loads\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    async function fetchBatches() {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/batches\", {\r\n          signal: controller.signal,\r\n        });\r\n        const fetchedBatches = res.data;\r\n        setBatches(fetchedBatches);\r\n\r\n        // Check if localStorage is available before using it\r\n        if (typeof window !== \"undefined\" && window.localStorage) {\r\n          if (\r\n            !localStorage.getItem(\"selectedBatch\") &&\r\n            fetchedBatches.length > 0\r\n          ) {\r\n            setSelectedBatch(fetchedBatches[0]);\r\n          }\r\n        } else if (fetchedBatches.length > 0) {\r\n          // Fallback for SSR - just set the first batch\r\n          setSelectedBatch(fetchedBatches[0]);\r\n        }\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) return; // request was cancelled\r\n        console.error(\"Error fetching batches:\", error);\r\n      }\r\n    }\r\n    fetchBatches();\r\n    return () => controller.abort();\r\n  }, []);\r\n\r\n  // Whenever selectedBatch changes â†’ save to localStorage (client-side only)\r\n  useEffect(() => {\r\n    if (selectedBatch && typeof window !== \"undefined\" && window.localStorage) {\r\n      localStorage.setItem(\"selectedBatch\", JSON.stringify(selectedBatch));\r\n    }\r\n  }, [selectedBatch]);\r\n\r\n  const reloadBatches = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/batches\");\r\n      const fetchedBatches = res.data;\r\n      setBatches(fetchedBatches);\r\n\r\n      // If no batch is selected and we have batches, select the first one\r\n      if (!selectedBatch && fetchedBatches.length > 0) {\r\n        setSelectedBatch(fetchedBatches[0].year);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching batches:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BatchContext.Provider\r\n      value={{ selectedBatch, setSelectedBatch, batches, reloadBatches }}\r\n    >\r\n      {children}\r\n    </BatchContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useBatchContext = () => {\r\n  const context = useContext(BatchContext);\r\n  if (!context) {\r\n    throw new Error(\"useBatchContext must be used within a BatchProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AAE1B,SAAS,cAAc,EAAE,QAAQ,EAAE;IACxC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,mDAAmD;QACnD;;QAIA,OAAO;IACT;IAEA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,GAAG,8BAA8B;IAE1E,6CAA6C;IAC7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,IAAI;QACvB,eAAe;YACb,IAAI;gBACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,iCAAiC;oBAC3D,QAAQ,WAAW,MAAM;gBAC3B;gBACA,MAAM,iBAAiB,IAAI,IAAI;gBAC/B,WAAW;gBAEX,qDAAqD;gBACrD;;qBAOO,IAAI,eAAe,MAAM,GAAG,GAAG;oBACpC,8CAA8C;oBAC9C,iBAAiB,cAAc,CAAC,EAAE;gBACpC;YACF,EAAE,OAAO,OAAO;gBACd,IAAI,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,QAAQ,QAAQ,wBAAwB;gBAC3D,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QACF;QACA;QACA,OAAO,IAAM,WAAW,KAAK;IAC/B,GAAG,EAAE;IAEL,2EAA2E;IAC3E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;;IAGF,GAAG;QAAC;KAAc;IAElB,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YAC5B,MAAM,iBAAiB,IAAI,IAAI;YAC/B,WAAW;YAEX,oEAAoE;YACpE,IAAI,CAAC,iBAAiB,eAAe,MAAM,GAAG,GAAG;gBAC/C,iBAAiB,cAAc,CAAC,EAAE,CAAC,IAAI;YACzC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,qBACE,8OAAC,aAAa,QAAQ;QACpB,OAAO;YAAE;YAAe;YAAkB;YAAS;QAAc;kBAEhE;;;;;;AAGP;AAEO,MAAM,kBAAkB;IAC7B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/layout.js"],"sourcesContent":["import { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { Toaster } from \"react-hot-toast\";\nimport { AuthProvider } from \"../context/AuthContext\";\nimport { BatchProvider } from \"../context/BatchContext\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <AuthProvider>\n          <BatchProvider>{children}</BatchProvider>\n        </AuthProvider>\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;;;;;;;;AAYO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,6IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;;8BAEpE,8OAAC,sHAAA,CAAA,eAAY;8BACX,cAAA,8OAAC,uHAAA,CAAA,gBAAa;kCAAE;;;;;;;;;;;8BAElB,8OAAC,uJAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB","debugId":null}}]
}