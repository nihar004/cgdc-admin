{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/EmailContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EmailContext = createContext();\r\n\r\nexport const EmailProvider = ({ children }) => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const API_BASE = \"http://localhost:5000\";\r\n\r\n  // Fetch templates\r\n  const fetchTemplates = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/emails/email-templates`, {\r\n        credentials: \"include\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setTemplates(data.templates);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch templates:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch campaigns\r\n  const fetchCampaigns = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE}/emails/email-logs?page=1&limit=50`,\r\n        {\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setCampaigns(data.campaigns);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch campaigns:\", error);\r\n    }\r\n  };\r\n\r\n  // Create template\r\n  const createTemplate = async (formData) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(\"Sending template data:\", {\r\n        name: formData.get(\"template_name\"),\r\n        attachments: formData.getAll(\"attachments\").map((f) => f.name),\r\n      });\r\n\r\n      const response = await axios.post(\r\n        `/emails/email-templates`, // Remove API_BASE as it's set in defaults\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          withCredentials: true,\r\n          // Add timeout and other configs\r\n          timeout: 30000,\r\n          maxBodyLength: Infinity,\r\n          maxContentLength: Infinity,\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        await fetchTemplates();\r\n        return { success: true, message: response.data.message };\r\n      }\r\n      return { success: false, message: response.data.error };\r\n    } catch (error) {\r\n      console.error(\"Template creation error:\", error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.error || error.message,\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update template\r\n  const updateTemplate = async (id, formData) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.put(\r\n        `${API_BASE}/emails/email-templates/${id}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        await fetchTemplates();\r\n        return { success: true, message: response.data.message };\r\n      }\r\n      return { success: false, message: response.data.error };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.error || error.message,\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete template\r\n  const deleteTemplate = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/emails/email-templates/${id}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchTemplates();\r\n        return { success: true };\r\n      }\r\n      return { success: false };\r\n    } catch (error) {\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  // Send email campaign\r\n  const sendCampaign = async (campaignData) => {\r\n    setLoading(true);\r\n    try {\r\n      // Check if it's FormData (has manual attachments) or regular object\r\n      const isFormData = campaignData instanceof FormData;\r\n\r\n      const response = await fetch(`${API_BASE}/emails/email-logs/send`, {\r\n        method: \"POST\",\r\n        headers: isFormData ? {} : { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: isFormData ? campaignData : JSON.stringify(campaignData),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchCampaigns();\r\n        return { success: true, data };\r\n      }\r\n      return { success: false, message: data.error };\r\n    } catch (error) {\r\n      return { success: false, message: error.message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Preview email\r\n  const previewEmail = async (payload) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/emails/email-logs/preview`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        return { success: true, preview: data.preview };\r\n      }\r\n      return { success: false, message: data.error };\r\n    } catch (error) {\r\n      return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  // Delete campaign\r\n  const deleteCampaign = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/emails/email-logs/${id}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        await fetchCampaigns();\r\n        return { success: true };\r\n      }\r\n      return { success: false };\r\n    } catch (error) {\r\n      return { success: false };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTemplates();\r\n    fetchCampaigns();\r\n  }, []);\r\n\r\n  return (\r\n    <EmailContext.Provider\r\n      value={{\r\n        templates,\r\n        campaigns,\r\n        loading,\r\n        createTemplate,\r\n        updateTemplate,\r\n        deleteTemplate,\r\n        sendCampaign,\r\n        previewEmail,\r\n        deleteCampaign,\r\n        fetchTemplates,\r\n        fetchCampaigns,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmailContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmail = () => {\r\n  const context = useContext(EmailContext);\r\n  if (!context) {\r\n    throw new Error(\"useEmail must be used within EmailProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AAE1B,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAE;IACxC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,WAAW;IAEjB,kBAAkB;IAClB,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,uBAAuB,CAAC,EAAE;gBACjE,aAAa;YACf;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,aAAa,KAAK,SAAS;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,kBAAkB;IAClB,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,GAAG,SAAS,kCAAkC,CAAC,EAC/C;gBACE,aAAa;YACf;YAEF,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,aAAa,KAAK,SAAS;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,kBAAkB;IAClB,MAAM,iBAAiB,OAAO;QAC5B,WAAW;QACX,IAAI;YACF,QAAQ,GAAG,CAAC,0BAA0B;gBACpC,MAAM,SAAS,GAAG,CAAC;gBACnB,aAAa,SAAS,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;YAC/D;YAEA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,CAAC,uBAAuB,CAAC,EACzB,UACA;gBACE,SAAS;oBACP,gBAAgB;gBAClB;gBACA,iBAAiB;gBACjB,gCAAgC;gBAChC,SAAS;gBACT,eAAe;gBACf,kBAAkB;YACpB;YAGF,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,MAAM;gBACN,OAAO;oBAAE,SAAS;oBAAM,SAAS,SAAS,IAAI,CAAC,OAAO;gBAAC;YACzD;YACA,OAAO;gBAAE,SAAS;gBAAO,SAAS,SAAS,IAAI,CAAC,KAAK;YAAC;QACxD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;gBACL,SAAS;gBACT,SAAS,MAAM,QAAQ,EAAE,MAAM,SAAS,MAAM,OAAO;YACvD;QACF,SAAU;YACR,WAAW;QACb;IACF;IAEA,kBAAkB;IAClB,MAAM,iBAAiB,OAAO,IAAI;QAChC,WAAW;QACX,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAC9B,GAAG,SAAS,wBAAwB,EAAE,IAAI,EAC1C,UACA;gBACE,SAAS;oBACP,gBAAgB;gBAClB;gBACA,iBAAiB;YACnB;YAGF,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,MAAM;gBACN,OAAO;oBAAE,SAAS;oBAAM,SAAS,SAAS,IAAI,CAAC,OAAO;gBAAC;YACzD;YACA,OAAO;gBAAE,SAAS;gBAAO,SAAS,SAAS,IAAI,CAAC,KAAK;YAAC;QACxD,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,SAAS;gBACT,SAAS,MAAM,QAAQ,EAAE,MAAM,SAAS,MAAM,OAAO;YACvD;QACF,SAAU;YACR,WAAW;QACb;IACF;IAEA,kBAAkB;IAClB,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,wBAAwB,EAAE,IAAI,EAAE;gBACvE,QAAQ;gBACR,aAAa;YACf;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,MAAM;gBACN,OAAO;oBAAE,SAAS;gBAAK;YACzB;YACA,OAAO;gBAAE,SAAS;YAAM;QAC1B,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,SAAS;YAAM;QAC1B;IACF;IAEA,sBAAsB;IACtB,MAAM,eAAe,OAAO;QAC1B,WAAW;QACX,IAAI;YACF,oEAAoE;YACpE,MAAM,aAAa,wBAAwB;YAE3C,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,uBAAuB,CAAC,EAAE;gBACjE,QAAQ;gBACR,SAAS,aAAa,CAAC,IAAI;oBAAE,gBAAgB;gBAAmB;gBAChE,aAAa;gBACb,MAAM,aAAa,eAAe,KAAK,SAAS,CAAC;YACnD;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,MAAM;gBACN,OAAO;oBAAE,SAAS;oBAAM;gBAAK;YAC/B;YACA,OAAO;gBAAE,SAAS;gBAAO,SAAS,KAAK,KAAK;YAAC;QAC/C,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,SAAS;gBAAO,SAAS,MAAM,OAAO;YAAC;QAClD,SAAU;YACR,WAAW;QACb;IACF;IAEA,gBAAgB;IAChB,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,0BAA0B,CAAC,EAAE;gBACpE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACvB;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,OAAO;oBAAE,SAAS;oBAAM,SAAS,KAAK,OAAO;gBAAC;YAChD;YACA,OAAO;gBAAE,SAAS;gBAAO,SAAS,KAAK,KAAK;YAAC;QAC/C,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,SAAS;gBAAO,SAAS,MAAM,OAAO;YAAC;QAClD;IACF;IAEA,kBAAkB;IAClB,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,mBAAmB,EAAE,IAAI,EAAE;gBAClE,QAAQ;gBACR,aAAa;YACf;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,MAAM;gBACN,OAAO;oBAAE,SAAS;gBAAK;YACzB;YACA,OAAO;gBAAE,SAAS;YAAM;QAC1B,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,SAAS;YAAM;QAC1B;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,aAAa,QAAQ;QACpB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/email-management/ComposeEmail.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { Send, Eye, X, FileText, Paperclip } from \"lucide-react\";\r\nimport { useEmail } from \"../../context/EmailContext\";\r\n\r\nconst ComposeEmail = () => {\r\n  const { templates, sendCampaign, previewEmail, loading } = useEmail();\r\n  const [previewData, setPreviewData] = useState(null);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const [manualAttachments, setManualAttachments] = useState([]);\r\n  const fileInputRef = useRef(null);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n    sender_email: \"placement@college.edu\",\r\n    sendType: \"filter\",\r\n    department: [],\r\n    batch_year: \"\",\r\n    min_cgpa: \"\",\r\n    placement_status: \"\",\r\n    recipient_emails: \"\",\r\n    student_ids: \"\",\r\n    event_id: \"\",\r\n    recipient_type: \"registered\",\r\n  });\r\n\r\n  const handleUseTemplate = (template) => {\r\n    setFormData({\r\n      ...formData,\r\n      title: template.template_name,\r\n      subject: template.subject,\r\n      body: template.body,\r\n    });\r\n    setSelectedTemplate(template);\r\n  };\r\n\r\n  const handlePreview = async () => {\r\n    if (!formData.subject || !formData.body) {\r\n      alert(\"Please enter subject and body\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      subject: formData.subject,\r\n      body: formData.body,\r\n    };\r\n\r\n    // Add template_id if a template is selected\r\n    if (selectedTemplate) {\r\n      payload.template_id = selectedTemplate.id;\r\n    }\r\n\r\n    // const result = await previewEmail(payload);\r\n    // if (result.success) {\r\n    //   setPreviewData(result.preview);\r\n    // }\r\n    const result = await previewEmail(payload);\r\n    if (result.success) {\r\n      // Add manual attachments to preview\r\n      const previewWithManual = {\r\n        ...result.preview,\r\n        attachments: [\r\n          ...(result.preview.attachments || []),\r\n          ...manualAttachments.map((file) => ({\r\n            name: file.name,\r\n            type: \"manual\",\r\n            size: file.size,\r\n          })),\r\n        ],\r\n      };\r\n      setPreviewData(previewWithManual);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    // Validate file size (10MB max per file)\r\n    const validFiles = files.filter((file) => {\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        alert(`${file.name} is too large. Max size is 10MB`);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    // Check total file count (max 5 including template attachments)\r\n    const templateAttachmentCount = getTemplateAttachments().length;\r\n    const totalCount =\r\n      manualAttachments.length + validFiles.length + templateAttachmentCount;\r\n\r\n    if (totalCount > 5) {\r\n      alert(`Maximum 5 attachments allowed (including template attachments)`);\r\n      return;\r\n    }\r\n\r\n    setManualAttachments((prev) => [...prev, ...validFiles]);\r\n  };\r\n\r\n  const removeManualAttachment = (index) => {\r\n    setManualAttachments((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const getTemplateAttachments = () => {\r\n    if (!selectedTemplate?.attachments) return [];\r\n    try {\r\n      const attachments =\r\n        typeof selectedTemplate.attachments === \"string\"\r\n          ? JSON.parse(selectedTemplate.attachments)\r\n          : selectedTemplate.attachments;\r\n      return attachments;\r\n    } catch (err) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getTotalAttachmentCount = () => {\r\n    return getTemplateAttachments().length + manualAttachments.length;\r\n  };\r\n\r\n  // const handleSend = async () => {\r\n  //   if (!formData.title || !formData.subject || !formData.body) {\r\n  //     alert(\"Please fill title, subject, and body\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (!confirm(\"Are you sure you want to send this email?\")) return;\r\n\r\n  //   const payload = {\r\n  //     title: formData.title,\r\n  //     subject: formData.subject,\r\n  //     body: formData.body,\r\n  //     sender_email: formData.sender_email,\r\n  //   };\r\n\r\n  //   // Add template_id if a template is selected (for attachments)\r\n  //   if (selectedTemplate) {\r\n  //     payload.template_id = selectedTemplate.id;\r\n  //   }\r\n\r\n  //   if (formData.sendType === \"filter\") {\r\n  //     const filters = {};\r\n  //     if (formData.department.length > 0)\r\n  //       filters.department = formData.department;\r\n  //     if (formData.batch_year)\r\n  //       filters.batch_year = parseInt(formData.batch_year);\r\n  //     if (formData.min_cgpa) filters.min_cgpa = parseFloat(formData.min_cgpa);\r\n  //     if (formData.placement_status)\r\n  //       filters.placement_status = formData.placement_status;\r\n  //     payload.recipient_filter = filters;\r\n  //   } else if (formData.sendType === \"manual\") {\r\n  //     const emails = formData.recipient_emails\r\n  //       .split(\",\")\r\n  //       .map((e) => e.trim())\r\n  //       .filter((e) => e);\r\n  //     if (emails.length === 0) {\r\n  //       alert(\"Please enter at least one email address\");\r\n  //       return;\r\n  //     }\r\n  //     payload.recipient_emails = emails;\r\n  //   }\r\n\r\n  //   const result = await sendCampaign(payload);\r\n  //   if (result.success) {\r\n  //     alert(\r\n  //       `Email sent successfully!\\nSuccessful: ${result.data.emailResults?.successful || 0}\\nFailed: ${result.data.emailResults?.failed || 0}`\r\n  //     );\r\n  //     setFormData({\r\n  //       ...formData,\r\n  //       title: \"\",\r\n  //       subject: \"\",\r\n  //       body: \"\",\r\n  //       department: [],\r\n  //       batch_year: \"\",\r\n  //       min_cgpa: \"\",\r\n  //       recipient_emails: \"\",\r\n  //     });\r\n  //     setSelectedTemplate(null);\r\n  //   } else {\r\n  //     alert(\"Failed to send email: \" + result.message);\r\n  //   }\r\n  // };\r\n\r\n  // Get attachment count from selected template\r\n\r\n  const handleSend = async () => {\r\n    if (!formData.title || !formData.subject || !formData.body) {\r\n      alert(\"Please fill title, subject, and body\");\r\n      return;\r\n    }\r\n\r\n    if (!confirm(\"Are you sure you want to send this email?\")) return;\r\n\r\n    // Create FormData for file uploads\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"title\", formData.title);\r\n    formDataToSend.append(\"subject\", formData.subject);\r\n    formDataToSend.append(\"body\", formData.body);\r\n    formDataToSend.append(\"sender_email\", formData.sender_email);\r\n\r\n    // Add template_id if selected\r\n    if (selectedTemplate) {\r\n      formDataToSend.append(\"template_id\", selectedTemplate.id);\r\n    }\r\n\r\n    // Add manual attachments\r\n    manualAttachments.forEach((file) => {\r\n      formDataToSend.append(\"manual_attachments\", file);\r\n    });\r\n\r\n    if (formData.sendType === \"filter\") {\r\n      const filters = {};\r\n      if (formData.department.length > 0)\r\n        filters.department = formData.department;\r\n      if (formData.batch_year)\r\n        filters.batch_year = parseInt(formData.batch_year);\r\n      if (formData.min_cgpa) filters.min_cgpa = parseFloat(formData.min_cgpa);\r\n      if (formData.placement_status)\r\n        filters.placement_status = formData.placement_status;\r\n      formDataToSend.append(\"recipient_filter\", JSON.stringify(filters));\r\n    } else if (formData.sendType === \"manual\") {\r\n      const emails = formData.recipient_emails\r\n        .split(\",\")\r\n        .map((e) => e.trim())\r\n        .filter((e) => e);\r\n      if (emails.length === 0) {\r\n        alert(\"Please enter at least one email address\");\r\n        return;\r\n      }\r\n      formDataToSend.append(\"recipient_emails\", JSON.stringify(emails));\r\n    }\r\n\r\n    const result = await sendCampaign(formDataToSend);\r\n    if (result.success) {\r\n      alert(\r\n        `Email sent successfully!\\nSuccessful: ${result.data.emailResults?.successful || 0}\\nFailed: ${result.data.emailResults?.failed || 0}`\r\n      );\r\n      setFormData({\r\n        ...formData,\r\n        title: \"\",\r\n        subject: \"\",\r\n        body: \"\",\r\n        department: [],\r\n        batch_year: \"\",\r\n        min_cgpa: \"\",\r\n        recipient_emails: \"\",\r\n      });\r\n      setSelectedTemplate(null);\r\n      setManualAttachments([]);\r\n    } else {\r\n      alert(\"Failed to send email: \" + result.message);\r\n    }\r\n  };\r\n  const getAttachmentCount = () => {\r\n    if (!selectedTemplate?.attachments) return 0;\r\n    try {\r\n      const attachments =\r\n        typeof selectedTemplate.attachments === \"string\"\r\n          ? JSON.parse(selectedTemplate.attachments)\r\n          : selectedTemplate.attachments;\r\n      return attachments.length;\r\n    } catch (err) {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Quick Templates */}\r\n      {templates.length > 0 && (\r\n        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-100\">\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <FileText className=\"w-5 h-5 text-blue-600\" />\r\n            <h3 className=\"font-semibold text-gray-900\">\r\n              Quick Start Templates\r\n            </h3>\r\n          </div>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {templates.map((template) => {\r\n              const isSelected = selectedTemplate?.id === template.id;\r\n              let attachmentCount = 0;\r\n              try {\r\n                if (template.attachments) {\r\n                  const attachments =\r\n                    typeof template.attachments === \"string\"\r\n                      ? JSON.parse(template.attachments)\r\n                      : template.attachments;\r\n                  attachmentCount = attachments.length;\r\n                }\r\n              } catch (err) {\r\n                console.error(\"Error parsing attachments:\", err);\r\n              }\r\n\r\n              return (\r\n                <button\r\n                  key={template.id}\r\n                  onClick={() => handleUseTemplate(template)}\r\n                  className={`px-4 py-2 border rounded-lg text-sm font-medium transition-all flex items-center gap-2 ${\r\n                    isSelected\r\n                      ? \"bg-blue-600 text-white border-blue-600\"\r\n                      : \"bg-white border-blue-200 text-blue-700 hover:bg-blue-50 hover:border-blue-300\"\r\n                  }`}\r\n                >\r\n                  {template.template_name}\r\n                  {attachmentCount > 0 && (\r\n                    <span\r\n                      className={`inline-flex items-center gap-1 text-xs ${\r\n                        isSelected ? \"text-blue-100\" : \"text-blue-600\"\r\n                      }`}\r\n                    >\r\n                      <Paperclip className=\"w-3 h-3\" />\r\n                      {attachmentCount}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white rounded-xl border border-gray-200 p-6 space-y-6\">\r\n        {/* Selected Template Info with Attachments */}\r\n        {selectedTemplate && (\r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  <FileText className=\"w-5 h-5 text-green-600\" />\r\n                  <h4 className=\"font-semibold text-green-900\">\r\n                    Using Template: {selectedTemplate.template_name}\r\n                  </h4>\r\n                </div>\r\n                {getAttachmentCount() > 0 && (\r\n                  <div className=\"flex items-center gap-2 text-sm text-green-700\">\r\n                    <Paperclip className=\"w-4 h-4\" />\r\n                    <span>\r\n                      {getAttachmentCount()} attachment\r\n                      {getAttachmentCount() !== 1 ? \"s\" : \"\"} will be included\r\n                      with this email\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  setSelectedTemplate(null);\r\n                  setFormData({\r\n                    ...formData,\r\n                    title: \"\",\r\n                    subject: \"\",\r\n                    body: \"\",\r\n                  });\r\n                }}\r\n                className=\"p-1 hover:bg-green-100 rounded transition-colors\"\r\n              >\r\n                <X className=\"w-4 h-4 text-green-600\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Basic Info */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Campaign Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, title: e.target.value })\r\n              }\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"e.g., Google Drive Reminder - Jan 2024\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Sender Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.sender_email}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, sender_email: e.target.value })\r\n              }\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Subject */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Email Subject\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.subject}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, subject: e.target.value })\r\n            }\r\n            className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Use {first_name}, {last_name}, {cgpa}, etc.\"\r\n          />\r\n        </div>\r\n\r\n        {/* Body */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Email Body (HTML)\r\n          </label>\r\n          <textarea\r\n            value={formData.body}\r\n            onChange={(e) => setFormData({ ...formData, body: e.target.value })}\r\n            className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 h-48 font-mono text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"<p>Dear {first_name},</p><p>Your CGPA is {cgpa}...</p>\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 mt-2\">\r\n            Available variables: {\"{first_name}\"}, {\"{last_name}\"}, {\"{cgpa}\"},{\" \"}\r\n            {\"{department}\"}, {\"{enrollment_number}\"}, {\"{batch_year}\"}\r\n          </p>\r\n        </div>\r\n        {/* Manual Attachments Section */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n            Additional Attachments\r\n          </label>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => fileInputRef.current?.click()}\r\n                disabled={getTotalAttachmentCount() >= 5}\r\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 disabled:bg-gray-50 disabled:text-gray-400 text-gray-700 rounded-lg flex items-center gap-2\"\r\n              >\r\n                <Paperclip className=\"w-4 h-4\" />\r\n                Add Files\r\n              </button>\r\n              <span className=\"text-sm text-gray-500\">\r\n                Max 5 files total ({getTotalAttachmentCount()}/5 used)\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={handleFileSelect}\r\n              multiple\r\n              className=\"hidden\"\r\n              accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png\"\r\n            />\r\n\r\n            {/* Manual Attachments List */}\r\n            {manualAttachments.length > 0 && (\r\n              <div className=\"mt-3 p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                <p className=\"text-xs font-semibold text-purple-900 mb-2\">\r\n                  Manual Attachments ({manualAttachments.length})\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  {manualAttachments.map((file, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"flex items-center justify-between bg-white p-2 rounded\"\r\n                    >\r\n                      <div className=\"flex items-center gap-2 flex-1\">\r\n                        <Paperclip className=\"w-4 h-4 text-purple-500\" />\r\n                        <span className=\"text-sm text-gray-700 truncate\">\r\n                          {file.name}\r\n                        </span>\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          ({(file.size / 1024 / 1024).toFixed(2)} MB)\r\n                        </span>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => removeManualAttachment(index)}\r\n                        className=\"p-1 hover:bg-red-100 rounded-full\"\r\n                      >\r\n                        <X className=\"w-4 h-4 text-red-500\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recipients */}\r\n        <div>\r\n          <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\r\n            Send To\r\n          </label>\r\n          <div className=\"flex flex-wrap gap-4 mb-4\">\r\n            {[\"filter\", \"manual\"].map((type) => (\r\n              <label key={type} className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value={type}\r\n                  checked={formData.sendType === type}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, sendType: e.target.value })\r\n                  }\r\n                  className=\"w-4 h-4 text-blue-600 focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n                <span className=\"ml-2 text-sm font-medium text-gray-700 capitalize\">\r\n                  {type === \"filter\" ? \"Filter Students\" : \"Manual Emails\"}\r\n                </span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n\r\n          {formData.sendType === \"filter\" && (\r\n            <div className=\"bg-gray-50 rounded-lg p-4 space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Department (comma-separated)\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.department.join(\", \")}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      department: e.target.value\r\n                        .split(\",\")\r\n                        .map((d) => d.trim()),\r\n                    })\r\n                  }\r\n                  className=\"w-full border border-gray-300 rounded-lg px-4 py-2\"\r\n                  placeholder=\"CSE, ECE, ME\"\r\n                />\r\n              </div>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Batch Year\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={formData.batch_year}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, batch_year: e.target.value })\r\n                    }\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2\"\r\n                    placeholder=\"2024\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Min CGPA\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    value={formData.min_cgpa}\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, min_cgpa: e.target.value })\r\n                    }\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2\"\r\n                    placeholder=\"7.0\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Placement Status\r\n                  </label>\r\n                  <select\r\n                    value={formData.placement_status}\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        placement_status: e.target.value,\r\n                      })\r\n                    }\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2\"\r\n                  >\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"eligible\">Eligible</option>\r\n                    <option value=\"placed\">Placed</option>\r\n                    <option value=\"unplaced\">Unplaced</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {formData.sendType === \"manual\" && (\r\n            <div className=\"bg-gray-50 rounded-lg p-4\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Email Addresses (comma-separated)\r\n              </label>\r\n              <textarea\r\n                value={formData.recipient_emails}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, recipient_emails: e.target.value })\r\n                }\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2 h-24\"\r\n                placeholder=\"student1@college.edu, student2@college.edu\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex gap-3 pt-4 border-t\">\r\n          <button\r\n            onClick={handlePreview}\r\n            disabled={loading}\r\n            className=\"px-6 py-2.5 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50 flex items-center gap-2 font-medium transition-all\"\r\n          >\r\n            <Eye className=\"w-4 h-4\" />\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={handleSend}\r\n            disabled={loading}\r\n            className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg hover:from-blue-700 hover:to-indigo-700 disabled:opacity-50 flex items-center gap-2 font-medium transition-all shadow-lg\"\r\n          >\r\n            <Send className=\"w-4 h-4\" />\r\n            {loading ? \"Sending...\" : \"Send Email\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Preview Modal */}\r\n      {previewData && (\r\n        <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-2xl max-w-3xl w-full max-h-[85vh] overflow-hidden shadow-2xl\">\r\n            <div className=\"flex justify-between items-center p-6 border-b\">\r\n              <h3 className=\"text-xl font-bold text-gray-900\">Email Preview</h3>\r\n              <button\r\n                onClick={() => setPreviewData(null)}\r\n                className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              >\r\n                <X className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6 overflow-y-auto max-h-[calc(85vh-80px)] space-y-4\">\r\n              <div>\r\n                <p className=\"text-sm font-semibold text-gray-600 mb-1\">\r\n                  Subject:\r\n                </p>\r\n                <p className=\"text-lg font-medium\">{previewData.subject}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-semibold text-gray-600 mb-2\">\r\n                  Body:\r\n                </p>\r\n                <div\r\n                  className=\"border rounded-lg p-4 bg-gray-50\"\r\n                  dangerouslySetInnerHTML={{ __html: previewData.body }}\r\n                />\r\n              </div>\r\n\r\n              {/* Show attachments in preview */}\r\n              {previewData.attachments &&\r\n                previewData.attachments.length > 0 && (\r\n                  <div>\r\n                    <p className=\"text-sm font-semibold text-gray-600 mb-2\">\r\n                      Attachments:\r\n                    </p>\r\n                    <div className=\"border rounded-lg p-4 bg-gray-50 space-y-2\">\r\n                      {previewData.attachments.map((attachment, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex items-center gap-2 text-sm text-gray-700\"\r\n                        >\r\n                          <Paperclip className=\"w-4 h-4 text-blue-500\" />\r\n                          <span>{attachment.name}</span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            ({attachment.type})\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComposeEmail;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAEA,MAAM,eAAe;IACnB,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,WAAQ,AAAD;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7D,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,OAAO;QACP,SAAS;QACT,MAAM;QACN,cAAc;QACd,UAAU;QACV,YAAY,EAAE;QACd,YAAY;QACZ,UAAU;QACV,kBAAkB;QAClB,kBAAkB;QAClB,aAAa;QACb,UAAU;QACV,gBAAgB;IAClB;IAEA,MAAM,oBAAoB,CAAC;QACzB,YAAY;YACV,GAAG,QAAQ;YACX,OAAO,SAAS,aAAa;YAC7B,SAAS,SAAS,OAAO;YACzB,MAAM,SAAS,IAAI;QACrB;QACA,oBAAoB;IACtB;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,SAAS,IAAI,EAAE;YACvC,MAAM;YACN;QACF;QAEA,MAAM,UAAU;YACd,SAAS,SAAS,OAAO;YACzB,MAAM,SAAS,IAAI;QACrB;QAEA,4CAA4C;QAC5C,IAAI,kBAAkB;YACpB,QAAQ,WAAW,GAAG,iBAAiB,EAAE;QAC3C;QAEA,8CAA8C;QAC9C,wBAAwB;QACxB,oCAAoC;QACpC,IAAI;QACJ,MAAM,SAAS,MAAM,aAAa;QAClC,IAAI,OAAO,OAAO,EAAE;YAClB,oCAAoC;YACpC,MAAM,oBAAoB;gBACxB,GAAG,OAAO,OAAO;gBACjB,aAAa;uBACP,OAAO,OAAO,CAAC,WAAW,IAAI,EAAE;uBACjC,kBAAkB,GAAG,CAAC,CAAC,OAAS,CAAC;4BAClC,MAAM,KAAK,IAAI;4BACf,MAAM;4BACN,MAAM,KAAK,IAAI;wBACjB,CAAC;iBACF;YACH;YACA,eAAe;QACjB;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC,KAAK;QAEvC,yCAAyC;QACzC,MAAM,aAAa,MAAM,MAAM,CAAC,CAAC;YAC/B,IAAI,KAAK,IAAI,GAAG,KAAK,OAAO,MAAM;gBAChC,MAAM,GAAG,KAAK,IAAI,CAAC,+BAA+B,CAAC;gBACnD,OAAO;YACT;YACA,OAAO;QACT;QAEA,gEAAgE;QAChE,MAAM,0BAA0B,yBAAyB,MAAM;QAC/D,MAAM,aACJ,kBAAkB,MAAM,GAAG,WAAW,MAAM,GAAG;QAEjD,IAAI,aAAa,GAAG;YAClB,MAAM,CAAC,8DAA8D,CAAC;YACtE;QACF;QAEA,qBAAqB,CAAC,OAAS;mBAAI;mBAAS;aAAW;IACzD;IAEA,MAAM,yBAAyB,CAAC;QAC9B,qBAAqB,CAAC,QAAU,MAAM,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IAC/D;IAEA,MAAM,yBAAyB;QAC7B,IAAI,CAAC,kBAAkB,aAAa,OAAO,EAAE;QAC7C,IAAI;YACF,MAAM,cACJ,OAAO,iBAAiB,WAAW,KAAK,WACpC,KAAK,KAAK,CAAC,iBAAiB,WAAW,IACvC,iBAAiB,WAAW;YAClC,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,OAAO,EAAE;QACX;IACF;IAEA,MAAM,0BAA0B;QAC9B,OAAO,yBAAyB,MAAM,GAAG,kBAAkB,MAAM;IACnE;IAEA,mCAAmC;IACnC,kEAAkE;IAClE,qDAAqD;IACrD,cAAc;IACd,MAAM;IAEN,uEAAuE;IAEvE,sBAAsB;IACtB,6BAA6B;IAC7B,iCAAiC;IACjC,2BAA2B;IAC3B,2CAA2C;IAC3C,OAAO;IAEP,mEAAmE;IACnE,4BAA4B;IAC5B,iDAAiD;IACjD,MAAM;IAEN,0CAA0C;IAC1C,0BAA0B;IAC1B,0CAA0C;IAC1C,kDAAkD;IAClD,+BAA+B;IAC/B,4DAA4D;IAC5D,+EAA+E;IAC/E,qCAAqC;IACrC,8DAA8D;IAC9D,0CAA0C;IAC1C,iDAAiD;IACjD,+CAA+C;IAC/C,oBAAoB;IACpB,8BAA8B;IAC9B,2BAA2B;IAC3B,iCAAiC;IACjC,0DAA0D;IAC1D,gBAAgB;IAChB,QAAQ;IACR,yCAAyC;IACzC,MAAM;IAEN,gDAAgD;IAChD,0BAA0B;IAC1B,aAAa;IACb,+IAA+I;IAC/I,SAAS;IACT,oBAAoB;IACpB,qBAAqB;IACrB,mBAAmB;IACnB,qBAAqB;IACrB,kBAAkB;IAClB,wBAAwB;IACxB,wBAAwB;IACxB,sBAAsB;IACtB,8BAA8B;IAC9B,UAAU;IACV,iCAAiC;IACjC,aAAa;IACb,wDAAwD;IACxD,MAAM;IACN,KAAK;IAEL,8CAA8C;IAE9C,MAAM,aAAa;QACjB,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,SAAS,IAAI,EAAE;YAC1D,MAAM;YACN;QACF;QAEA,IAAI,CAAC,QAAQ,8CAA8C;QAE3D,mCAAmC;QACnC,MAAM,iBAAiB,IAAI;QAC3B,eAAe,MAAM,CAAC,SAAS,SAAS,KAAK;QAC7C,eAAe,MAAM,CAAC,WAAW,SAAS,OAAO;QACjD,eAAe,MAAM,CAAC,QAAQ,SAAS,IAAI;QAC3C,eAAe,MAAM,CAAC,gBAAgB,SAAS,YAAY;QAE3D,8BAA8B;QAC9B,IAAI,kBAAkB;YACpB,eAAe,MAAM,CAAC,eAAe,iBAAiB,EAAE;QAC1D;QAEA,yBAAyB;QACzB,kBAAkB,OAAO,CAAC,CAAC;YACzB,eAAe,MAAM,CAAC,sBAAsB;QAC9C;QAEA,IAAI,SAAS,QAAQ,KAAK,UAAU;YAClC,MAAM,UAAU,CAAC;YACjB,IAAI,SAAS,UAAU,CAAC,MAAM,GAAG,GAC/B,QAAQ,UAAU,GAAG,SAAS,UAAU;YAC1C,IAAI,SAAS,UAAU,EACrB,QAAQ,UAAU,GAAG,SAAS,SAAS,UAAU;YACnD,IAAI,SAAS,QAAQ,EAAE,QAAQ,QAAQ,GAAG,WAAW,SAAS,QAAQ;YACtE,IAAI,SAAS,gBAAgB,EAC3B,QAAQ,gBAAgB,GAAG,SAAS,gBAAgB;YACtD,eAAe,MAAM,CAAC,oBAAoB,KAAK,SAAS,CAAC;QAC3D,OAAO,IAAI,SAAS,QAAQ,KAAK,UAAU;YACzC,MAAM,SAAS,SAAS,gBAAgB,CACrC,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IACjB,MAAM,CAAC,CAAC,IAAM;YACjB,IAAI,OAAO,MAAM,KAAK,GAAG;gBACvB,MAAM;gBACN;YACF;YACA,eAAe,MAAM,CAAC,oBAAoB,KAAK,SAAS,CAAC;QAC3D;QAEA,MAAM,SAAS,MAAM,aAAa;QAClC,IAAI,OAAO,OAAO,EAAE;YAClB,MACE,CAAC,sCAAsC,EAAE,OAAO,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,IAAI,CAAC,YAAY,EAAE,UAAU,GAAG;YAExI,YAAY;gBACV,GAAG,QAAQ;gBACX,OAAO;gBACP,SAAS;gBACT,MAAM;gBACN,YAAY,EAAE;gBACd,YAAY;gBACZ,UAAU;gBACV,kBAAkB;YACpB;YACA,oBAAoB;YACpB,qBAAqB,EAAE;QACzB,OAAO;YACL,MAAM,2BAA2B,OAAO,OAAO;QACjD;IACF;IACA,MAAM,qBAAqB;QACzB,IAAI,CAAC,kBAAkB,aAAa,OAAO;QAC3C,IAAI;YACF,MAAM,cACJ,OAAO,iBAAiB,WAAW,KAAK,WACpC,KAAK,KAAK,CAAC,iBAAiB,WAAW,IACvC,iBAAiB,WAAW;YAClC,OAAO,YAAY,MAAM;QAC3B,EAAE,OAAO,KAAK;YACZ,OAAO;QACT;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,UAAU,MAAM,GAAG,mBAClB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC;gCAAG,WAAU;0CAA8B;;;;;;;;;;;;kCAI9C,8OAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC;4BACd,MAAM,aAAa,kBAAkB,OAAO,SAAS,EAAE;4BACvD,IAAI,kBAAkB;4BACtB,IAAI;gCACF,IAAI,SAAS,WAAW,EAAE;oCACxB,MAAM,cACJ,OAAO,SAAS,WAAW,KAAK,WAC5B,KAAK,KAAK,CAAC,SAAS,WAAW,IAC/B,SAAS,WAAW;oCAC1B,kBAAkB,YAAY,MAAM;gCACtC;4BACF,EAAE,OAAO,KAAK;gCACZ,QAAQ,KAAK,CAAC,8BAA8B;4BAC9C;4BAEA,qBACE,8OAAC;gCAEC,SAAS,IAAM,kBAAkB;gCACjC,WAAW,CAAC,uFAAuF,EACjG,aACI,2CACA,iFACJ;;oCAED,SAAS,aAAa;oCACtB,kBAAkB,mBACjB,8OAAC;wCACC,WAAW,CAAC,uCAAuC,EACjD,aAAa,kBAAkB,iBAC/B;;0DAEF,8OAAC,4MAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;4CACpB;;;;;;;;+BAhBA,SAAS,EAAE;;;;;wBAqBtB;;;;;;;;;;;;0BAKN,8OAAC;gBAAI,WAAU;;oBAEZ,kCACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,8MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC;oDAAG,WAAU;;wDAA+B;wDAC1B,iBAAiB,aAAa;;;;;;;;;;;;;wCAGlD,uBAAuB,mBACtB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,4MAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;8DACrB,8OAAC;;wDACE;wDAAqB;wDACrB,yBAAyB,IAAI,MAAM;wDAAG;;;;;;;;;;;;;;;;;;;8CAM/C,8OAAC;oCACC,SAAS;wCACP,oBAAoB;wCACpB,YAAY;4CACV,GAAG,QAAQ;4CACX,OAAO;4CACP,SAAS;4CACT,MAAM;wCACR;oCACF;oCACA,WAAU;8CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;kCAOrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAiD;;;;;;kDAGlE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,KAAK;wCACrB,UAAU,CAAC,IACT,YAAY;gDAAE,GAAG,QAAQ;gDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4CAAC;wCAEnD,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAGhB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAiD;;;;;;kDAGlE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,YAAY;wCAC5B,UAAU,CAAC,IACT,YAAY;gDAAE,GAAG,QAAQ;gDAAE,cAAc,EAAE,MAAM,CAAC,KAAK;4CAAC;wCAE1D,WAAU;;;;;;;;;;;;;;;;;;kCAMhB,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiD;;;;;;0CAGlE,8OAAC;gCACC,MAAK;gCACL,OAAO,SAAS,OAAO;gCACvB,UAAU,CAAC,IACT,YAAY;wCAAE,GAAG,QAAQ;wCAAE,SAAS,EAAE,MAAM,CAAC,KAAK;oCAAC;gCAErD,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAKhB,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiD;;;;;;0CAGlE,8OAAC;gCACC,OAAO,SAAS,IAAI;gCACpB,UAAU,CAAC,IAAM,YAAY;wCAAE,GAAG,QAAQ;wCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACjE,WAAU;gCACV,aAAY;;;;;;0CAEd,8OAAC;gCAAE,WAAU;;oCAA6B;oCAClB;oCAAe;oCAAG;oCAAc;oCAAG;oCAAS;oCAAE;oCACnE;oCAAe;oCAAG;oCAAsB;oCAAG;;;;;;;;;;;;;kCAIhD,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiD;;;;;;0CAGlE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,MAAK;gDACL,SAAS,IAAM,aAAa,OAAO,EAAE;gDACrC,UAAU,6BAA6B;gDACvC,WAAU;;kEAEV,8OAAC,4MAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;oDAAY;;;;;;;0DAGnC,8OAAC;gDAAK,WAAU;;oDAAwB;oDAClB;oDAA0B;;;;;;;;;;;;;kDAGlD,8OAAC;wCACC,MAAK;wCACL,KAAK;wCACL,UAAU;wCACV,QAAQ;wCACR,WAAU;wCACV,QAAO;;;;;;oCAIR,kBAAkB,MAAM,GAAG,mBAC1B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAE,WAAU;;oDAA6C;oDACnC,kBAAkB,MAAM;oDAAC;;;;;;;0DAEhD,8OAAC;gDAAI,WAAU;0DACZ,kBAAkB,GAAG,CAAC,CAAC,MAAM,sBAC5B,8OAAC;wDAEC,WAAU;;0EAEV,8OAAC;gEAAI,WAAU;;kFACb,8OAAC,4MAAA,CAAA,YAAS;wEAAC,WAAU;;;;;;kFACrB,8OAAC;wEAAK,WAAU;kFACb,KAAK,IAAI;;;;;;kFAEZ,8OAAC;wEAAK,WAAU;;4EAAwB;4EACpC,CAAC,KAAK,IAAI,GAAG,OAAO,IAAI,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;0EAG3C,8OAAC;gEACC,SAAS,IAAM,uBAAuB;gEACtC,WAAU;0EAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;oEAAC,WAAU;;;;;;;;;;;;uDAhBV;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCA2BnB,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiD;;;;;;0CAGlE,8OAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAU;iCAAS,CAAC,GAAG,CAAC,CAAC,qBACzB,8OAAC;wCAAiB,WAAU;;0DAC1B,8OAAC;gDACC,MAAK;gDACL,OAAO;gDACP,SAAS,SAAS,QAAQ,KAAK;gDAC/B,UAAU,CAAC,IACT,YAAY;wDAAE,GAAG,QAAQ;wDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;oDAAC;gDAEtD,WAAU;;;;;;0DAEZ,8OAAC;gDAAK,WAAU;0DACb,SAAS,WAAW,oBAAoB;;;;;;;uCAXjC;;;;;;;;;;4BAiBf,SAAS,QAAQ,KAAK,0BACrB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,MAAK;gDACL,OAAO,SAAS,UAAU,CAAC,IAAI,CAAC;gDAChC,UAAU,CAAC,IACT,YAAY;wDACV,GAAG,QAAQ;wDACX,YAAY,EAAE,MAAM,CAAC,KAAK,CACvB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;oDACtB;gDAEF,WAAU;gDACV,aAAY;;;;;;;;;;;;kDAGhB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,MAAK;wDACL,OAAO,SAAS,UAAU;wDAC1B,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,YAAY,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAExD,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAGhB,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,MAAK;wDACL,MAAK;wDACL,OAAO,SAAS,QAAQ;wDACxB,UAAU,CAAC,IACT,YAAY;gEAAE,GAAG,QAAQ;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAEtD,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAGhB,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,OAAO,SAAS,gBAAgB;wDAChC,UAAU,CAAC,IACT,YAAY;gEACV,GAAG,QAAQ;gEACX,kBAAkB,EAAE,MAAM,CAAC,KAAK;4DAClC;wDAEF,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAG;;;;;;0EACjB,8OAAC;gEAAO,OAAM;0EAAW;;;;;;0EACzB,8OAAC;gEAAO,OAAM;0EAAS;;;;;;0EACvB,8OAAC;gEAAO,OAAM;0EAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAOlC,SAAS,QAAQ,KAAK,0BACrB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO,SAAS,gBAAgB;wCAChC,UAAU,CAAC,IACT,YAAY;gDAAE,GAAG,QAAQ;gDAAE,kBAAkB,EAAE,MAAM,CAAC,KAAK;4CAAC;wCAE9D,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAOpB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAU;;kDAEV,8OAAC,gMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;oCAAY;;;;;;;0CAG7B,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAU;;kDAEV,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCACf,UAAU,eAAe;;;;;;;;;;;;;;;;;;;YAM/B,6BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAkC;;;;;;8CAChD,8OAAC;oCACC,SAAS,IAAM,eAAe;oCAC9B,WAAU;8CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAGjB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAA2C;;;;;;sDAGxD,8OAAC;4CAAE,WAAU;sDAAuB,YAAY,OAAO;;;;;;;;;;;;8CAEzD,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAA2C;;;;;;sDAGxD,8OAAC;4CACC,WAAU;4CACV,yBAAyB;gDAAE,QAAQ,YAAY,IAAI;4CAAC;;;;;;;;;;;;gCAKvD,YAAY,WAAW,IACtB,YAAY,WAAW,CAAC,MAAM,GAAG,mBAC/B,8OAAC;;sDACC,8OAAC;4CAAE,WAAU;sDAA2C;;;;;;sDAGxD,8OAAC;4CAAI,WAAU;sDACZ,YAAY,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,sBACxC,8OAAC;oDAEC,WAAU;;sEAEV,8OAAC,4MAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;sEACrB,8OAAC;sEAAM,WAAW,IAAI;;;;;;sEACtB,8OAAC;4DAAK,WAAU;;gEAAwB;gEACpC,WAAW,IAAI;gEAAC;;;;;;;;mDANf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmB/B;uCAEe","debugId":null}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/email-management/Templates.js"],"sourcesContent":["// ===== Templates.js (Frontend) =====\r\nimport { useState, useRef } from \"react\";\r\nimport { Mail, Trash2, Save, Edit, Paperclip, X } from \"lucide-react\";\r\nimport { useEmail } from \"../../context/EmailContext\";\r\n\r\nconst Templates = () => {\r\n  const { templates, createTemplate, updateTemplate, deleteTemplate, loading } =\r\n    useEmail();\r\n  const fileInputRef = useRef(null);\r\n  const [form, setForm] = useState({\r\n    template_name: \"\",\r\n    subject: \"\",\r\n    body: \"\",\r\n    category: \"general\",\r\n  });\r\n  const [editing, setEditing] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [existingAttachments, setExistingAttachments] = useState([]);\r\n  const [removedAttachments, setRemovedAttachments] = useState([]);\r\n\r\n  const handleFileSelect = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setSelectedFiles((prev) => [...prev, ...files]);\r\n  };\r\n\r\n  const removeNewFile = (index) => {\r\n    setSelectedFiles((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const removeExistingAttachment = (index) => {\r\n    const removed = existingAttachments[index];\r\n    setRemovedAttachments((prev) => [...prev, removed.filename]);\r\n    setExistingAttachments((files) => files.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!form.template_name || !form.subject || !form.body) {\r\n      alert(\"Please fill all fields\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"template_name\", form.template_name);\r\n    formData.append(\"subject\", form.subject);\r\n    formData.append(\"body\", form.body);\r\n    formData.append(\"category\", form.category);\r\n\r\n    selectedFiles.forEach((file) => {\r\n      formData.append(\"attachments\", file);\r\n    });\r\n\r\n    if (editing) {\r\n      if (existingAttachments.length > 0) {\r\n        formData.append(\"keep_existing_attachments\", \"true\");\r\n      }\r\n      if (removedAttachments.length > 0) {\r\n        formData.append(\r\n          \"removed_attachments\",\r\n          JSON.stringify(removedAttachments)\r\n        );\r\n      }\r\n    }\r\n\r\n    const result = editing\r\n      ? await updateTemplate(editing.id, formData)\r\n      : await createTemplate(formData);\r\n\r\n    if (result.success) {\r\n      alert(result.message);\r\n      resetForm();\r\n    } else {\r\n      alert(\"Failed to save: \" + result.message);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setForm({\r\n      template_name: \"\",\r\n      subject: \"\",\r\n      body: \"\",\r\n      category: \"general\",\r\n    });\r\n    setSelectedFiles([]);\r\n    setExistingAttachments([]);\r\n    setRemovedAttachments([]);\r\n    setEditing(null);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!confirm(\"Delete this template?\")) return;\r\n    const result = await deleteTemplate(id);\r\n    if (result.success) {\r\n      alert(\"Template deleted\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (template) => {\r\n    setEditing(template);\r\n    setForm({\r\n      template_name: template.template_name,\r\n      subject: template.subject,\r\n      body: template.body,\r\n      category: template.category,\r\n    });\r\n\r\n    // Always reset attachment states first\r\n    setExistingAttachments([]);\r\n    setSelectedFiles([]);\r\n    setRemovedAttachments([]);\r\n\r\n    // Then set attachments if they exist\r\n    if (template.attachments) {\r\n      try {\r\n        // Check if it's already an object/array or a string\r\n        const attachments =\r\n          typeof template.attachments === \"string\"\r\n            ? JSON.parse(template.attachments)\r\n            : template.attachments;\r\n        setExistingAttachments(attachments);\r\n      } catch (err) {\r\n        console.error(\"Error parsing attachments:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Form */}\r\n      <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\r\n        <h3 className=\"text-lg font-bold text-gray-900 mb-4\">\r\n          {editing ? \"Edit Template\" : \"Create New Template\"}\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                Template Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={form.template_name}\r\n                onChange={(e) =>\r\n                  setForm({ ...form, template_name: e.target.value })\r\n                }\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Welcome Email\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={form.category}\r\n                onChange={(e) => setForm({ ...form, category: e.target.value })}\r\n                className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"general\">General</option>\r\n                <option value=\"placement\">Placement</option>\r\n                <option value=\"event\">Event</option>\r\n                <option value=\"reminder\">Reminder</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Subject\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={form.subject}\r\n              onChange={(e) => setForm({ ...form, subject: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Welcome to our platform\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Body (HTML)\r\n            </label>\r\n            <textarea\r\n              value={form.body}\r\n              onChange={(e) => setForm({ ...form, body: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded-lg px-4 py-2.5 h-32 font-mono text-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              placeholder=\"Hello {first_name}...\"\r\n            />\r\n          </div>\r\n\r\n          {/* File Attachments Section */}\r\n          <div>\r\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n              Attachments\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg flex items-center gap-2 transition-colors\"\r\n                >\r\n                  <Paperclip className=\"w-4 h-4\" />\r\n                  Add Files\r\n                </button>\r\n                <span className=\"text-sm text-gray-500\">\r\n                  Max 5 files, 10MB each\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                onChange={handleFileSelect}\r\n                multiple\r\n                className=\"hidden\"\r\n                accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png\"\r\n              />\r\n\r\n              {/* Existing Attachments (when editing) */}\r\n              {existingAttachments.length > 0 && (\r\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <p className=\"text-xs font-semibold text-blue-900 mb-2\">\r\n                    Existing Attachments\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    {existingAttachments.map((file, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex items-center justify-between bg-white p-2 rounded\"\r\n                      >\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Paperclip className=\"w-4 h-4 text-blue-500\" />\r\n                          <span className=\"text-sm text-gray-700\">\r\n                            {file.filename}\r\n                          </span>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => removeExistingAttachment(index)}\r\n                          className=\"p-1 hover:bg-red-100 rounded-full transition-colors\"\r\n                        >\r\n                          <X className=\"w-4 h-4 text-red-500\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* New Selected Files */}\r\n              {selectedFiles.length > 0 && (\r\n                <div className=\"mt-3 p-3 bg-green-50 rounded-lg border border-green-200\">\r\n                  <p className=\"text-xs font-semibold text-green-900 mb-2\">\r\n                    New Files to Upload\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    {selectedFiles.map((file, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex items-center justify-between bg-white p-2 rounded\"\r\n                      >\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Paperclip className=\"w-4 h-4 text-green-500\" />\r\n                          <span className=\"text-sm text-gray-700\">\r\n                            {file.name}\r\n                          </span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            ({(file.size / 1024 / 1024).toFixed(2)} MB)\r\n                          </span>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => removeNewFile(index)}\r\n                          className=\"p-1 hover:bg-red-100 rounded-full transition-colors\"\r\n                        >\r\n                          <X className=\"w-4 h-4 text-red-500\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-3\">\r\n            <button\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n              className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-lg hover:from-blue-700 hover:to-indigo-700 disabled:opacity-50 flex items-center gap-2 font-medium transition-all shadow-lg\"\r\n            >\r\n              <Save className=\"w-4 h-4\" />\r\n              {editing ? \"Update\" : \"Save\"} Template\r\n            </button>\r\n            {editing && (\r\n              <button\r\n                onClick={resetForm}\r\n                className=\"px-6 py-2.5 bg-gray-500 text-white rounded-lg hover:bg-gray-600 font-medium transition-all\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Templates List */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {templates.map((template) => (\r\n          <div\r\n            key={template.id}\r\n            className=\"bg-white rounded-xl border border-gray-200 p-5 hover:shadow-md transition-all\"\r\n          >\r\n            <div className=\"flex justify-between items-start mb-3\">\r\n              <div className=\"flex-1\">\r\n                <h4 className=\"font-bold text-gray-900 mb-1\">\r\n                  {template.template_name}\r\n                </h4>\r\n                <p className=\"text-sm text-gray-600 mb-2\">{template.subject}</p>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"inline-block px-3 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">\r\n                    {template.category}\r\n                  </span>\r\n                  {template.attachments && (\r\n                    <span className=\"inline-flex items-center gap-1 px-3 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">\r\n                      <Paperclip className=\"w-3 h-3\" />\r\n                      {/* Safely parse attachments */}\r\n                      {(() => {\r\n                        try {\r\n                          const attachments =\r\n                            typeof template.attachments === \"string\"\r\n                              ? JSON.parse(template.attachments)\r\n                              : template.attachments;\r\n                          return `${attachments.length} files`;\r\n                        } catch (err) {\r\n                          console.error(\"Error parsing attachments:\", err);\r\n                          return \"0 files\";\r\n                        }\r\n                      })()}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => handleEdit(template)}\r\n                  className=\"p-2 text-green-600 hover:bg-green-50 rounded-lg transition-colors\"\r\n                  title=\"Edit\"\r\n                >\r\n                  <Edit className=\"w-4 h-4\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(template.id)}\r\n                  className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\r\n                  title=\"Delete\"\r\n                >\r\n                  <Trash2 className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {templates.length === 0 && (\r\n          <div className=\"col-span-2 text-center py-12 text-gray-500\">\r\n            <Mail className=\"w-12 h-12 mx-auto mb-3 opacity-30\" />\r\n            <p>No templates yet. Create one above!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Templates;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2236, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/app/email-management/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Send, Mail, Users, ArrowLeft } from \"lucide-react\";\r\nimport ComposeEmail from \"./ComposeEmail\";\r\nimport Templates from \"./Templates\";\r\nimport CampaignHistory from \"./CampaignHistory\";\r\nimport { EmailProvider } from \"../../context/EmailContext\";\r\n\r\nconst EmailCampaignPage = () => {\r\n  const [activeTab, setActiveTab] = useState(\"compose\");\r\n\r\n  const tabs = [\r\n    { id: \"compose\", label: \"Compose Email\", icon: Send },\r\n    { id: \"templates\", label: \"Templates\", icon: Mail },\r\n    { id: \"history\", label: \"History\", icon: Users },\r\n  ];\r\n\r\n  return (\r\n    <EmailProvider>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n        <div className=\"max-w-7xl mx-auto p-6\">\r\n          {/* Header Section */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6\">\r\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n              <div className=\"flex items-start gap-4\">\r\n                <button\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                  className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                >\r\n                  <ArrowLeft className=\"h-6 w-6 text-gray-600\" />\r\n                </button>\r\n                <div>\r\n                  <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                    Email Campaign Manager\r\n                  </h1>\r\n                  <p className=\"text-gray-600\">\r\n                    Create, manage, and send official placement communications\r\n                    using templates\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tabs Navigation */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 mb-6 overflow-hidden\">\r\n            <div className=\"flex border-b border-gray-200\">\r\n              {tabs.map((tab) => {\r\n                const Icon = tab.icon;\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id)}\r\n                    className={`flex-1 px-6 py-4 font-semibold text-sm flex items-center justify-center gap-2 transition-all ${\r\n                      activeTab === tab.id\r\n                        ? \"bg-gradient-to-r from-slate-50 to-slate-100 text-blue-600 border-b-2 border-blue-600\"\r\n                        : \"text-gray-600 hover:bg-gray-50\"\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    {tab.label}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Content Section */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n            {activeTab === \"compose\" && <ComposeEmail />}\r\n            {activeTab === \"templates\" && <Templates />}\r\n            {activeTab === \"history\" && <CampaignHistory />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </EmailProvider>\r\n  );\r\n};\r\n\r\nexport default EmailCampaignPage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAEA;AAPA;;;;;;;;AASA,MAAM,oBAAoB;IACxB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,OAAO;QACX;YAAE,IAAI;YAAW,OAAO;YAAiB,MAAM,kMAAA,CAAA,OAAI;QAAC;QACpD;YAAE,IAAI;YAAa,OAAO;YAAa,MAAM,kMAAA,CAAA,OAAI;QAAC;QAClD;YAAE,IAAI;YAAW,OAAO;YAAW,MAAM,oMAAA,CAAA,QAAK;QAAC;KAChD;IAED,qBACE,8OAAC,uHAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAO,OAAO,QAAQ,CAAC,IAAI,GAAG;wCACvC,WAAU;kDAEV,cAAA,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;;;;;;kDAEvB,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAwC;;;;;;0DAGtD,8OAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAUrC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACZ,KAAK,GAAG,CAAC,CAAC;gCACT,MAAM,OAAO,IAAI,IAAI;gCACrB,qBACE,8OAAC;oCAEC,SAAS,IAAM,aAAa,IAAI,EAAE;oCAClC,WAAW,CAAC,6FAA6F,EACvG,cAAc,IAAI,EAAE,GAChB,yFACA,kCACJ;;sDAEF,8OAAC;4CAAK,WAAU;;;;;;wCACf,IAAI,KAAK;;mCATL,IAAI,EAAE;;;;;4BAYjB;;;;;;;;;;;kCAKJ,8OAAC;wBAAI,WAAU;;4BACZ,cAAc,2BAAa,8OAAC,0IAAA,CAAA,UAAY;;;;;4BACxC,cAAc,6BAAe,8OAAC,uIAAA,CAAA,UAAS;;;;;4BACvC,cAAc,2BAAa,8OAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMzC;uCAEe","debugId":null}}]
}