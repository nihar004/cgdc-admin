{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Acer/Desktop/cgdc-admin/frontend/context/CompaniesContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useBatchContext } from \"./BatchContext\";\r\nimport { toast } from \"react-hot-toast\";\r\nconst backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL;\r\n\r\nconst CompaniesContext = createContext();\r\n\r\nexport function CompaniesProvider({ children }) {\r\n  const { selectedBatch } = useBatchContext();\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sectorFilter, setSectorFilter] = useState(\"all\");\r\n  const [activeTab, setActiveTab] = useState(\"all\");\r\n  const [specializationFilter, setSpecializationFilter] = useState(\"all\");\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [deleteType, setDeleteType] = useState(\"company\");\r\n  const [itemToDelete, setItemToDelete] = useState(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [showFormModal, setShowFormModal] = useState(false);\r\n  const [editingCompany, setEditingCompany] = useState(null);\r\n  const [showEligibilityModal, setShowEligibilityModal] = useState(false);\r\n  const [selectedCompanyForEligibility, setSelectedCompanyForEligibility] =\r\n    useState(null);\r\n\r\n  const formatPackage = (amount) => {\r\n    if (amount == null || isNaN(amount)) {\r\n      return \"Not Disclosed\";\r\n    }\r\n\r\n    if (amount >= 10000000) {\r\n      return `₹${(amount / 10000000).toFixed(1)} Cr`;\r\n    } else if (amount >= 100000) {\r\n      return `₹${(amount / 100000).toFixed(1)} LPA`;\r\n    }\r\n    return `₹${amount.toLocaleString()}`;\r\n  };\r\n\r\n  // Fetch companies data\r\n  const fetchCompanies = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `${backendUrl}/companies/batch/${selectedBatch}`\r\n      );\r\n      setCompanies(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"Failed to fetch companies\");\r\n      console.error(\"Error fetching companies:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to determine company status\r\n  const getCompanyStatus = (company) => {\r\n    const now = new Date();\r\n    const scheduledDate = new Date(company.scheduled_visit);\r\n    const actualDate = company.actual_arrival\r\n      ? new Date(company.actual_arrival)\r\n      : null;\r\n\r\n    if (actualDate) return \"JD Shared\";\r\n    if (scheduledDate < now) return \"Delayed\";\r\n    return \"upcoming\";\r\n  };\r\n\r\n  // Updated filter companies logic\r\n  const filteredCompanies = companies.filter((company) => {\r\n    // Search filter\r\n    const matchesSearch =\r\n      company.company_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      company.company_description\r\n        ?.toLowerCase()\r\n        .includes(searchTerm.toLowerCase()) ||\r\n      company.sector?.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesSector =\r\n      sectorFilter === \"all\" || company.sector === sectorFilter;\r\n\r\n    // Status filter\r\n    const status = getCompanyStatus(company);\r\n    const matchesStatus =\r\n      activeTab === \"all\" ||\r\n      (activeTab === \"marquee\" && company.is_marquee) ||\r\n      activeTab === status;\r\n\r\n    // Updated specialization filter logic\r\n    const matchesSpecialization =\r\n      specializationFilter === \"all\" ||\r\n      (company.allowed_specializations &&\r\n        specializationFilter\r\n          .split(\",\")\r\n          .every((spec) => company.allowed_specializations.includes(spec)));\r\n\r\n    return (\r\n      matchesSearch && matchesSector && matchesStatus && matchesSpecialization\r\n    );\r\n  });\r\n\r\n  // Calculate statistics\r\n  const stats = {\r\n    total: companies.length,\r\n    marquee: companies.filter((company) => company.is_marquee).length,\r\n    jd_shared: companies.filter(\r\n      (company) => getCompanyStatus(company) === \"JD Shared\"\r\n    ).length,\r\n    upcoming: companies.filter(\r\n      (company) => getCompanyStatus(company) === \"upcoming\"\r\n    ).length,\r\n    delayed: companies.filter(\r\n      (company) => getCompanyStatus(company) === \"Delayed\"\r\n    ).length,\r\n  };\r\n\r\n  // Add useEffect to fetch companies when selectedBatch changes\r\n  useEffect(() => {\r\n    if (selectedBatch) {\r\n      fetchCompanies();\r\n    }\r\n  }, [selectedBatch, showEligibilityModal]);\r\n\r\n  // Delete company\r\n  const handleDeleteCompany = async (companyId) => {\r\n    try {\r\n      await axios.delete(\r\n        `${backendUrl}/companies/${companyId}/batch/${selectedBatch}`\r\n      );\r\n\r\n      // Optimistic update\r\n      setCompanies(companies.filter((company) => company.id !== companyId));\r\n\r\n      // Show success toast\r\n      toast.success(\"Company deleted successfully!\", {\r\n        duration: 4000,\r\n        position: \"top-right\",\r\n      });\r\n\r\n      // Silent re-sync\r\n      fetchCompanies();\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err.response?.data?.error || \"Failed to delete company\";\r\n      toast.error(errorMessage, {\r\n        duration: 4000,\r\n        position: \"top-right\",\r\n      });\r\n      console.error(\"Error deleting company:\", err);\r\n    }\r\n  };\r\n\r\n  // TODO\r\n  // Delete position\r\n  const handleDeletePosition = async (positionId) => {\r\n    try {\r\n      await axios.delete(`${backendUrl}/companies/position/${positionId}`);\r\n      // Show success toast\r\n      toast.success(\"Position deleted successfully!\", {\r\n        duration: 4000,\r\n        position: \"top-right\",\r\n      });\r\n\r\n      // Refresh companies data\r\n      fetchCompanies();\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err.response?.data?.error || \"Failed to delete position\";\r\n      toast.error(errorMessage, {\r\n        duration: 4000,\r\n        position: \"top-right\",\r\n      });\r\n      console.error(\"Error deleting position:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (item, type = \"company\") => {\r\n    setDeleteType(type);\r\n    setItemToDelete(item);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    setIsDeleting(true);\r\n    try {\r\n      if (deleteType === \"company\") {\r\n        await handleDeleteCompany(itemToDelete.id);\r\n      } else {\r\n        await handleDeletePosition(itemToDelete.id);\r\n      }\r\n      setShowDeleteModal(false);\r\n      setItemToDelete(null);\r\n    } catch (error) {\r\n      console.error(\"Delete failed:\", error);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CompaniesContext.Provider\r\n      value={{\r\n        formatPackage,\r\n        selectedCompany,\r\n        setSelectedCompany,\r\n        companies,\r\n        setCompanies,\r\n        fetchCompanies,\r\n        loading,\r\n        setLoading,\r\n        error,\r\n        setError,\r\n        selectedBatch,\r\n        searchTerm,\r\n        setSearchTerm,\r\n        sectorFilter,\r\n        setSectorFilter,\r\n        filteredCompanies,\r\n        activeTab,\r\n        setActiveTab,\r\n        stats,\r\n        getCompanyStatus,\r\n        specializationFilter,\r\n        setSpecializationFilter,\r\n        showDeleteModal,\r\n        setShowDeleteModal,\r\n        deleteType,\r\n        setDeleteType,\r\n        itemToDelete,\r\n        setItemToDelete,\r\n        isDeleting,\r\n        setIsDeleting,\r\n        handleDeleteClick,\r\n        handleDeleteConfirm,\r\n        showFormModal,\r\n        setShowFormModal,\r\n        editingCompany,\r\n        setEditingCompany,\r\n        showEligibilityModal,\r\n        setShowEligibilityModal,\r\n        selectedCompanyForEligibility,\r\n        setSelectedCompanyForEligibility,\r\n      }}\r\n    >\r\n      {children}\r\n    </CompaniesContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCompaniesContext = () => {\r\n  const context = useContext(CompaniesContext);\r\n  if (!context) {\r\n    throw new Error(\r\n      \"useCompaniesContext must be used within a CompaniesProvider\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}